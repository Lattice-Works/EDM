{
    "associationTypes": [
        {
            "entityType": {
                "id": "44740981-b05c-43a1-91a7-e62e4737fe52",
                "type": {
                    "namespace": "criminaljustice",
                    "name": "arrestedin"
                },
                "title": "Arrested In",
                "description": "An arrest (associated with an incident, case, or booking)",
                "schemas": [
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "c9309ba8-a674-48c5-bfee-8bb797f9fe31",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                ],
                "properties": [
                    "c9309ba8-a674-48c5-bfee-8bb797f9fe31",
                    "c16ab352-3099-4579-b900-40d54fec44c6",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "1fe28610-d4f6-4608-99d4-0c2b6e805703",
                    "d673e32c-6e67-4885-8e30-47e98f6229f2",
                    "c228a9c8-e0f3-4bb0-8b09-78b2c6162caa",
                    "c97555a0-ed79-4944-a000-ab961da3ab48",
                    "4d5db4fe-a0c8-45f8-af6d-cd7cd4cab86c",
                    "7c0f56bb-e77c-4a2a-8e17-4542849aeeda",
                    "8ab6e5e1-9ef7-4e83-94f1-2ad685c75915",
                    "80c3ffc7-5a8a-4547-8d60-dfb0b06e92b4",
                    "30273603-b5be-4277-8ef3-a5540447ca5f",
                    "25431c60-6c26-4210-a422-569c5226ba7e",
                    "8388b7cc-19eb-411f-9af1-57999eeb27e0",
                    "5d37978a-b658-462a-8903-4a9a2d2d69e3",
                    "88f6294a-8b73-45e3-a0ec-8ebfb75a930e",
                    "57d24585-7aec-43b7-b0f9-4162321366de",
                    "e6eafc89-f9e7-436b-b267-054854c4d564",
                    "4cc82f90-fb84-426d-acb0-530c96008b1d",
                    "1956bf5b-a597-4ba4-bcef-5b286ac83339",
                    "1a99a9f7-c9fa-4cc9-9e29-1370c440f392"
                ],
                "propertyTags": {
                    "30273603-b5be-4277-8ef3-a5540447ca5f": [
                        "timeline",
                        "eventdate"
                    ]
                },
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "4c21bcc3-0d4c-40ba-95cd-275a763f94ef"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "afe9d19d-99c5-481c-867d-42f01ce8143b",
                "type": {
                    "namespace": "criminaljustice",
                    "name": "bookedin"
                },
                "title": "Booking (assn.)",
                "description": "A booking (associated with an incident, case, or jail stay).",
                "schemas": [
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "c228a9c8-e0f3-4bb0-8b09-78b2c6162caa",
                    "c97555a0-ed79-4944-a000-ab961da3ab48",
                    "d673e32c-6e67-4885-8e30-47e98f6229f2",
                    "c16ab352-3099-4579-b900-40d54fec44c6",
                    "e7ea04e3-5047-4d9c-9bbe-b0bffe2c9cd1",
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                    "57d24585-7aec-43b7-b0f9-4162321366de",
                    "8ce79ba8-b498-460a-a1b3-325954bb6d4f",
                    "f7f01aa6-159a-435f-901b-44e62679bc51"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "415d008f-4310-4477-b333-404e6b11e537",
                "e13743e7-babd-49a0-93e5-f93c8b7502cc"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "3cc9e141-df51-4d12-aebf-716ebc613b65",
                "type": {
                    "namespace": "criminaljustice",
                    "name": "initiated"
                },
                "title": "Initiated (cj)",
                "description": "Association between a call for service (CFS) and a CFS origin.",
                "schemas": [],
                "key": [
                    "0d240f48-9347-46f7-a79e-b11ffdece2a8"
                ],
                "properties": [
                    "0d240f48-9347-46f7-a79e-b11ffdece2a8"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "461c2d06-d7d6-4b5d-aa9e-3d0a4f9a6b6d"
            ],
            "dst": [
                "963b597b-b28d-4f59-b2e6-4d443499e464"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "014aa343-58e4-4b7b-93e2-ae4c9035f6a0",
                "type": {
                    "namespace": "demographics",
                    "name": "haskinties"
                },
                "title": "Has kin ties to",
                "description": "Association linking an individual to a household.",
                "schemas": [
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "6606dbf5-3823-457e-a0bd-adad141e46e0",
                    "c22b7629-4323-4d69-94fd-dae4d64df69c",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "ee29fb9e-dad9-4b9a-a93a-e30d0c488266"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "713885e6-566c-478c-a1c3-bc8a6d5e149e",
                "type": {
                    "namespace": "economy",
                    "name": "worksas"
                },
                "title": "Works as (-d)",
                "description": "Association between person and personnel/employee entity, noting when the person first started working with the agency or organization.",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "13925c02-f0ff-4052-9c09-161f39ea5ec2"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "1bbc14f8-06cf-4cb0-a103-68ba9df08867",
                "57d33e0a-6c84-4447-9d36-d39fb19efa6f"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "60555acd-8e50-41f9-ac95-630e8ea3ff8b",
                "type": {
                    "namespace": "general",
                    "name": "AssessedBy"
                },
                "title": "Assessed By (-d)",
                "description": "Assessed By",
                "schemas": [],
                "key": [
                    "1c92fc4e-942a-4e1e-8373-7350dcda0344",
                    "20b7d73c-f569-4663-89fd-6b46699425e4",
                    "3e11f6cc-c8f5-4d3d-aea7-76a8e5269300",
                    "879f46a2-e432-4808-8829-98eeb2f9dcf6"
                ],
                "properties": [
                    "1c92fc4e-942a-4e1e-8373-7350dcda0344",
                    "20b7d73c-f569-4663-89fd-6b46699425e4",
                    "3e11f6cc-c8f5-4d3d-aea7-76a8e5269300",
                    "879f46a2-e432-4808-8829-98eeb2f9dcf6",
                    "adf443f7-eae6-4276-8f4b-55cc5b705880",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [],
            "dst": [],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "09e3ab1f-fa13-4371-93d7-e7adf61c7876",
                "type": {
                    "namespace": "general",
                    "name": "DiagnosedWith"
                },
                "title": "DiagnosedWith (-d)",
                "description": "An association between a diagnosis and patient. NOTE this will eventually be renamed \"general.assessedwith\"",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "0ee66bf8-7158-4b33-9cbf-63682291536c",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                ],
                "properties": [
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "0ee66bf8-7158-4b33-9cbf-63682291536c",
                    "4cc82f90-fb84-426d-acb0-530c96008b1d"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "639269b8-95c2-420d-85e0-21121e51c85d",
                "type": {
                    "namespace": "general",
                    "name": "Includes_deprecated"
                },
                "title": "Includes (-d) ",
                "description": "An association where an entity includes another entity",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "14395b33-f0b3-4d1c-a415-cbcfb2ce3965",
                    "1c92fc4e-942a-4e1e-8373-7350dcda0344",
                    "2b3c3c14-9e9f-4f0d-a6a6-72e0cb61e33b",
                    "3149240c-7b95-4bbb-81ae-53b8c741cc2a",
                    "3e11f6cc-c8f5-4d3d-aea7-76a8e5269300",
                    "4086d111-ab50-4da9-ac5a-a68b660548a4",
                    "51374bce-3c0d-4222-a057-000f670294e7",
                    "54c6076e-bac4-47fe-a19e-3ebd9da28519",
                    "59666069-adae-4974-b328-c96340c4af75",
                    "5c480eb6-f799-46d0-98ef-c5f43678a616",
                    "60067ff0-31bb-47d9-97f1-fd3b89e36045",
                    "60bcb7e1-297a-4631-bb69-11d54362fa6a",
                    "879f46a2-e432-4808-8829-98eeb2f9dcf6",
                    "937cad34-5c38-44bd-9a12-e5237fd57a21",
                    "aff55df1-9a46-4229-b17c-25e56c5ec3bc",
                    "d5b0adba-b10c-415e-b11b-06dd4cbfe273",
                    "dc583559-550f-40a3-8c89-81a6170ab636",
                    "e4460db5-2d4d-435d-a03b-30a5276088a3"
                ],
                "properties": [
                    "14395b33-f0b3-4d1c-a415-cbcfb2ce3965",
                    "1c92fc4e-942a-4e1e-8373-7350dcda0344",
                    "2b3c3c14-9e9f-4f0d-a6a6-72e0cb61e33b",
                    "3149240c-7b95-4bbb-81ae-53b8c741cc2a",
                    "3e11f6cc-c8f5-4d3d-aea7-76a8e5269300",
                    "4086d111-ab50-4da9-ac5a-a68b660548a4",
                    "51374bce-3c0d-4222-a057-000f670294e7",
                    "54c6076e-bac4-47fe-a19e-3ebd9da28519",
                    "59666069-adae-4974-b328-c96340c4af75",
                    "5c480eb6-f799-46d0-98ef-c5f43678a616",
                    "60067ff0-31bb-47d9-97f1-fd3b89e36045",
                    "60bcb7e1-297a-4631-bb69-11d54362fa6a",
                    "879f46a2-e432-4808-8829-98eeb2f9dcf6",
                    "937cad34-5c38-44bd-9a12-e5237fd57a21",
                    "aff55df1-9a46-4229-b17c-25e56c5ec3bc",
                    "d5b0adba-b10c-415e-b11b-06dd4cbfe273",
                    "dc583559-550f-40a3-8c89-81a6170ab636",
                    "e4460db5-2d4d-435d-a03b-30a5276088a3",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "8d713e79-21ff-41c3-9bcb-6d460f02a845"
            ],
            "dst": [
                "08f9f560-98b9-4804-a7b8-f286f4b144fb",
                "5b16b066-99a7-4dbc-81c3-2b10ea12929c",
                "7229eb9e-f1bd-4bc9-b0aa-8de827ca968a",
                "7c3bf67e-888f-472c-9555-119d7d91828e",
                "dbd01c6f-42bb-46b1-9401-ac92c0592498",
                "2150bad7-7c4f-47fc-9f9c-db6cbed102df",
                "0d02fc2b-561d-4de9-ac14-611b54a99eb9"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "184f05d9-8fd3-45c8-94e0-d959b0262f12",
                "type": {
                    "namespace": "general",
                    "name": "InsuredBy"
                },
                "title": "Insured By (-d)",
                "description": "Insured By",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "adf443f7-eae6-4276-8f4b-55cc5b705880",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "14acfc18-6d46-4ba2-a09d-3dc38c4c202b"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "21aa7d22-17a6-4380-99cb-bbecb08bd196",
                "type": {
                    "namespace": "general",
                    "name": "ReferredBy_deprecated"
                },
                "title": "ReferredBy (-d)",
                "description": "An association linking patients and referral information.",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "20b7d73c-f569-4663-89fd-6b46699425e4",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                ],
                "properties": [
                    "20b7d73c-f569-4663-89fd-6b46699425e4",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "4dc7e153-a383-4059-99d0-4d0a6caeb5f8",
                "type": {
                    "namespace": "general",
                    "name": "ReviewedBy"
                },
                "title": "Reviewed By",
                "description": "An association between a provider",
                "schemas": [],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "eb528589-882c-462a-b057-45f58d7565fc",
                "type": {
                    "namespace": "general",
                    "name": "Taking_deprecated"
                },
                "title": "Taking (-d)",
                "description": "An association describe that location at which an entity mails",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "14395b33-f0b3-4d1c-a415-cbcfb2ce3965",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                ],
                "properties": [
                    "14395b33-f0b3-4d1c-a415-cbcfb2ce3965",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "7c3bf67e-888f-472c-9555-119d7d91828e"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "c5825d85-c832-4363-8259-9bad7135db34",
                "type": {
                    "namespace": "general",
                    "name": "Used"
                },
                "title": "Used (-d)",
                "description": "An association describe that location at which an entity mails",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "d5b0adba-b10c-415e-b11b-06dd4cbfe273"
                ],
                "properties": [
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "d5b0adba-b10c-415e-b11b-06dd4cbfe273",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "c2845f96-e252-491c-b49c-da0810d3deaa",
                "type": {
                    "namespace": "general",
                    "name": "appearsin"
                },
                "title": "Appears In",
                "description": "An association wherein one entity appears in another entity or event.",
                "schemas": [],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                    "915df70e-ebe3-4b59-9d4e-59c0609a5577",
                    "f7af5fb1-92de-495d-ac01-d3ab82081eb8",
                    "39dc4d54-8fac-46ad-ae3d-e538123a9b30",
                    "15092289-b597-403a-b238-325ecdeb1974",
                    "c16ab352-3099-4579-b900-40d54fec44c6",
                    "919bfdc2-5da7-4e73-8418-081504e14309",
                    "21c3cfd0-db1c-4641-b248-b3fbd7142658",
                    "cdad2fdb-5696-4676-8afa-144f09aa011e",
                    "88626667-643d-4735-a2de-6471444f9b55",
                    "25431c60-6c26-4210-a422-569c5226ba7e",
                    "736818e8-0ad9-4c83-8b53-3e00005fed2b",
                    "0b68c2cd-4c03-43e6-b1c8-fe6187b0eae3",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "1256d3f4-2a83-44d0-8b1d-389803b28314",
                    "1a99a9f7-c9fa-4cc9-9e29-1370c440f392"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "5386b226-1544-455f-b330-1107399b1ed2",
                "7de3bc94-4571-4a3a-871f-3822e98ab60d",
                "1bbc14f8-06cf-4cb0-a103-68ba9df08867",
                "0257769a-7b29-4ee3-9d64-dc2e7fcbab60",
                "352f83ba-55bd-4a45-becc-e302667ab865",
                "395da81a-0bf5-473d-92b3-11f47fdd5d9f"
            ],
            "dst": [
                "161ca75e-8a16-41c1-8b02-7b1649c3a2d7",
                "352f83ba-55bd-4a45-becc-e302667ab865",
                "415d008f-4310-4477-b333-404e6b11e537",
                "69bd68de-7baa-4a9c-bd50-ed3d1e4047ae",
                "9c3153bb-e5e2-495c-88c4-fa4185cca7f8",
                "4c21bcc3-0d4c-40ba-95cd-275a763f94ef",
                "963b597b-b28d-4f59-b2e6-4d443499e464",
                "c2bd25ed-cdec-41be-bf5d-a700902f84db"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "629691c7-7385-4f10-87d2-3d0cc1068350",
                "type": {
                    "namespace": "general",
                    "name": "assignto"
                },
                "title": "Assign To",
                "description": "An association which describes that one entity was assigned to another",
                "schemas": [],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "352f83ba-55bd-4a45-becc-e302667ab865"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "7a4d2b22-7f39-4a54-986a-54abcb86f374",
                "type": {
                    "namespace": "general",
                    "name": "calculatedfor"
                },
                "title": "Calculated For",
                "description": "An association which describes that one entity was calculated for another",
                "schemas": [],
                "key": [
                    "6fbe7a73-c7c1-43d7-af64-28f2c1d53725"
                ],
                "properties": [
                    "6fbe7a73-c7c1-43d7-af64-28f2c1d53725"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "26e338e2-670f-4770-a1de-d6038a53957a",
                "395da81a-0bf5-473d-92b3-11f47fdd5d9f",
                "19bf1241-e6c0-4eee-af3d-9ef92756546c",
                "35ba83eb-678e-422e-b4ca-2c51e28e713d",
                "464c494d-e90b-4518-9733-d713f950fa6f"
            ],
            "dst": [
                "26e338e2-670f-4770-a1de-d6038a53957a",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "9c3153bb-e5e2-495c-88c4-fa4185cca7f8",
                "395da81a-0bf5-473d-92b3-11f47fdd5d9f",
                "464c494d-e90b-4518-9733-d713f950fa6f"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "78b5c431-8533-4dde-931f-50489496989f",
                "type": {
                    "namespace": "general",
                    "name": "called"
                },
                "title": "Called",
                "description": "Association in which one entity called another.",
                "schemas": [],
                "key": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "cebc61bf-9052-4e11-99af-3aa3113688a8"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "cebc61bf-9052-4e11-99af-3aa3113688a8"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "ed89706e-a4e4-44e4-983e-56035e2fd160"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "96b06ed5-98b0-42d0-964e-824953bc904f",
                "type": {
                    "namespace": "general",
                    "name": "callreceivedby"
                },
                "title": "Call Received By (CFS to operator)",
                "description": "\"Received by\" association connecting a call for service to an operator",
                "schemas": [
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "0d240f48-9347-46f7-a79e-b11ffdece2a8"
                ],
                "properties": [
                    "0d240f48-9347-46f7-a79e-b11ffdece2a8"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "963b597b-b28d-4f59-b2e6-4d443499e464"
            ],
            "dst": [
                "1bbc14f8-06cf-4cb0-a103-68ba9df08867",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "49ab0eb9-1129-4ea9-a987-868d5ad7255a",
                "type": {
                    "namespace": "general",
                    "name": "consentedto"
                },
                "title": "Consented To",
                "description": "Consented to",
                "schemas": [],
                "key": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "1c9601f9-7b37-44ae-a7a1-5b546952a08a",
                "type": {
                    "namespace": "general",
                    "name": "editedby"
                },
                "title": "Edited By",
                "description": "Association describing that one entity was edited by another.",
                "schemas": [],
                "key": [
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00"
                ],
                "properties": [
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "395da81a-0bf5-473d-92b3-11f47fdd5d9f",
                "26e338e2-670f-4770-a1de-d6038a53957a",
                "35ba83eb-678e-422e-b4ca-2c51e28e713d",
                "464c494d-e90b-4518-9733-d713f950fa6f"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "fc310cd1-7ba8-462a-961e-b0d1070fff43",
                "type": {
                    "namespace": "general",
                    "name": "employedby"
                },
                "title": "employedby (-d)",
                "description": "An association linking person and employer",
                "schemas": [],
                "key": [
                    "20b7d73c-f569-4663-89fd-6b46699425e4",
                    "2cc4a88c-86f0-404c-b328-caf3ec7b9c66",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                ],
                "properties": [
                    "20b7d73c-f569-4663-89fd-6b46699425e4",
                    "2cc4a88c-86f0-404c-b328-caf3ec7b9c66",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "04db765f-7c68-409d-83ac-530aac1736a2"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "167c2511-b07f-416b-8e34-62b2a546d0e7",
                "type": {
                    "namespace": "general",
                    "name": "occurredat"
                },
                "title": "Occurred At",
                "description": "Links together a event with a location where it occurred.",
                "schemas": [
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "25431c60-6c26-4210-a422-569c5226ba7e",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "25431c60-6c26-4210-a422-569c5226ba7e",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "5386b226-1544-455f-b330-1107399b1ed2",
                "7de3bc94-4571-4a3a-871f-3822e98ab60d",
                "b3fbdeaa-b5c9-49fc-944c-67915a148905",
                "963b597b-b28d-4f59-b2e6-4d443499e464",
                "4c21bcc3-0d4c-40ba-95cd-275a763f94ef",
                "352f83ba-55bd-4a45-becc-e302667ab865",
                "e13743e7-babd-49a0-93e5-f93c8b7502cc"
            ],
            "dst": [
                "0257769a-7b29-4ee3-9d64-dc2e7fcbab60",
                "e0aba7dd-8033-48d8-8336-89e942102709"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "d7d4cff2-5b0d-4200-a35b-786fcdfe3bf5",
                "type": {
                    "namespace": "general",
                    "name": "oversaw"
                },
                "title": "Oversaw",
                "description": "Oversaw",
                "schemas": [],
                "key": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "34836b35-76b1-4ecf-b588-c22ad19e2378",
                "type": {
                    "namespace": "general",
                    "name": "participatedin"
                },
                "title": "Participated in",
                "description": "Association 'participated in'",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                    "2a45205e-703c-43eb-a060-921bf7245f6a"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "0d02fc2b-561d-4de9-ac14-611b54a99eb9",
                "80c86a96-0e3f-46eb-9fbb-60d9174566a5",
                "d5982da5-8f13-40d9-8b43-c4e2926e1395"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "92b91274-6ff6-4a06-bee0-10a1b7b0f056",
                "type": {
                    "namespace": "general",
                    "name": "participatedin_v1"
                },
                "title": "Participated In (-d)",
                "description": "Participated in",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "properties": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "36888d01-c1af-405b-8846-d03835a40cf2",
                "type": {
                    "namespace": "general",
                    "name": "registeredfor"
                },
                "title": "Registered For",
                "description": "An association describing that one entity was registered for another.",
                "schemas": [],
                "key": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "f6526a96-37c1-49e5-a362-3f33105ea6d8",
                "0f79443c-5ed8-4b1e-8e5f-61dee705e309",
                "a150f42d-801d-4d5d-bec1-50f46fa58a58",
                "120454ea-7d50-4770-aa01-5f1479bddb4f",
                "25e14b46-e50e-4012-9d0d-3d2e76c95657"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "5386b226-1544-455f-b330-1107399b1ed2",
                "9c3153bb-e5e2-495c-88c4-fa4185cca7f8",
                "25e14b46-e50e-4012-9d0d-3d2e76c95657",
                "4deef11f-ab4d-47b5-89c1-b38fdcc0efe2"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "0aab8372-2c95-4f8c-b67a-79066371365e",
                "type": {
                    "namespace": "geo",
                    "name": "contactedat"
                },
                "title": "Contacted At (-d)",
                "description": "Association linking person and contact info (excluding address).",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "620b3e07-7f85-4629-a075-7e8c6f7eb3cb",
                    "ee34032c-9082-4535-af42-8d568683324f",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "963b597b-b28d-4f59-b2e6-4d443499e464",
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8"
            ],
            "dst": [
                "3c0320b0-93cf-4b16-8b16-3720feafff93",
                "a0432ae5-799f-4dfc-a72e-adbde3e312b9"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "eb5c2845-6089-4d31-a5bd-f83371444154",
                "type": {
                    "namespace": "geo",
                    "name": "contactedat_deprecated"
                },
                "title": "Contacted at (-d)",
                "description": "Association linking person and contact info (excluding address).",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "properties": [
                    "620b3e07-7f85-4629-a075-7e8c6f7eb3cb",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "ee34032c-9082-4535-af42-8d568683324f"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "963b597b-b28d-4f59-b2e6-4d443499e464"
            ],
            "dst": [],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "1f4bb5db-61a8-4ab3-b69b-eb783e038848",
                "type": {
                    "namespace": "geo",
                    "name": "contactinfogiven"
                },
                "title": "Contact Information Given (-d)",
                "description": "Contact information other than address, given to an entity such as a dispatcher.",
                "schemas": [],
                "key": [
                    "ff7c3f66-1904-481b-b7d7-56d8b331be00"
                ],
                "properties": [
                    "ff7c3f66-1904-481b-b7d7-56d8b331be00",
                    "ee34032c-9082-4535-af42-8d568683324f"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [],
            "dst": [
                "963b597b-b28d-4f59-b2e6-4d443499e464"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "558ecd39-ae52-4ab3-ba28-74d93e5ade6a",
                "type": {
                    "namespace": "geo",
                    "name": "getsmailat"
                },
                "title": "Gets Mail At -d",
                "description": "An association that describes a mailing address.",
                "schemas": [
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "25431c60-6c26-4210-a422-569c5226ba7e",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                ],
                "properties": [
                    "25431c60-6c26-4210-a422-569c5226ba7e",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "0257769a-7b29-4ee3-9d64-dc2e7fcbab60"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "c11a8547-1a2f-41d8-b983-cc568f0f83ac",
                "type": {
                    "namespace": "geo",
                    "name": "locatedat"
                },
                "title": "Located At (-d)",
                "description": "Links together a person with a location.",
                "schemas": [
                    {
                        "namespace": "v2",
                        "name": "v2"
                    },
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "25431c60-6c26-4210-a422-569c5226ba7e",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "f5628aca-71b2-40fe-ad66-374cb1f4d506"
                ],
                "properties": [
                    "25431c60-6c26-4210-a422-569c5226ba7e",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "f5628aca-71b2-40fe-ad66-374cb1f4d506"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "04db765f-7c68-409d-83ac-530aac1736a2",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "0257769a-7b29-4ee3-9d64-dc2e7fcbab60"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "9ac9f941-6ba5-42ce-884c-a405d232bc3a",
                "type": {
                    "namespace": "geo",
                    "name": "zonedwithin"
                },
                "title": "Zoned within",
                "description": "Links together a call for service and a dispatch zone.",
                "schemas": [],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "963b597b-b28d-4f59-b2e6-4d443499e464"
            ],
            "dst": [
                "20ae81b5-7574-460f-89be-a66e10ffa67e"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "8a9e7698-a16e-4134-b63b-b3a379d0290b",
                "type": {
                    "namespace": "health",
                    "name": "assessedby -d"
                },
                "title": "Assessed By (-d)",
                "description": "Association linking a patient and the medical staff who assessed them. NOTE this FQN will be changed to general.assessedby later.",
                "schemas": [
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "e9a0b4dc-5298-47c1-8837-20af172379a5",
                    "7b038634-a0b4-4ce1-a04f-85d1775937aa",
                    "e729bfaf-929e-498e-b953-d24656a168f6",
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "85bf7f0d-40e5-40d4-a403-60557afeff1f",
                "type": {
                    "namespace": "health",
                    "name": "assessedwith"
                },
                "title": "Assessed with (-d)",
                "description": "An assessment given to a person, including medical, health, and housing. NOTE this FQN will be changed to general.assessedwith later.",
                "schemas": [
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "8d713e79-21ff-41c3-9bcb-6d460f02a845",
                "0d02fc2b-561d-4de9-ac14-611b54a99eb9",
                "2150bad7-7c4f-47fc-9f9c-db6cbed102df",
                "c6088c26-29f0-4f7d-9491-dce34c4b9112"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "be4d46af-b5b6-468e-8c76-d3d897de4dd5",
                "type": {
                    "namespace": "health",
                    "name": "insuredby"
                },
                "title": "Insured By",
                "description": "Association linking a patient or primary insured individual with insurance/policy",
                "schemas": [],
                "key": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "c5909ed6-5c9d-4016-b5ae-eba0008f4b2e",
                    "2bf49a3d-36d9-4e02-a824-1757d4ebc61f"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8"
            ],
            "dst": [
                "14acfc18-6d46-4ba2-a09d-3dc38c4c202b",
                "436da824-c9b5-4a6d-b121-72c77be98ac8",
                "26b6b5e0-7341-4941-b34a-3ee7b955335b"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "311a1e88-e1e2-4166-819d-52aa00f9e3d1",
                "type": {
                    "namespace": "health",
                    "name": "referredby"
                },
                "title": "Referred by / referred to (health)",
                "description": "An association linking a patient and referral information.",
                "schemas": [],
                "key": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8"
            ],
            "dst": [
                "3c0320b0-93cf-4b16-8b16-3720feafff93",
                "436da824-c9b5-4a6d-b121-72c77be98ac8"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "a8611fa4-64cc-469f-a7ea-b6bcf4daf28c",
                "type": {
                    "namespace": "health",
                    "name": "reported"
                },
                "title": "Reported (-d)",
                "description": "Linking a person/patient with various things they reported (medical history, allergies, etc.)",
                "schemas": [
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8"
            ],
            "dst": [
                "8e38aace-12f1-41fb-861d-f3af2d08df39",
                "df6071bd-a585-47bb-8536-2a6fd5cb7adf",
                "5b16b066-99a7-4dbc-81c3-2b10ea12929c",
                "331445f1-3cd7-46f1-a0fd-a6118319a15f",
                "c77f715a-85e3-4bb4-a25f-850e568dd068",
                "f704fe85-6c21-4370-bdc3-55eb1fc36f57",
                "3c32486b-5a03-45ee-a4d0-d51bf6938f2d",
                "abd5a44f-5b9e-4c6f-871a-73268db25f6d",
                "aa07cf91-0fe7-4e5d-acdf-9b1f2b81106e",
                "217df3df-1ff4-47fc-a01a-0d13e9aeb976",
                "6651cc89-9a49-4c5a-9587-0b973321863e",
                "bb0191de-76c4-4756-bf85-142bb29bc274",
                "7cb21770-9639-4f8a-95be-3ce479a3eaca",
                "308edc79-512e-408c-a280-7a11477224fe",
                "829c5955-243a-42ef-b395-3327563364f5",
                "dc429aee-68fc-4ba2-b943-316ed83dee60"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "de895175-c50c-43e5-928b-284563335662",
                "type": {
                    "namespace": "justice",
                    "name": "ArrestedBy"
                },
                "title": "Arrested By",
                "description": "Links together an officer with the act of conducting an arrest",
                "schemas": [],
                "key": [
                    "73224904-f769-47c6-85f0-d70c519b54cd"
                ],
                "properties": [
                    "73224904-f769-47c6-85f0-d70c519b54cd",
                    "88f6294a-8b73-45e3-a0ec-8ebfb75a930e",
                    "474f6088-49b2-478a-93ef-2d9541858701"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "594bafb7-58c4-4722-bcf5-f3f87c884dea",
                "1bbc14f8-06cf-4cb0-a103-68ba9df08867"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "46eeda56-f986-4da2-9584-23512aa2fb41",
                "type": {
                    "namespace": "justice",
                    "name": "ReleasedBy"
                },
                "title": "Released By (-d)",
                "description": "Links together an officer with someone they are releasing",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "73224904-f769-47c6-85f0-d70c519b54cd"
                ],
                "properties": [
                    "73224904-f769-47c6-85f0-d70c519b54cd"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "594bafb7-58c4-4722-bcf5-f3f87c884dea",
                "1bbc14f8-06cf-4cb0-a103-68ba9df08867"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "23ab47df-b236-4188-ab93-a99e5e1ef69f",
                "type": {
                    "namespace": "justice",
                    "name": "SearchedBy"
                },
                "title": "Searched By",
                "description": "Links together an officer with someone they are searching",
                "schemas": [],
                "key": [
                    "73224904-f769-47c6-85f0-d70c519b54cd"
                ],
                "properties": [
                    "73224904-f769-47c6-85f0-d70c519b54cd"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "594bafb7-58c4-4722-bcf5-f3f87c884dea",
                "1bbc14f8-06cf-4cb0-a103-68ba9df08867"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "533c7b58-116a-400f-a2df-08abbaa7eceb",
                "type": {
                    "namespace": "justice",
                    "name": "TransportedBy"
                },
                "title": "Transported By (-d)",
                "description": "Links together an officer with someone they are transporting",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "73224904-f769-47c6-85f0-d70c519b54cd"
                ],
                "properties": [
                    "73224904-f769-47c6-85f0-d70c519b54cd"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "594bafb7-58c4-4722-bcf5-f3f87c884dea",
                "1bbc14f8-06cf-4cb0-a103-68ba9df08867"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "06eb9cfc-8f72-4bb1-aaac-8fe336891e45",
                "type": {
                    "namespace": "justice",
                    "name": "booked"
                },
                "title": "was booked (-d)",
                "description": "Links together a person with a booking",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "cec17b62-2821-4701-ab0b-1bae728d52de"
                ],
                "properties": [
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "cec17b62-2821-4701-ab0b-1bae728d52de"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "161ca75e-8a16-41c1-8b02-7b1649c3a2d7"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "6f440883-660f-41e7-95f3-d923361e2b21",
                "type": {
                    "namespace": "justice",
                    "name": "chargedwith"
                },
                "title": "Charged With (-d)",
                "description": "The law enforcement charges that were laid upon a person (association).",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "5ba4ac95-8532-4c2c-8747-71268f7c5898",
                    "11ba7bf9-200e-4b04-b1e7-80b54359143f",
                    "1956bf5b-a597-4ba4-bcef-5b286ac83339",
                    "b916c940-9e7f-434d-b502-05fbdc2845b2"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "5386b226-1544-455f-b330-1107399b1ed2",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "5386b226-1544-455f-b330-1107399b1ed2",
                "c1d76f87-b32b-4b7f-b24f-5c4b1f30aa78"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "536f93ba-efd4-47b7-8b7c-51612cafd8c5",
                "type": {
                    "namespace": "justice",
                    "name": "detailsof"
                },
                "title": "Details Of",
                "description": "An association which describes that one entity provides details of another",
                "schemas": [],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "2dbf1e58-e218-4211-965c-070b6c4388c9"
            ],
            "dst": [
                "415d008f-4310-4477-b333-404e6b11e537"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "4b98be11-03e3-4924-a983-474e8898e56c",
                "type": {
                    "namespace": "justice",
                    "name": "interactedwith -d"
                },
                "title": "Interacted With (-d)",
                "description": "An association which describes that one entity interacted with another",
                "schemas": [],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "594bafb7-58c4-4722-bcf5-f3f87c884dea",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "ba032771-413f-4d07-9730-a8f8d2fb06e2",
                "type": {
                    "namespace": "justice",
                    "name": "leadsto"
                },
                "title": "Leads To",
                "description": "An association linking an offense to eventual court case, sentencing, or conviction outcomes.",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    }
                ],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "21f5b00c-284a-4b45-bc37-355649bbb4f0"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "5386b226-1544-455f-b330-1107399b1ed2",
                "7de3bc94-4571-4a3a-871f-3822e98ab60d",
                "c1d76f87-b32b-4b7f-b24f-5c4b1f30aa78",
                "b3562c95-33bc-4143-a970-0d173a3f35fc"
            ],
            "dst": [
                "ef890efc-3cfd-4de9-8788-aa2ec695235b",
                "352f83ba-55bd-4a45-becc-e302667ab865",
                "a8933914-d849-4b90-ab0f-eaa1525c4ec8"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "1f9fdbe6-982f-48b1-a4f3-af1a75614fe3",
                "type": {
                    "namespace": "justice",
                    "name": "resultsin"
                },
                "title": "Results In (-d)",
                "description": "An association which describes that one entity results in another",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "dfc59ce4-576b-4d61-9515-dba20e0dca5c"
            ],
            "dst": [
                "7de3bc94-4571-4a3a-871f-3822e98ab60d"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "3c3d0caa-5311-4423-bcb1-62df8eaacee5",
                "type": {
                    "namespace": "justice",
                    "name": "sentencedwith"
                },
                "title": "Sentenced With",
                "description": "Association indicating that one entity was sentenced with another",
                "schemas": [],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "properties": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "e2de2838-5eb4-4ed9-9c08-52b51db712cd"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "ef0c2517-0ab1-48e4-a247-ef9812c4980c",
                "type": {
                    "namespace": "lawenforcement",
                    "name": "arrestedin"
                },
                "title": "Arrested In (v1)",
                "description": "Links together a person with an event they were arrested in.",
                "schemas": [],
                "key": [
                    "3b5c462d-af10-498f-bd12-5a9913754f29",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                ],
                "properties": [
                    "2c030baf-6624-413a-b971-5dc8f6329108",
                    "3b5c462d-af10-498f-bd12-5a9913754f29",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "b3fbdeaa-b5c9-49fc-944c-67915a148905"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "96a79f1d-f70d-41e5-a0ee-a60cef3ad3c7",
                "type": {
                    "namespace": "location",
                    "name": "MailsAt"
                },
                "title": "Mails At",
                "description": "An association describe that location at which an entity mails",
                "schemas": [],
                "key": [
                    "25431c60-6c26-4210-a422-569c5226ba7e",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                ],
                "properties": [
                    "25431c60-6c26-4210-a422-569c5226ba7e",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "0257769a-7b29-4ee3-9d64-dc2e7fcbab60"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "12d1ef04-d6c5-45a7-bb56-f667e88ba165",
                "type": {
                    "namespace": "location",
                    "name": "livesat"
                },
                "title": "Lives at (-d)",
                "description": "An association describe that location at which an entity lives",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "0257769a-7b29-4ee3-9d64-dc2e7fcbab60"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "a2d61543-99ea-4d83-a746-098f6dea7757",
                "type": {
                    "namespace": "medical",
                    "name": "Ordered"
                },
                "title": "Ordered",
                "description": "Ordered",
                "schemas": [],
                "key": [
                    "20b7d73c-f569-4663-89fd-6b46699425e4",
                    "5c96b76d-1a75-4d74-958b-3feccb75b17a"
                ],
                "properties": [
                    "20b7d73c-f569-4663-89fd-6b46699425e4",
                    "5c96b76d-1a75-4d74-958b-3feccb75b17a"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [],
            "dst": [
                "6defb169-7056-486f-abd1-e528a720ab8c"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "47fd73fe-d66e-4d12-8703-7b9fcba1ba3c",
                "type": {
                    "namespace": "medical",
                    "name": "ReviewedBy"
                },
                "title": "Reviewed By",
                "description": "Reviewed By",
                "schemas": [],
                "key": [
                    "1c92fc4e-942a-4e1e-8373-7350dcda0344",
                    "20b7d73c-f569-4663-89fd-6b46699425e4",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "879f46a2-e432-4808-8829-98eeb2f9dcf6"
                ],
                "properties": [
                    "1c92fc4e-942a-4e1e-8373-7350dcda0344",
                    "20b7d73c-f569-4663-89fd-6b46699425e4",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "879f46a2-e432-4808-8829-98eeb2f9dcf6"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "3841c20f-cfa9-4dd8-b75d-a33649afbceb",
                "type": {
                    "namespace": "medical",
                    "name": "assessedwith_deprecated"
                },
                "title": "Assessed with (-d)",
                "description": "Medical assessments that a patient has been assessed with.",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "1c92fc4e-942a-4e1e-8373-7350dcda0344",
                    "3e11f6cc-c8f5-4d3d-aea7-76a8e5269300",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                ],
                "properties": [
                    "1c92fc4e-942a-4e1e-8373-7350dcda0344",
                    "3e11f6cc-c8f5-4d3d-aea7-76a8e5269300",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "dde3b0ff-74ec-4aa3-bfc7-1fb1f4d20473",
                "type": {
                    "namespace": "medical",
                    "name": "reported_deprecated"
                },
                "title": "Reported (-d)",
                "description": "An association which describes a person's and medical history",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "df6071bd-a585-47bb-8536-2a6fd5cb7adf"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "25969640-655a-4484-9f66-4d919b1403e8",
                "type": {
                    "namespace": "medical",
                    "name": "taking"
                },
                "title": "Taking",
                "description": "Association linking a patient and medication.",
                "schemas": [],
                "key": [
                    "14395b33-f0b3-4d1c-a415-cbcfb2ce3965",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "properties": [
                    "419348da-1353-47e6-921a-e5f92a71b18d",
                    "18d5e463-4421-45cc-b499-2603596b079e",
                    "6b947ce1-fc08-4534-8189-1034f39ec2ac",
                    "e439e1bd-16fd-4029-bc86-3d9776d6c70a",
                    "42e4ac4e-4634-45fa-a6d6-806d48b041be",
                    "14395b33-f0b3-4d1c-a415-cbcfb2ce3965",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "7c3bf67e-888f-472c-9555-119d7d91828e"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "a823f47f-f2f3-497e-b78e-a8cf01ed6405",
                "type": {
                    "namespace": "o",
                    "name": "is"
                },
                "title": "Is ",
                "description": "Is (person to patient, suspect, employee etc.)",
                "schemas": [],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "properties": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "436da824-c9b5-4a6d-b121-72c77be98ac8"
            ],
            "dst": [
                "deccb4b4-9156-4f43-983d-104c344c2096",
                "9e7a5933-f649-4061-9e29-b90b828089e1",
                "ab43ae3f-e83a-45e3-9ba4-eace79b589ae",
                "503bc786-437c-4591-9e4e-64e7d4d1286a"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "7d141486-07c7-4568-a3fc-6978d13818e5",
                "type": {
                    "namespace": "ol",
                    "name": "addresses"
                },
                "title": "[Treatment]  Addresses / Addressed  [Health Condition]",
                "description": "",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "620b6307-b1c2-4a69-8f9c-d889412e569e",
                "85499cb1-58bc-4f5c-85f2-99d7f4baca69",
                "af432ff4-3fe5-4bc7-a1b4-af1e584340c9",
                "60052a61-4d4b-40f7-9dcc-26d28770310a",
                "36ed20d7-e78d-4796-a339-805a33a94335",
                "58cee67c-f589-451f-a711-bd2422f2d9a8"
            ],
            "dst": [
                "955dc331-b23e-4b4f-993c-4f2c9bb47fca",
                "9d40e6a5-5e00-47ec-9645-32fcfd276a86",
                "dc429aee-68fc-4ba2-b943-316ed83dee60"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "2d575f53-6d7a-4676-86f0-157893c7df3a",
                "type": {
                    "namespace": "ol",
                    "name": "administered"
                },
                "title": "Administered to / by",
                "description": "For example, a protocol or medication is administered to a patient. Start date is beginning of period, expiration is when order is due to expire. ",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "36ed20d7-e78d-4796-a339-805a33a94335",
                "89eb9433-3ef9-46f4-96c3-543df6a9e64c",
                "85499cb1-58bc-4f5c-85f2-99d7f4baca69",
                "8f7e554e-a877-44c8-9d79-1b976ac3399f",
                "dd21c199-dd98-4c89-8dcc-08c8d38ef80b"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "d81b1e88-6374-4dca-b001-65d06d35f949",
                "type": {
                    "namespace": "ol",
                    "name": "affiliatedwith"
                },
                "title": "Affiliated with",
                "description": "An affiliation.",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "d653f9af-e16d-440d-bc00-5de169e3fd68"
            ],
            "bidirectional": true
        },
        {
            "entityType": {
                "id": "03aac23e-56d5-4960-b739-fae7fa301a6e",
                "type": {
                    "namespace": "ol",
                    "name": "appearsin"
                },
                "title": "Appears in",
                "description": "",
                "schemas": [
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140",
                    "f7af5fb1-92de-495d-ac01-d3ab82081eb8",
                    "c5909ed6-5c9d-4016-b5ae-eba0008f4b2e",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "1a99a9f7-c9fa-4cc9-9e29-1370c440f392",
                    "07488a0f-0096-4d4b-bdb2-fb50b3a03997",
                    "4e4d35e2-8dad-4af7-83f8-c28f983bffe2",
                    "58b549ca-62af-4e09-8624-4989f776d4d2"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "deccb4b4-9156-4f43-983d-104c344c2096",
                "4c6bca41-6660-45ab-ab8c-7f88cd9d6d70",
                "671621a2-6173-4bb4-aafa-a7a69d402563",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "436da824-c9b5-4a6d-b121-72c77be98ac8",
                "136eee13-0113-4b91-a804-6154824daa49",
                "f32f0c3e-ed80-4155-89b6-0baaba21eaee"
            ],
            "dst": [
                "fb30b015-690d-4310-b9ec-30596cbaf85d",
                "deccb4b4-9156-4f43-983d-104c344c2096",
                "671621a2-6173-4bb4-aafa-a7a69d402563",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "436da824-c9b5-4a6d-b121-72c77be98ac8",
                "136eee13-0113-4b91-a804-6154824daa49",
                "352f83ba-55bd-4a45-becc-e302667ab865"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "edaca5dc-9255-460a-8013-e31ace5723db",
                "type": {
                    "namespace": "ol",
                    "name": "arrestedby"
                },
                "title": "Arrested by",
                "description": "(Person) is arrested by (Authority).",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "88f6294a-8b73-45e3-a0ec-8ebfb75a930e",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "f32f0c3e-ed80-4155-89b6-0baaba21eaee",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "e33ad963-60fd-489d-8cdb-9faca522e18a"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "4f4df940-af84-48fc-ab28-990843e10349",
                "type": {
                    "namespace": "ol",
                    "name": "assessedby"
                },
                "title": "Assessed By",
                "description": "",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    }
                ],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "properties": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "deccb4b4-9156-4f43-983d-104c344c2096",
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8",
                "deccb4b4-9156-4f43-983d-104c344c2096",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "697c12ec-fec3-4f6e-b603-89d48cbdf4fe"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "50ce2984-8e2c-4c15-82cc-99aac72ee628",
                "type": {
                    "namespace": "ol",
                    "name": "assignedto"
                },
                "title": "Assigned to",
                "description": "",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140",
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "fb30b015-690d-4310-b9ec-30596cbaf85d",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "e33ad963-60fd-489d-8cdb-9faca522e18a"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "2998be89-0183-4470-a9a2-e1efa5ad7414",
                "type": {
                    "namespace": "ol",
                    "name": "associatedwith"
                },
                "title": "Associated with",
                "description": "Bi-directional association linking an arrest and offense.",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "a8933914-d849-4b90-ab0f-eaa1525c4ec8",
                "72dc4594-8dc0-4956-959f-2408a069f2aa",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "33f389fe-9ff6-41eb-b7f9-aa1aad545014",
                "d038e8f6-5910-46b2-88e4-b028a5120a46",
                "3c6dad54-c4b4-4dfb-bd8b-d8dd56e342ec"
            ],
            "bidirectional": true
        },
        {
            "entityType": {
                "id": "1a8fc6a9-9f84-493e-9d03-38dc90d865ad",
                "type": {
                    "namespace": "ol",
                    "name": "basedon"
                },
                "title": "Based On",
                "description": "",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "6ddd6161-c23c-4d25-9bef-ee283270d443",
                "215f54f1-830e-4edb-bdc5-d4938f4a3e04",
                "36ed20d7-e78d-4796-a339-805a33a94335",
                "7dc7c797-96e3-41a4-9b37-ff04de2d61d8",
                "3128fd92-34b6-450d-be02-b9a24dcee943"
            ],
            "dst": [
                "620b6307-b1c2-4a69-8f9c-d889412e569e"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "26b30a9c-4ff0-4b44-a26a-19c3195a6b16",
                "type": {
                    "namespace": "ol",
                    "name": "bondset"
                },
                "title": "Bondset for",
                "description": "(Bond) is set for a (Jailstay).",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "892bce63-805e-4b45-b9b1-7eaea1c48f2f"
            ],
            "dst": [
                "c8c1ef66-56da-43e1-a1b1-4b0a71d53968"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "d7c9c3b4-3f5a-47e1-bc6c-18a1b7fdc8ae",
                "type": {
                    "namespace": "ol",
                    "name": "bornat"
                },
                "title": "Born At",
                "description": "(Person) -> Born at -> (Location)",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "136eee13-0113-4b91-a804-6154824daa49"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "f5942bd5-685c-4a37-be0a-d55a3c952aa4",
                "type": {
                    "namespace": "ol",
                    "name": "chargedby"
                },
                "title": "charged by",
                "description": "(Person) is charged by (Authority).",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "e33ad963-60fd-489d-8cdb-9faca522e18a"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "22f294e5-f3f4-4317-8ff8-63528125c95f",
                "type": {
                    "namespace": "ol",
                    "name": "chargedwith"
                },
                "title": "Charged With",
                "description": "(Person) is charged with (A charge/offense).",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "d038e8f6-5910-46b2-88e4-b028a5120a46",
                "33f389fe-9ff6-41eb-b7f9-aa1aad545014"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "589c5599-895c-497c-8864-3488d9ff4402",
                "type": {
                    "namespace": "ol",
                    "name": "clearedby"
                },
                "title": "Cleared by",
                "description": "",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "fb30b015-690d-4310-b9ec-30596cbaf85d"
            ],
            "dst": [
                "9314b075-ac0f-4659-9fed-9be21931ada1"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "65416b16-626c-495a-9904-a22a4d113276",
                "type": {
                    "namespace": "ol",
                    "name": "collectedby"
                },
                "title": "Collected By",
                "description": "Association between the person collecting the data and the data or form itself",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    }
                ],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "properties": [
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "c70e5c06-412d-4bba-b66e-843dbb980e6d",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "deccb4b4-9156-4f43-983d-104c344c2096",
                "5a50c786-050c-4ba6-a6e1-8c6f167424dc",
                "7cb21770-9639-4f8a-95be-3ce479a3eaca",
                "59832bb7-3e3a-4352-a155-ee806c6d21ff",
                "308edc79-512e-408c-a280-7a11477224fe",
                "4d9dcc53-1655-4869-8684-879a24bc5a7d",
                "331445f1-3cd7-46f1-a0fd-a6118319a15f",
                "bb0191de-76c4-4756-bf85-142bb29bc274",
                "3c0320b0-93cf-4b16-8b16-3720feafff93",
                "c6088c26-29f0-4f7d-9491-dce34c4b9112",
                "26b6b5e0-7341-4941-b34a-3ee7b955335b",
                "abd5a44f-5b9e-4c6f-871a-73268db25f6d",
                "c77f715a-85e3-4bb4-a25f-850e568dd068",
                "b83efabb-b89a-4beb-9a84-190da4adc990",
                "aa07cf91-0fe7-4e5d-acdf-9b1f2b81106e",
                "2e20c21e-6448-4a2d-bc57-9a5f2c45b589",
                "89eb9433-3ef9-46f4-96c3-543df6a9e64c",
                "6651cc89-9a49-4c5a-9587-0b973321863e",
                "9e7a5933-f649-4061-9e29-b90b828089e1",
                "b1a52c96-17d5-495a-98b7-22128b97059f",
                "217df3df-1ff4-47fc-a01a-0d13e9aeb976",
                "829c5955-243a-42ef-b395-3327563364f5",
                "436da824-c9b5-4a6d-b121-72c77be98ac8",
                "136eee13-0113-4b91-a804-6154824daa49",
                "fbadb396-0497-413c-83ee-89e7370d7e4d"
            ],
            "dst": [
                "436da824-c9b5-4a6d-b121-72c77be98ac8",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "deccb4b4-9156-4f43-983d-104c344c2096"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "5d88ee83-3be4-4a04-9650-e7f1c48c3662",
                "type": {
                    "namespace": "ol",
                    "name": "committedby"
                },
                "title": "Committed by",
                "description": "(Person) is committed by (Authority) to jail.",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140",
                    "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                    "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                    "3e6d3232-6469-46ee-b437-aa0d0458a88e"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "e33ad963-60fd-489d-8cdb-9faca522e18a"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "71293051-6eba-45cc-8b67-b63ec2c073a8",
                "type": {
                    "namespace": "ol",
                    "name": "componentof"
                },
                "title": "[Entity] Is Component Of [Assessment / Evaluation]",
                "description": "Component of a larger assessment or evaluation",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "30317774-a6e8-4971-865a-430e551f59d6"
            ],
            "dst": [
                "4c663098-2d48-46ae-a875-99b98f8df46e",
                "20127760-00c9-4baa-b8a5-b2b46a78b8ae"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "000a620f-a858-459a-8d2c-66628b1db422",
                "type": {
                    "namespace": "ol",
                    "name": "comprises"
                },
                "title": "Comprises; is composed of",
                "description": "",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "1fb0c52c-d236-4c31-a79a-b302ad8e8fa2"
            ],
            "dst": [
                "955dc331-b23e-4b4f-993c-4f2c9bb47fca",
                "9d40e6a5-5e00-47ec-9645-32fcfd276a86"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "67725d08-391e-4a0b-9134-f147a96dab84",
                "type": {
                    "namespace": "ol",
                    "name": "concurrentto"
                },
                "title": "Concurrent to / occurs at the same time as / during",
                "description": "Linking things that occur at the same time",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140",
                    "f12a9c1e-c81c-46fc-9974-7344fb6046d8"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "1c77a48e-1df1-4554-b695-7b5bc6fb5a68",
                "06ede450-db5a-461c-956c-f354ce09ad22"
            ],
            "dst": [
                "df44620a-a921-44ee-b962-c10335ef7152"
            ],
            "bidirectional": true
        },
        {
            "entityType": {
                "id": "553cd731-73de-4377-bad8-ab4ec8b65b58",
                "type": {
                    "namespace": "ol",
                    "name": "contactedat"
                },
                "title": "Contacted at (-d)",
                "description": "",
                "schemas": [
                    {
                        "namespace": "v2",
                        "name": "v2"
                    },
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "deccb4b4-9156-4f43-983d-104c344c2096",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "f32f0c3e-ed80-4155-89b6-0baaba21eaee"
            ],
            "dst": [
                "2e20c21e-6448-4a2d-bc57-9a5f2c45b589"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "3f417550-356f-4275-8a55-1d66ccb6642b",
                "type": {
                    "namespace": "ol",
                    "name": "contactedvia"
                },
                "title": "Contacted via",
                "description": "",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    }
                ],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "properties": [
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "c5a388d7-f9ed-4eb6-8dd6-633a4afcae6a",
                    "58a9d637-98e3-4727-b9c0-eb431c420936"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "436da824-c9b5-4a6d-b121-72c77be98ac8",
                "697c12ec-fec3-4f6e-b603-89d48cbdf4fe"
            ],
            "dst": [
                "2e20c21e-6448-4a2d-bc57-9a5f2c45b589",
                "a0432ae5-799f-4dfc-a72e-adbde3e312b9",
                "3c0320b0-93cf-4b16-8b16-3720feafff93",
                "9fe1654f-6b5f-43ea-be06-98c5e823b722"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "cf9b4d36-6f1a-4e6f-94f0-6458054fc567",
                "type": {
                    "namespace": "ol",
                    "name": "contactinfogiven"
                },
                "title": "(Contact information) given to (entity)",
                "description": "",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "2e20c21e-6448-4a2d-bc57-9a5f2c45b589"
            ],
            "dst": [
                "fb30b015-690d-4310-b9ec-30596cbaf85d"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "cf82db7b-0461-4fe2-9bd9-45551fb4ec2c",
                "type": {
                    "namespace": "ol",
                    "name": "decryptedby"
                },
                "title": "Decrypted By",
                "description": "Decrypted By",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "9242fe71-04c3-4bd5-a906-806e7e3b88f2"
            ],
            "dst": [
                "4cd615be-157f-4950-b254-1ed1f62de765"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "888156e7-24ad-4ead-90db-b1d7f461680a",
                "type": {
                    "namespace": "ol",
                    "name": "defines"
                },
                "title": "Defines",
                "description": "",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "d36848f0-ed6c-4c7a-9292-3bffe112bac3"
            ],
            "dst": [
                "36ed20d7-e78d-4796-a339-805a33a94335"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "e2b50c38-9b24-4643-9f64-4a655a4d6ce0",
                "type": {
                    "namespace": "ol",
                    "name": "deletedby"
                },
                "title": "Deleted By",
                "description": "An association elucidating the relationship between a data element and the person/system that deleted the data element.",
                "schemas": [],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "properties": [
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "5a50c786-050c-4ba6-a6e1-8c6f167424dc",
                "6651cc89-9a49-4c5a-9587-0b973321863e",
                "abd5a44f-5b9e-4c6f-871a-73268db25f6d",
                "c6088c26-29f0-4f7d-9491-dce34c4b9112",
                "4d9dcc53-1655-4869-8684-879a24bc5a7d",
                "aa07cf91-0fe7-4e5d-acdf-9b1f2b81106e",
                "a0432ae5-799f-4dfc-a72e-adbde3e312b9",
                "2e20c21e-6448-4a2d-bc57-9a5f2c45b589",
                "308edc79-512e-408c-a280-7a11477224fe",
                "f704fe85-6c21-4370-bdc3-55eb1fc36f57",
                "7cb21770-9639-4f8a-95be-3ce479a3eaca",
                "3c32486b-5a03-45ee-a4d0-d51bf6938f2d",
                "9e7a5933-f649-4061-9e29-b90b828089e1",
                "26b6b5e0-7341-4941-b34a-3ee7b955335b",
                "136eee13-0113-4b91-a804-6154824daa49",
                "89eb9433-3ef9-46f4-96c3-543df6a9e64c",
                "436da824-c9b5-4a6d-b121-72c77be98ac8",
                "829c5955-243a-42ef-b395-3327563364f5",
                "331445f1-3cd7-46f1-a0fd-a6118319a15f",
                "3c0320b0-93cf-4b16-8b16-3720feafff93",
                "bb0191de-76c4-4756-bf85-142bb29bc274",
                "217df3df-1ff4-47fc-a01a-0d13e9aeb976",
                "deccb4b4-9156-4f43-983d-104c344c2096",
                "b1a52c96-17d5-495a-98b7-22128b97059f",
                "c77f715a-85e3-4bb4-a25f-850e568dd068",
                "b83efabb-b89a-4beb-9a84-190da4adc990",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "deccb4b4-9156-4f43-983d-104c344c2096",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "1f86a011-cee3-4c26-90d3-79e83348d221",
                "type": {
                    "namespace": "ol",
                    "name": "diagnosedwith"
                },
                "title": "Diagnosed With",
                "description": "Association between person and problem/diagnosis.",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "45013f5d-fd6f-41bc-983d-d7b4cfe9876c",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "9d40e6a5-5e00-47ec-9645-32fcfd276a86",
                "1fb0c52c-d236-4c31-a79a-b302ad8e8fa2",
                "955dc331-b23e-4b4f-993c-4f2c9bb47fca"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "78c5a73f-3362-47fb-9100-f4de17c407e0",
                "type": {
                    "namespace": "ol",
                    "name": "dispensed"
                },
                "title": "Dispensed - [Medication ] Dispensed for / by [Person]",
                "description": "",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "89eb9433-3ef9-46f4-96c3-543df6a9e64c"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "5dbdbd4c-991a-476d-b235-0ca0c90c33f4",
                "type": {
                    "namespace": "ol",
                    "name": "eligiblefor"
                },
                "title": "Eligible For (e.g., insurance coverage, government program)",
                "description": "Association between person and program they are eligible for or claim to be eligible for (whether or not they are enrolled).",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "bf4f1c24-65f5-47c7-88d7-48aec1e4e591",
                    "c8460593-7a12-450a-80ad-bc8e97018a0d"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "26b6b5e0-7341-4941-b34a-3ee7b955335b",
                "c2f00f3d-48c9-47a2-80a4-b1cbcf7d5397"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "be5bddd5-f46d-4c66-b2be-05c2523a1508",
                "type": {
                    "namespace": "ol",
                    "name": "employedby"
                },
                "title": "Employed By (person to organization)",
                "description": "",
                "schemas": [],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "properties": [
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "c5909ed6-5c9d-4016-b5ae-eba0008f4b2e"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8"
            ],
            "dst": [
                "436da824-c9b5-4a6d-b121-72c77be98ac8",
                "ab43ae3f-e83a-45e3-9ba4-eace79b589ae",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "8e2397af-69fb-494d-a928-80b091ab3ffc",
                "type": {
                    "namespace": "ol",
                    "name": "engagedin"
                },
                "title": "[Person] Engaged In [Activity]",
                "description": "",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "1c77a48e-1df1-4554-b695-7b5bc6fb5a68"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "7d289eb5-44f7-4cf5-8c3d-ac7a1799b21a",
                "type": {
                    "namespace": "ol",
                    "name": "enrolled"
                },
                "title": "Enrolled",
                "description": "",
                "schemas": [],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                ],
                "properties": [
                    "70d2ff1c-2450-4a47-a954-a7641b7399ae",
                    "0011bbfe-d5d4-4f88-97a8-cdeb821deb6f",
                    "54f64f11-9c4d-4701-897b-630ffeb94a21",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "e0792539-1e11-4a92-bf15-346f085a26f8",
                "type": {
                    "namespace": "ol",
                    "name": "evaluatedwith"
                },
                "title": "Evaluated With / Evaluated Using",
                "description": "A link between a person and an evaluative statement/ test/ diagnostic / scale ( and the corresponding results). Evaluations (health) are usually based on some sort of extrapolation by a clinician from clinical evidence that has been gathered or measured. Examples include: a clinical opinion, goal or interpretation such as a diagnosis or adverse reaction, subbjective assessment scales (e.g., DSM-5).",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "8969dba7-7ff5-4aa5-ab14-1bed6723e4cc"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "07e2b47c-e43a-4394-a6c3-d13bf6f1275b",
                "type": {
                    "namespace": "ol",
                    "name": "exhibits"
                },
                "title": "Displays or exhibits",
                "description": "Person exhibits specific behaviors or thought patterns",
                "schemas": [],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "properties": [
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8"
            ],
            "dst": [
                "60f91c1e-a11a-49dd-ba35-4f386a657122",
                "abcc6784-0d63-4ffb-937e-b7c5edcc9785",
                "de99d249-ff20-474b-b080-f2a3a75bc39c"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "af9dc7d8-e78c-456a-b861-0d383a11d4fa",
                "type": {
                    "namespace": "ol",
                    "name": "getsmailat"
                },
                "title": "Gets Mail At",
                "description": "Association between person and address at which the person receives mail.",
                "schemas": [],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "properties": [
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8",
                "deccb4b4-9156-4f43-983d-104c344c2096",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "136eee13-0113-4b91-a804-6154824daa49"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "9aacf628-526c-4bed-9bd9-fbb05280f11a",
                "type": {
                    "namespace": "ol",
                    "name": "groupedinto"
                },
                "title": "Grouped Into",
                "description": "",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "215f54f1-830e-4edb-bdc5-d4938f4a3e04",
                "fbadb396-0497-413c-83ee-89e7370d7e4d",
                "58cee67c-f589-451f-a711-bd2422f2d9a8"
            ],
            "dst": [
                "d36848f0-ed6c-4c7a-9292-3bffe112bac3",
                "58cee67c-f589-451f-a711-bd2422f2d9a8"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "7aa9e000-0585-4dff-8512-aa35b329379a",
                "type": {
                    "namespace": "ol",
                    "name": "has"
                },
                "title": "Has (details, ID, etc)",
                "description": "Has association",
                "schemas": [
                    {
                        "namespace": "cafe",
                        "name": "chronicle"
                    },
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140",
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                    "f43dccfe-7dbe-425a-a2c0-eb104daba964",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "ee29fb9e-dad9-4b9a-a93a-e30d0c488266",
                "955dc331-b23e-4b4f-993c-4f2c9bb47fca"
            ],
            "dst": [
                "671621a2-6173-4bb4-aafa-a7a69d402563",
                "b83efabb-b89a-4beb-9a84-190da4adc990",
                "10438ac7-5083-42c0-95b8-9ad5c4c6c87a",
                "d2b5c652-de2a-4870-9526-f5118de5fe19",
                "7bf92b81-73fb-4de3-be43-f43e08ea569b",
                "35e31985-ff01-4618-bc7c-b0161af62b91",
                "f53a0422-0ae8-4975-b2bf-78648fa74693"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "2ace27da-9f86-48f7-80bd-f48556092b27",
                "type": {
                    "namespace": "ol",
                    "name": "includes"
                },
                "title": "Includes / Contains",
                "description": "Association between an assessment and the information it collects (e.g., a lab test and the results it includes. Results Include, Form Contains)",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    }
                ],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "properties": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "6ddd6161-c23c-4d25-9bef-ee283270d443",
                "b6c79daa-e6ce-4d6b-9c39-892feb9ff077",
                "ce0f8dc1-5938-4574-94bd-d9cd56487951",
                "0446f356-6cba-4180-9b43-472daafb712c",
                "7bf92b81-73fb-4de3-be43-f43e08ea569b",
                "bcd99aeb-2938-4b28-b42f-cf35e3008720",
                "dd21c199-dd98-4c89-8dcc-08c8d38ef80b",
                "f8c4ed72-709a-477e-96f9-04a54d5dd363"
            ],
            "dst": [
                "fbadb396-0497-413c-83ee-89e7370d7e4d",
                "2be26014-a32f-4826-b768-d2b3895ddab2",
                "8c69f5e3-a690-4232-9a4a-2ef25965c305",
                "955dc331-b23e-4b4f-993c-4f2c9bb47fca",
                "85499cb1-58bc-4f5c-85f2-99d7f4baca69"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "891c4ba6-6e76-47b7-b87f-0c826553201c",
                "type": {
                    "namespace": "ol",
                    "name": "incontextof"
                },
                "title": "In Context of",
                "description": "Components of Episode",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "620b6307-b1c2-4a69-8f9c-d889412e569e",
                "ce0f8dc1-5938-4574-94bd-d9cd56487951",
                "1fb0c52c-d236-4c31-a79a-b302ad8e8fa2",
                "df44620a-a921-44ee-b962-c10335ef7152",
                "d36848f0-ed6c-4c7a-9292-3bffe112bac3",
                "3128fd92-34b6-450d-be02-b9a24dcee943",
                "9f1fb6c3-d4b8-4ae8-bdf5-0e64ae0a2935"
            ],
            "dst": [
                "f8c4ed72-709a-477e-96f9-04a54d5dd363",
                "1c77a48e-1df1-4554-b695-7b5bc6fb5a68",
                "85499cb1-58bc-4f5c-85f2-99d7f4baca69"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "a8f876f7-84b1-4774-ac3a-4c771cb26099",
                "type": {
                    "namespace": "ol",
                    "name": "instantiates"
                },
                "title": "Instantiates",
                "description": "To represent as or by an instance  (e.g., the implementation of a protocol, plan, or activity definition).",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "58cee67c-f589-451f-a711-bd2422f2d9a8"
            ],
            "dst": [
                "d36848f0-ed6c-4c7a-9292-3bffe112bac3"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "774cb56a-2771-44ae-ba43-a465c9c1c6df",
                "type": {
                    "namespace": "ol",
                    "name": "interactedwith"
                },
                "title": "Interacted with",
                "description": "Association between people",
                "schemas": [],
                "key": [
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "properties": [
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "ba77fbf5-9f45-4def-b17f-4ddd2f757129",
                    "2ff089c6-716d-44d9-8470-bfe9689eeacd",
                    "d98f8cf4-4459-4923-b85e-ff35c62b4e9f",
                    "a7ecc119-6f7f-4603-b9ec-68b9141ea114"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8",
                "deccb4b4-9156-4f43-983d-104c344c2096"
            ],
            "dst": [
                "deccb4b4-9156-4f43-983d-104c344c2096",
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8"
            ],
            "bidirectional": true
        },
        {
            "entityType": {
                "id": "5bf88cde-65bc-4865-a58b-920eec4c4028",
                "type": {
                    "namespace": "ol",
                    "name": "involvedin"
                },
                "title": "Involved in",
                "description": "(Person) is involved in (an event).",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140",
                    "1a99a9f7-c9fa-4cc9-9e29-1370c440f392",
                    "07488a0f-0096-4d4b-bdb2-fb50b3a03997",
                    "4e4d35e2-8dad-4af7-83f8-c28f983bffe2",
                    "58b549ca-62af-4e09-8624-4989f776d4d2",
                    "f7af5fb1-92de-495d-ac01-d3ab82081eb8",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "c5909ed6-5c9d-4016-b5ae-eba0008f4b2e",
                    "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                    "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                    "9e0ddd74-6881-44b3-a7d8-f98e9b45e02d"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "e33ad963-60fd-489d-8cdb-9faca522e18a",
                "f32f0c3e-ed80-4155-89b6-0baaba21eaee",
                "3c6dad54-c4b4-4dfb-bd8b-d8dd56e342ec",
                "42c87ead-3038-4682-961c-5dd079071786",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "b8b95a13-3316-47db-b96c-97d1d5614fa2",
                "4c6bca41-6660-45ab-ab8c-7f88cd9d6d70",
                "8fccb0a9-1554-4a01-bdc2-4200952ca25a",
                "436da824-c9b5-4a6d-b121-72c77be98ac8",
                "136eee13-0113-4b91-a804-6154824daa49",
                "27d58f4f-0c0c-47c5-9d27-cb25e9a98bbf",
                "b1a52c96-17d5-495a-98b7-22128b97059f"
            ],
            "dst": [
                "d038e8f6-5910-46b2-88e4-b028a5120a46",
                "e33ad963-60fd-489d-8cdb-9faca522e18a",
                "f32f0c3e-ed80-4155-89b6-0baaba21eaee",
                "fb30b015-690d-4310-b9ec-30596cbaf85d",
                "892bce63-805e-4b45-b9b1-7eaea1c48f2f",
                "72dc4594-8dc0-4956-959f-2408a069f2aa",
                "00e752c4-b042-45ae-85c1-c5bed5c23e03"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "14c4ec7c-af16-4a55-991c-46d574f0ff6c",
                "type": {
                    "namespace": "ol",
                    "name": "is"
                },
                "title": "Is (person to patient, suspect, employee etc.) (-d)",
                "description": "\"Is\" association connecting the general and more specific person-types (including employees).",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "481f59e4-e146-4963-a837-4f4e514df8b7",
                    "bf828c73-2ea9-4d4e-be40-ae9702e64b21",
                    "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "5f122ec5-f8cd-4618-8bfa-3f387141616c",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "1bbc14f8-06cf-4cb0-a103-68ba9df08867",
                "31814e3c-ef0b-437f-8b53-79ad5486c189",
                "b83efabb-b89a-4beb-9a84-190da4adc990",
                "10438ac7-5083-42c0-95b8-9ad5c4c6c87a",
                "f32f0c3e-ed80-4155-89b6-0baaba21eaee",
                "671621a2-6173-4bb4-aafa-a7a69d402563"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "2a2564a5-290c-435b-bb7e-4da8da11a188",
                "type": {
                    "namespace": "ol",
                    "name": "ispictureof"
                },
                "title": "[Image] Is Photo / Picture  / Image of [Entity]",
                "description": "Relatio",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "8c69f5e3-a690-4232-9a4a-2ef25965c305"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "3344fc50-6a73-4f55-9ad5-3ecd89d8de42",
                "type": {
                    "namespace": "ol",
                    "name": "isreferencefor"
                },
                "title": "[Definition / Reference List] Is Reference for [Actions/Statuses]",
                "description": "[Definition / Reference List] Is Reference for [Actions/Statuses] - One Entity Is a Reference for Another (e.g., medication is a reference for all the medication status list entities)",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "89eb9433-3ef9-46f4-96c3-543df6a9e64c"
            ],
            "dst": [
                "60052a61-4d4b-40f7-9dcc-26d28770310a",
                "58cee67c-f589-451f-a711-bd2422f2d9a8",
                "36ed20d7-e78d-4796-a339-805a33a94335"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "4bae15fb-4e1b-48ed-bf87-476df148b1c4",
                "type": {
                    "namespace": "ol",
                    "name": "kinto"
                },
                "title": "Kin to",
                "description": "(Person) is kin to (Person).",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "503bc786-437c-4591-9e4e-64e7d4d1286a"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "2ad709a7-da75-456f-831c-9f263ef9f510",
                "type": {
                    "namespace": "ol",
                    "name": "livesat"
                },
                "title": "Lives At",
                "description": "",
                "schemas": [],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "properties": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "136eee13-0113-4b91-a804-6154824daa49",
                "2fb96971-862a-4cd9-a9bc-00e89436a9d5",
                "59832bb7-3e3a-4352-a155-ee806c6d21ff"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "ecc09e28-0761-4ed0-9d9e-b1c1f883aed6",
                "type": {
                    "namespace": "ol",
                    "name": "locatedat"
                },
                "title": "Located At",
                "description": "The location of an event, organization, or person",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    }
                ],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "properties": [
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "2a45205e-703c-43eb-a060-921bf7245f6a"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8",
                "436da824-c9b5-4a6d-b121-72c77be98ac8",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "782b8d93-af16-423c-ae6d-8841ac60d752",
                "892bce63-805e-4b45-b9b1-7eaea1c48f2f",
                "fb30b015-690d-4310-b9ec-30596cbaf85d",
                "72dc4594-8dc0-4956-959f-2408a069f2aa",
                "b3562c95-33bc-4143-a970-0d173a3f35fc",
                "33f389fe-9ff6-41eb-b7f9-aa1aad545014",
                "b6c79daa-e6ce-4d6b-9c39-892feb9ff077",
                "993b3736-88e4-411a-bcba-2ef6605f8b22",
                "ee29fb9e-dad9-4b9a-a93a-e30d0c488266",
                "1c77a48e-1df1-4554-b695-7b5bc6fb5a68"
            ],
            "dst": [
                "136eee13-0113-4b91-a804-6154824daa49",
                "34789bed-597c-47bd-953a-4ec859b455bb",
                "59832bb7-3e3a-4352-a155-ee806c6d21ff",
                "05aa5c8b-7410-4316-8511-ec4ed7734e91",
                "2fb96971-862a-4cd9-a9bc-00e89436a9d5"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "7410b94d-3b55-48aa-9169-0698721acc60",
                "type": {
                    "namespace": "ol",
                    "name": "memberof"
                },
                "title": "Member of",
                "description": "(Person) is member of a...",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "ee29fb9e-dad9-4b9a-a93a-e30d0c488266",
                "722173d3-c50a-4e67-b595-77bb9365f347",
                "d653f9af-e16d-440d-bc00-5de169e3fd68"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "f6f979d0-4eab-46e9-80db-a706dc282fa1",
                "type": {
                    "namespace": "ol",
                    "name": "observedin"
                },
                "title": "Observed in",
                "description": "Symptom, problem, or condition observed in patient during medical encounter (by medical provider).",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "dc429aee-68fc-4ba2-b943-316ed83dee60",
                "9d40e6a5-5e00-47ec-9645-32fcfd276a86",
                "955dc331-b23e-4b4f-993c-4f2c9bb47fca",
                "fbadb396-0497-413c-83ee-89e7370d7e4d",
                "dab7baf9-5d6f-477a-a70f-f3c8a45c38e6",
                "3062e759-3a3a-4b16-8536-5b0351889960"
            ],
            "dst": [
                "45013f5d-fd6f-41bc-983d-d7b4cfe9876c",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "0080df77-501f-4af9-bd66-9d157a2c707b",
                "type": {
                    "namespace": "ol",
                    "name": "occurredduring"
                },
                "title": "[Activity] Occurred during / Administered during [Encounter]",
                "description": "Link between an activity (e.g., health assessment, evaluation, etc) and the encounter or episode during which it was administrered / during which it took place.",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "3128fd92-34b6-450d-be02-b9a24dcee943"
            ],
            "dst": [
                "85499cb1-58bc-4f5c-85f2-99d7f4baca69",
                "f8c4ed72-709a-477e-96f9-04a54d5dd363"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "5003d581-0cc3-4d05-b4e2-a62f56d28bb9",
                "type": {
                    "namespace": "ol",
                    "name": "oflength"
                },
                "title": "Length of",
                "description": "(Something) is of length (Length entity).",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "892bce63-805e-4b45-b9b1-7eaea1c48f2f",
                "782b8d93-af16-423c-ae6d-8841ac60d752"
            ],
            "dst": [
                "8b626558-cf1d-495d-a0f5-53bbb59bc25e",
                "11725746-5ae7-49da-9ca0-f78afeb1f4be"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "8aee0d8e-4c59-4a2f-8d1b-73c8c15cbdb1",
                "type": {
                    "namespace": "ol",
                    "name": "onbehalfof"
                },
                "title": "On Behalf Of",
                "description": "An agent performs an action on behalf of another",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "58a9d637-98e3-4727-b9c0-eb431c420936",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "436da824-c9b5-4a6d-b121-72c77be98ac8"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "6b961376-7feb-4e77-8906-8bf8131191b6",
                "type": {
                    "namespace": "ol",
                    "name": "ordered"
                },
                "title": "Ordered - [Encounter / Laboratory test / diagnostic study / diagnosis / medication ] ordered for / by [Person]",
                "description": "",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "85499cb1-58bc-4f5c-85f2-99d7f4baca69",
                "89eb9433-3ef9-46f4-96c3-543df6a9e64c",
                "8f7e554e-a877-44c8-9d79-1b976ac3399f",
                "dd21c199-dd98-4c89-8dcc-08c8d38ef80b"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "2b024636-2bf5-4475-bc79-4e88c03c1473",
                "type": {
                    "namespace": "ol",
                    "name": "ownedby"
                },
                "title": "Owned By",
                "description": "",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "06ede450-db5a-461c-956c-f354ce09ad22"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "d9ccdae1-db25-40ad-9e9d-b2144fedb4bd",
                "type": {
                    "namespace": "ol",
                    "name": "partof"
                },
                "title": "Part of",
                "description": "\"Part of\" association. Use case #1: information collected as part of encounter. Use case #2: temporary release which is part of a jail term. Use case #3: warrant which is part of a sentence.",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140",
                    "c5909ed6-5c9d-4016-b5ae-eba0008f4b2e",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "00e752c4-b042-45ae-85c1-c5bed5c23e03",
                "36ed20d7-e78d-4796-a339-805a33a94335",
                "ed8621cb-08a5-4319-b830-74cbf4d56214",
                "955dc331-b23e-4b4f-993c-4f2c9bb47fca",
                "85499cb1-58bc-4f5c-85f2-99d7f4baca69",
                "0446f356-6cba-4180-9b43-472daafb712c",
                "620b6307-b1c2-4a69-8f9c-d889412e569e",
                "9314b075-ac0f-4659-9fed-9be21931ada1",
                "21c84099-a49c-4c44-900b-37a162864a99",
                "6ddd6161-c23c-4d25-9bef-ee283270d443",
                "abcc6784-0d63-4ffb-937e-b7c5edcc9785",
                "58cee67c-f589-451f-a711-bd2422f2d9a8",
                "e7efc244-fc8c-4d75-8326-cf3e8bae5e3e",
                "4eafe435-e02e-42fc-ae9e-52581ab58037",
                "2be328f3-58b0-4575-8fde-2d0f8e6aa8ee",
                "b9215c18-d2e2-411b-b206-a076b3f2db5c",
                "89eb9433-3ef9-46f4-96c3-543df6a9e64c",
                "215f54f1-830e-4edb-bdc5-d4938f4a3e04",
                "153d5ffd-671f-4afb-8f2f-77c5d9adf000",
                "96c8b151-f114-4fda-a9eb-4573c6db3b77",
                "5668b57f-904b-4405-ba41-5cf292408a0c",
                "df44620a-a921-44ee-b962-c10335ef7152",
                "06ede450-db5a-461c-956c-f354ce09ad22",
                "0376458d-b44f-413e-88e2-66c49e61a386",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "f53a0422-0ae8-4975-b2bf-78648fa74693",
                "503bc786-437c-4591-9e4e-64e7d4d1286a",
                "1c77a48e-1df1-4554-b695-7b5bc6fb5a68",
                "b166054b-6cc7-41cd-8f1a-805fdfd20bbc",
                "ee29fb9e-dad9-4b9a-a93a-e30d0c488266",
                "7b6b6b33-a836-4e44-9b07-0ed6ed58e97e",
                "75f9eef8-d199-401e-8519-549f11cd98de",
                "03c9d50f-c712-461f-83c1-7e5cbb09d1c8",
                "36cd21d7-4c91-4450-90e7-918df817e4d1",
                "a1a0926a-0fad-417c-ba84-c223fce20dc9",
                "c77f715a-85e3-4bb4-a25f-850e568dd068",
                "db3d95c3-f4c9-4449-bd47-b363e8e992de",
                "4c663098-2d48-46ae-a875-99b98f8df46e",
                "3128fd92-34b6-450d-be02-b9a24dcee943",
                "661a9417-99df-4231-b39e-2b172cd1593a",
                "20127760-00c9-4baa-b8a5-b2b46a78b8ae",
                "b6c79daa-e6ce-4d6b-9c39-892feb9ff077",
                "873100f8-c672-435a-98d1-cf8e8bae8316",
                "8c69f5e3-a690-4232-9a4a-2ef25965c305"
            ],
            "dst": [
                "892bce63-805e-4b45-b9b1-7eaea1c48f2f",
                "620b6307-b1c2-4a69-8f9c-d889412e569e",
                "352f83ba-55bd-4a45-becc-e302667ab865",
                "1fb0c52c-d236-4c31-a79a-b302ad8e8fa2",
                "f8c4ed72-709a-477e-96f9-04a54d5dd363",
                "85499cb1-58bc-4f5c-85f2-99d7f4baca69",
                "8fff5117-609c-4c39-8905-ee4d7edc21b1",
                "136eee13-0113-4b91-a804-6154824daa49",
                "58cee67c-f589-451f-a711-bd2422f2d9a8",
                "a5a5d8a0-4433-422c-b096-719b8c573f29",
                "dab7baf9-5d6f-477a-a70f-f3c8a45c38e6",
                "5668b57f-904b-4405-ba41-5cf292408a0c",
                "782b8d93-af16-423c-ae6d-8841ac60d752",
                "993b3736-88e4-411a-bcba-2ef6605f8b22",
                "b3562c95-33bc-4143-a970-0d173a3f35fc",
                "3062e759-3a3a-4b16-8536-5b0351889960",
                "f984248c-5069-48b3-a292-719de798b9c7"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "35d629aa-27ba-4771-9cdc-23646a62bd85",
                "type": {
                    "namespace": "ol",
                    "name": "paysfor"
                },
                "title": "Pays for",
                "description": "Association linking an entity with something they pay for.",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "ee29fb9e-dad9-4b9a-a93a-e30d0c488266"
            ],
            "dst": [
                "8ce0e7d0-8b57-4dba-8e96-664cb6d59f54"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "2804d103-a211-439a-9a0d-ac6b7ac5f34b",
                "type": {
                    "namespace": "ol",
                    "name": "performed"
                },
                "title": "Performed - [Encounter / Laboratory test / diagnostic study / diagnosis ] performed for / by [Person]",
                "description": "",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "85499cb1-58bc-4f5c-85f2-99d7f4baca69",
                "8f7e554e-a877-44c8-9d79-1b976ac3399f",
                "dd21c199-dd98-4c89-8dcc-08c8d38ef80b",
                "9d40e6a5-5e00-47ec-9645-32fcfd276a86"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "a86eff53-3558-4cce-88e9-403c509c157a",
                "type": {
                    "namespace": "ol",
                    "name": "postedby"
                },
                "title": "posted by",
                "description": "(Bail / bond /...) is posted by (Person).",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "c8c1ef66-56da-43e1-a1b1-4b0a71d53968"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "c8c1ef66-56da-43e1-a1b1-4b0a71d53968",
                "e33ad963-60fd-489d-8cdb-9faca522e18a",
                "503bc786-437c-4591-9e4e-64e7d4d1286a"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "bc37fd8c-3de5-49e1-80db-ad5feb37e408",
                "type": {
                    "namespace": "ol",
                    "name": "presentsfor"
                },
                "title": "Presents For",
                "description": "Person presents for health encounter or health service",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "8e65eca6-a3d1-4c05-885f-cc3156257139",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "85499cb1-58bc-4f5c-85f2-99d7f4baca69",
                "f8c4ed72-709a-477e-96f9-04a54d5dd363"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "d3bb2c23-d940-4195-870d-265ff04ec6b6",
                "type": {
                    "namespace": "ol",
                    "name": "pricedat"
                },
                "title": "Priced at ",
                "description": "Association linking an entity with a price or cost.",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "2fb96971-862a-4cd9-a9bc-00e89436a9d5"
            ],
            "dst": [
                "8ce0e7d0-8b57-4dba-8e96-664cb6d59f54"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "02fb0106-41fb-446e-a055-4aa3c7e23acc",
                "type": {
                    "namespace": "ol",
                    "name": "provided"
                },
                "title": "Provided (information, supports, referrals)",
                "description": "",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    }
                ],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "properties": [
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "ce275f55-a4e4-40a2-9825-0fa9ae032b9a"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8",
                "deccb4b4-9156-4f43-983d-104c344c2096",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "436da824-c9b5-4a6d-b121-72c77be98ac8"
            ],
            "dst": [
                "c9739135-e5c7-4f0f-9967-f2312a2846d4",
                "26b6b5e0-7341-4941-b34a-3ee7b955335b",
                "9fe1654f-6b5f-43ea-be06-98c5e823b722"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "1ef26f02-20d2-4a79-b67c-77085d93f3e9",
                "type": {
                    "namespace": "ol",
                    "name": "providedby"
                },
                "title": "Provided By",
                "description": "",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "9fe1654f-6b5f-43ea-be06-98c5e823b722"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "436da824-c9b5-4a6d-b121-72c77be98ac8"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "57becc27-0994-466a-a7da-c95c790b69e4",
                "type": {
                    "namespace": "ol",
                    "name": "providedto"
                },
                "title": "(referralrequest) Provided to organization, etc.",
                "description": "Provided to (e.g., referred, referral submitted to a provider/org) .",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "39e13db7-a730-421a-a600-ae0674060140",
                    "ce275f55-a4e4-40a2-9825-0fa9ae032b9a"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [],
            "dst": [],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "6453affa-b2be-4d1a-ae33-2d8378bf6cbf",
                "type": {
                    "namespace": "ol",
                    "name": "providescareduring"
                },
                "title": "[Provider] Provides Care During [Encounter / Episode]",
                "description": "",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "58a9d637-98e3-4727-b9c0-eb431c420936",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "c5909ed6-5c9d-4016-b5ae-eba0008f4b2e",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "697c12ec-fec3-4f6e-b603-89d48cbdf4fe"
            ],
            "dst": [
                "85499cb1-58bc-4f5c-85f2-99d7f4baca69",
                "f8c4ed72-709a-477e-96f9-04a54d5dd363"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "564b21e8-3132-4eb5-8124-65f54ceee5c2",
                "type": {
                    "namespace": "ol",
                    "name": "receivedby"
                },
                "title": "Received by",
                "description": "",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140",
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "fb30b015-690d-4310-b9ec-30596cbaf85d",
                "0446f356-6cba-4180-9b43-472daafb712c"
            ],
            "dst": [
                "deccb4b4-9156-4f43-983d-104c344c2096",
                "f32f0c3e-ed80-4155-89b6-0baaba21eaee",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "2459c188-ca36-4d3e-adec-95702da53870",
                "type": {
                    "namespace": "ol",
                    "name": "recommended"
                },
                "title": "Recommended - [Encounter / Laboratory test / diagnostic study / medication ] Recommended for / by [Person]",
                "description": "",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "85499cb1-58bc-4f5c-85f2-99d7f4baca69",
                "89eb9433-3ef9-46f4-96c3-543df6a9e64c",
                "8f7e554e-a877-44c8-9d79-1b976ac3399f",
                "dd21c199-dd98-4c89-8dcc-08c8d38ef80b"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "9b44a35d-d414-4f7e-929a-92175017b809",
                "type": {
                    "namespace": "ol",
                    "name": "recordedby"
                },
                "title": "Recorded By",
                "description": "Association linking data and the data collection tool, device, or collector. AKA logged by, collected by, etc.",
                "schemas": [],
                "key": [
                    "e90a306c-ee37-4cd1-8a0e-71ad5a180340",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "929bf616-8189-4550-9a41-6b1ba3c1ed50",
                    "1624fc2d-d221-48d2-a7b4-ee94f80a515b",
                    "e90a306c-ee37-4cd1-8a0e-71ad5a180340",
                    "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "06083695-aebe-4a56-9b98-da6013e93a5e",
                    "e8f9026a-2494-4749-84bb-1499cb7f215c"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "14923c22-ac79-4efb-b298-c54c698b84de"
            ],
            "dst": [
                "58b3a5cd-8806-400e-b91d-5ae314063378"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "f1b8544c-dff6-4856-b642-1a83ef69f507",
                "type": {
                    "namespace": "ol",
                    "name": "recordedvia"
                },
                "title": "Recorded Via / Recorded By",
                "description": "",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "1c77a48e-1df1-4554-b695-7b5bc6fb5a68"
            ],
            "dst": [
                "36cd21d7-4c91-4450-90e7-918df817e4d1"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "36db8730-6e33-465b-9a33-12d14ca7fc5b",
                "type": {
                    "namespace": "ol",
                    "name": "refersto"
                },
                "title": "Refers To",
                "description": "One Entity Refers to Another \n [Definition / Reference List] Is Reference for [Actions/Statuses]",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "e53ff059-313c-459d-8dcb-788e1460cf8e"
            ],
            "dst": [
                "f8c4ed72-709a-477e-96f9-04a54d5dd363"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "a5aa644f-767d-4b22-986d-1e7e88cf20f4",
                "type": {
                    "namespace": "ol",
                    "name": "relatedto"
                },
                "title": "related to",
                "description": "Association to indicate a bidirectional relationship",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140",
                    "c5909ed6-5c9d-4016-b5ae-eba0008f4b2e"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "a8933914-d849-4b90-ab0f-eaa1525c4ec8",
                "33f389fe-9ff6-41eb-b7f9-aa1aad545014",
                "b3562c95-33bc-4143-a970-0d173a3f35fc",
                "892bce63-805e-4b45-b9b1-7eaea1c48f2f",
                "26b6b5e0-7341-4941-b34a-3ee7b955335b",
                "d038e8f6-5910-46b2-88e4-b028a5120a46",
                "955dc331-b23e-4b4f-993c-4f2c9bb47fca",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "0376458d-b44f-413e-88e2-66c49e61a386",
                "df44620a-a921-44ee-b962-c10335ef7152"
            ],
            "dst": [
                "72dc4594-8dc0-4956-959f-2408a069f2aa",
                "42c87ead-3038-4682-961c-5dd079071786",
                "d038e8f6-5910-46b2-88e4-b028a5120a46",
                "c2f00f3d-48c9-47a2-80a4-b1cbcf7d5397",
                "dc429aee-68fc-4ba2-b943-316ed83dee60",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "03c9d50f-c712-461f-83c1-7e5cbb09d1c8",
                "06ede450-db5a-461c-956c-f354ce09ad22"
            ],
            "bidirectional": true
        },
        {
            "entityType": {
                "id": "a094e89f-3b4f-4e98-9d2c-12e604ae9d6a",
                "type": {
                    "namespace": "ol",
                    "name": "releasedby"
                },
                "title": "Released by",
                "description": "Links together an officer/agency with someone they are releasing. (Person) released by (Authority).",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "e33ad963-60fd-489d-8cdb-9faca522e18a",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "f32f0c3e-ed80-4155-89b6-0baaba21eaee"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "6c601883-abea-4b45-9f1a-e0a316850ddb",
                "type": {
                    "namespace": "ol",
                    "name": "releasedto"
                },
                "title": "Released to",
                "description": "Association linking a person with whom they are released to (as in, from jail, courts, etc.)",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "e33ad963-60fd-489d-8cdb-9faca522e18a",
                "436da824-c9b5-4a6d-b121-72c77be98ac8",
                "34789bed-597c-47bd-953a-4ec859b455bb",
                "503bc786-437c-4591-9e4e-64e7d4d1286a"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "40f687c8-c6e5-47c0-8459-e1b3b06d19fd",
                "type": {
                    "namespace": "ol",
                    "name": "reported"
                },
                "title": "Reported",
                "description": "Association linking a person or patient with various conditions, issues, and concerns they reported (medical history, medical conditions, allergies, potential barriers to treatment, etc.). Self-report, not diagnosis.",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    }
                ],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "properties": [
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "cf0c7078-c2d3-4cba-ad3e-af5e613c983c"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "7cb21770-9639-4f8a-95be-3ce479a3eaca",
                "308edc79-512e-408c-a280-7a11477224fe",
                "331445f1-3cd7-46f1-a0fd-a6118319a15f",
                "bb0191de-76c4-4756-bf85-142bb29bc274",
                "abd5a44f-5b9e-4c6f-871a-73268db25f6d",
                "c77f715a-85e3-4bb4-a25f-850e568dd068",
                "aa07cf91-0fe7-4e5d-acdf-9b1f2b81106e",
                "6651cc89-9a49-4c5a-9587-0b973321863e",
                "217df3df-1ff4-47fc-a01a-0d13e9aeb976",
                "3c32486b-5a03-45ee-a4d0-d51bf6938f2d",
                "f704fe85-6c21-4370-bdc3-55eb1fc36f57",
                "829c5955-243a-42ef-b395-3327563364f5",
                "b1a52c96-17d5-495a-98b7-22128b97059f",
                "5a50c786-050c-4ba6-a6e1-8c6f167424dc",
                "b83efabb-b89a-4beb-9a84-190da4adc990",
                "993b3736-88e4-411a-bcba-2ef6605f8b22",
                "d2b5c652-de2a-4870-9526-f5118de5fe19",
                "0446f356-6cba-4180-9b43-472daafb712c",
                "955dc331-b23e-4b4f-993c-4f2c9bb47fca",
                "af432ff4-3fe5-4bc7-a1b4-af1e584340c9",
                "bcd99aeb-2938-4b28-b42f-cf35e3008720",
                "96c8b151-f114-4fda-a9eb-4573c6db3b77",
                "b166054b-6cc7-41cd-8f1a-805fdfd20bbc",
                "224bee1a-6f7b-42e6-89eb-d8d3cda0b342",
                "645e7a97-3ef9-4cb7-9ed3-82211e7564f5",
                "3062e759-3a3a-4b16-8536-5b0351889960"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "ee45604f-3d9f-4ceb-8b83-a4ba5fa3cfd0",
                "type": {
                    "namespace": "ol",
                    "name": "required"
                },
                "title": "Required by / required for",
                "description": "Association linking a requirement with the entity requiring it / the entity for which it is required.",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "f55feb4f-1a3c-43f9-9259-1beb33ca61d9"
            ],
            "dst": [
                "26b6b5e0-7341-4941-b34a-3ee7b955335b",
                "36ed20d7-e78d-4796-a339-805a33a94335",
                "89eb9433-3ef9-46f4-96c3-543df6a9e64c",
                "58cee67c-f589-451f-a711-bd2422f2d9a8"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "edcc8c21-8cd9-4143-adb3-527a1f9a6a74",
                "type": {
                    "namespace": "ol",
                    "name": "restrictionsimposed"
                },
                "title": "Restrictions Imposed",
                "description": "[Security access] restrictions imposed on/for [person]",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "507efa1b-0160-4df3-b6b0-f44514e2e7d6"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "a38091f3-43b3-4028-aedc-84e58e8dff23",
                "type": {
                    "namespace": "ol",
                    "name": "restrictionslifted"
                },
                "title": "Restrictions lifted ",
                "description": "[Security access] restrictions lifted for [person]",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "507efa1b-0160-4df3-b6b0-f44514e2e7d6"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "aa29d6c3-1cb9-445f-b722-07f6a40efa31",
                "type": {
                    "namespace": "ol",
                    "name": "resultsin"
                },
                "title": "results in",
                "description": "An association which describes that one entity results in another. (Event) results in (Event).",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140",
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "782b8d93-af16-423c-ae6d-8841ac60d752",
                "33f389fe-9ff6-41eb-b7f9-aa1aad545014",
                "892bce63-805e-4b45-b9b1-7eaea1c48f2f",
                "42c87ead-3038-4682-961c-5dd079071786",
                "a0432ae5-799f-4dfc-a72e-adbde3e312b9",
                "c285edde-ca58-457c-a24c-2e8654b8c410"
            ],
            "dst": [
                "892bce63-805e-4b45-b9b1-7eaea1c48f2f",
                "33f389fe-9ff6-41eb-b7f9-aa1aad545014",
                "782b8d93-af16-423c-ae6d-8841ac60d752",
                "d038e8f6-5910-46b2-88e4-b028a5120a46",
                "a8933914-d849-4b90-ab0f-eaa1525c4ec8",
                "f55feb4f-1a3c-43f9-9259-1beb33ca61d9",
                "3a98a633-3a0f-49db-9b5b-64508945f533",
                "fbadb396-0497-413c-83ee-89e7370d7e4d",
                "9d40e6a5-5e00-47ec-9645-32fcfd276a86"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "2c625199-7f01-4344-8730-afd4eea52e70",
                "type": {
                    "namespace": "ol",
                    "name": "scheduled"
                },
                "title": "Scheduled",
                "description": "Association between a person and scheduled appointment, admission, etc",
                "schemas": [],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "36ed20d7-e78d-4796-a339-805a33a94335"
            ],
            "dst": [
                "4d9dcc53-1655-4869-8684-879a24bc5a7d",
                "c6088c26-29f0-4f7d-9491-dce34c4b9112",
                "d36848f0-ed6c-4c7a-9292-3bffe112bac3"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "3de26710-64a1-4a3f-9c7e-61f9bc9d3dae",
                "type": {
                    "namespace": "ol",
                    "name": "screenedwith"
                },
                "title": "Screened With / Assessed Using",
                "description": "Association between a person and a screening tool, assessment tool, or the results of said assessment. (Links patient to medical assessments carried out in that setting, at the time of visit/evaluation).",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    }
                ],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "properties": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "8e65eca6-a3d1-4c05-885f-cc3156257139"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "6ddd6161-c23c-4d25-9bef-ee283270d443",
                "fbadb396-0497-413c-83ee-89e7370d7e4d",
                "215f54f1-830e-4edb-bdc5-d4938f4a3e04",
                "dd21c199-dd98-4c89-8dcc-08c8d38ef80b",
                "30945c4f-2d52-4d4c-bad1-24a72743c159",
                "8fff5117-609c-4c39-8905-ee4d7edc21b1",
                "a5a5d8a0-4433-422c-b096-719b8c573f29",
                "5668b57f-904b-4405-ba41-5cf292408a0c",
                "5d83014d-1be7-4d96-8b9b-057a0bfd9592"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "061a7746-158b-4f1c-b1c3-82ee9aa95aad",
                "type": {
                    "namespace": "ol",
                    "name": "searchedby"
                },
                "title": "Searched by",
                "description": "(Person) is searched by (Authority).",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "f32f0c3e-ed80-4155-89b6-0baaba21eaee"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "76677f67-c0bf-4db9-bc9c-c050828ba477",
                "type": {
                    "namespace": "ol",
                    "name": "sentencedwith"
                },
                "title": "Sentenced With",
                "description": "(Person) sentenced with (Sentence).",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "782b8d93-af16-423c-ae6d-8841ac60d752",
                "11725746-5ae7-49da-9ca0-f78afeb1f4be"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "347dfc76-fe3f-4eff-89df-10f603bd46df",
                "type": {
                    "namespace": "ol",
                    "name": "servedwith"
                },
                "title": "Served with",
                "description": "(Person) served with (warrant)",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "661a9417-99df-4231-b39e-2b172cd1593a"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "db52d8a2-4354-4ed8-9ad6-b2f16f9951de",
                "type": {
                    "namespace": "ol",
                    "name": "signedby"
                },
                "title": "Signed by",
                "description": "Association between individual and signature information.",
                "schemas": [],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "properties": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "c5909ed6-5c9d-4016-b5ae-eba0008f4b2e"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "b6c79daa-e6ce-4d6b-9c39-892feb9ff077"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "893406c1-2fec-499a-b35d-43ca6aa50b6b",
                "type": {
                    "namespace": "ol",
                    "name": "spokenby"
                },
                "title": "Spoken By",
                "description": "",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "75f9eef8-d199-401e-8519-549f11cd98de",
                "153d5ffd-671f-4afb-8f2f-77c5d9adf000"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "503bc786-437c-4591-9e4e-64e7d4d1286a"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "34aeaca4-d424-43cd-a3b4-f2032d583280",
                "type": {
                    "namespace": "ol",
                    "name": "subjectof"
                },
                "title": " is subject of",
                "description": "(Person) is subject of ...",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "42c87ead-3038-4682-961c-5dd079071786",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "892bce63-805e-4b45-b9b1-7eaea1c48f2f",
                "c8c1ef66-56da-43e1-a1b1-4b0a71d53968",
                "a8933914-d849-4b90-ab0f-eaa1525c4ec8",
                "9fe1654f-6b5f-43ea-be06-98c5e823b722"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "a4da94ce-450e-4740-87a0-ef05d57597c6",
                "type": {
                    "namespace": "ol",
                    "name": "suspectedof"
                },
                "title": "Suspected of",
                "description": "(Person) suspected of (offense/allegation)",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "33f389fe-9ff6-41eb-b7f9-aa1aad545014",
                "0446f356-6cba-4180-9b43-472daafb712c"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "e53e8eb6-dbbd-4381-b965-2f340834918a",
                "type": {
                    "namespace": "ol",
                    "name": "tomanage"
                },
                "title": "To Manage / For Management Of  (e.g.,event to manage medication)",
                "description": "Association linking a medication and the event during which it is managed (in a health care encounter).    [Event] To Manage / For Management Of [Medication]",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "39e13db7-a730-421a-a600-ae0674060140",
                    "5c58f7b1-83ec-4ddc-b501-25eb3b25c7f6"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "d36848f0-ed6c-4c7a-9292-3bffe112bac3",
                "58cee67c-f589-451f-a711-bd2422f2d9a8"
            ],
            "dst": [
                "89eb9433-3ef9-46f4-96c3-543df6a9e64c"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "a404cc39-0259-4c8e-91b5-8def2071d997",
                "type": {
                    "namespace": "ol",
                    "name": "transportedby"
                },
                "title": "Transported by",
                "description": "Links together an officer/agency with someone they are transporting.",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "e33ad963-60fd-489d-8cdb-9faca522e18a",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "f32f0c3e-ed80-4155-89b6-0baaba21eaee"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "6cfefe90-49a9-4f9d-8aec-54f836a20352",
                "type": {
                    "namespace": "ol",
                    "name": "updatedby"
                },
                "title": "Updated By",
                "description": "An association that elucidates the relationship between a data element and the person/system that updated the data.",
                "schemas": [],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "properties": [
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "5a50c786-050c-4ba6-a6e1-8c6f167424dc",
                "abd5a44f-5b9e-4c6f-871a-73268db25f6d",
                "6651cc89-9a49-4c5a-9587-0b973321863e",
                "c6088c26-29f0-4f7d-9491-dce34c4b9112",
                "4d9dcc53-1655-4869-8684-879a24bc5a7d",
                "aa07cf91-0fe7-4e5d-acdf-9b1f2b81106e",
                "a0432ae5-799f-4dfc-a72e-adbde3e312b9",
                "2e20c21e-6448-4a2d-bc57-9a5f2c45b589",
                "308edc79-512e-408c-a280-7a11477224fe",
                "f704fe85-6c21-4370-bdc3-55eb1fc36f57",
                "7cb21770-9639-4f8a-95be-3ce479a3eaca",
                "3c32486b-5a03-45ee-a4d0-d51bf6938f2d",
                "9e7a5933-f649-4061-9e29-b90b828089e1",
                "26b6b5e0-7341-4941-b34a-3ee7b955335b",
                "136eee13-0113-4b91-a804-6154824daa49",
                "89eb9433-3ef9-46f4-96c3-543df6a9e64c",
                "436da824-c9b5-4a6d-b121-72c77be98ac8",
                "829c5955-243a-42ef-b395-3327563364f5",
                "331445f1-3cd7-46f1-a0fd-a6118319a15f",
                "3c0320b0-93cf-4b16-8b16-3720feafff93",
                "bb0191de-76c4-4756-bf85-142bb29bc274",
                "217df3df-1ff4-47fc-a01a-0d13e9aeb976",
                "b1a52c96-17d5-495a-98b7-22128b97059f",
                "c77f715a-85e3-4bb4-a25f-850e568dd068",
                "b83efabb-b89a-4beb-9a84-190da4adc990",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "deccb4b4-9156-4f43-983d-104c344c2096"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "deccb4b4-9156-4f43-983d-104c344c2096"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "16c6c1f7-0428-4205-90f9-6d6c15ab4961",
                "type": {
                    "namespace": "ol",
                    "name": "usedby"
                },
                "title": "Used By",
                "description": "Association between an entity (AKAa device, data collection tool, object or other entity) and the person using it.",
                "schemas": [],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988"
                ],
                "properties": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "f12a9c1e-c81c-46fc-9974-7344fb6046d8"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "58b3a5cd-8806-400e-b91d-5ae314063378",
                "06ede450-db5a-461c-956c-f354ce09ad22"
            ],
            "dst": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                "80c86a96-0e3f-46eb-9fbb-60d9174566a5"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "4da7703b-6455-43e8-8683-ce61832c181a",
                "type": {
                    "namespace": "ol",
                    "name": "usedfor"
                },
                "title": "(Resource) Used For / During / By",
                "description": "Association to describe resource use - Resource is used for what purpose, by what person, during what activity",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "cbc62d3d-4383-42df-b0df-2f9c6e392ffa"
            ],
            "dst": [
                "6ddd6161-c23c-4d25-9bef-ee283270d443",
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "3d70c2e3-6517-4ff4-ba8e-361a9774de18",
                "type": {
                    "namespace": "ol",
                    "name": "using"
                },
                "title": "Using (substance, medication)",
                "description": "Association between a person using or taking a substance or medication",
                "schemas": [],
                "key": [
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                ],
                "properties": [
                    "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                    "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "b1a52c96-17d5-495a-98b7-22128b97059f",
                "89eb9433-3ef9-46f4-96c3-543df6a9e64c"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "f6e14b7c-8d41-4307-b25f-a326cd707d2b",
                "type": {
                    "namespace": "ol",
                    "name": "verifies"
                },
                "title": "Verifies",
                "description": "",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140",
                    "6675a7e8-2159-41b1-9431-4053690fa3c9"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "9242fe71-04c3-4bd5-a906-806e7e3b88f2",
                "4cd615be-157f-4950-b254-1ed1f62de765"
            ],
            "dst": [
                "b6c79daa-e6ce-4d6b-9c39-892feb9ff077"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "e0747a0d-ecda-439e-b206-a3dc6d1ce554",
                "type": {
                    "namespace": "ol",
                    "name": "victimof"
                },
                "title": "victim of ",
                "description": "(Person) is victim of (allegation / incident / offense)",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "0446f356-6cba-4180-9b43-472daafb712c"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "0d7b83b5-026f-423d-b833-a39f6351c02c",
                "type": {
                    "namespace": "ol",
                    "name": "worksas"
                },
                "title": "Works As",
                "description": "Association between person and personnel/employee entity, noting when the person first started working with the agency or organization.",
                "schemas": [],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "13925c02-f0ff-4052-9c09-161f39ea5ec2",
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "f32f0c3e-ed80-4155-89b6-0baaba21eaee"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "9912f936-b36c-458d-aa13-61c914df1ed2",
                "type": {
                    "namespace": "ol",
                    "name": "worksat"
                },
                "title": "(Person) works at (agency/organization/...).",
                "description": "",
                "schemas": [
                    {
                        "namespace": "ol",
                        "name": "criminaljustice"
                    },
                    {
                        "namespace": "v2",
                        "name": "v2"
                    }
                ],
                "key": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "properties": [
                    "39e13db7-a730-421a-a600-ae0674060140"
                ],
                "propertyTags": {},
                "category": "EntityType",
                "shards": 3
            },
            "src": [
                "f32f0c3e-ed80-4155-89b6-0baaba21eaee"
            ],
            "dst": [
                "e33ad963-60fd-489d-8cdb-9faca522e18a"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "e16171ac-26b6-4e85-8437-c6d65ca5f2d1",
                "type": {
                    "namespace": "ol",
                    "name": "workson"
                },
                "title": "Works On / With",
                "description": "",
                "schemas": [],
                "key": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                ],
                "properties": [
                    "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "92a6a5c5-b4f1-40ce-ace9-be232acdce2a"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "80c86a96-0e3f-46eb-9fbb-60d9174566a5"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "d0742bcc-2155-4b9e-824f-1d9fbda46bc8",
                "type": {
                    "namespace": "person",
                    "name": "becomes"
                },
                "title": "Becomes (person to patient, suspect etc.)",
                "description": "\"Becomes\" association connecting the general and more specific person-types (excluding employees).",
                "schemas": [],
                "key": [
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                ],
                "properties": [
                    "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                    "481f59e4-e146-4963-a837-4f4e514df8b7"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab"
            ],
            "dst": [
                "461c2d06-d7d6-4b5d-aa9e-3d0a4f9a6b6d",
                "31814e3c-ef0b-437f-8b53-79ad5486c189"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "19d53b9f-7f5a-4ad8-8f8c-8548032af2b3",
                "type": {
                    "namespace": "publicsafety",
                    "name": "involvedin"
                },
                "title": "Involved in (-d)",
                "description": "\"Involved in\" association. Links together a call for service and a vehicle.",
                "schemas": [
                    {
                        "namespace": "v2",
                        "name": "v2"
                    },
                    {
                        "namespace": "ol",
                        "name": "deprecated"
                    }
                ],
                "key": [
                    "2080c6bb-5c37-4eb2-b629-3fe09b665d42"
                ],
                "properties": [
                    "2080c6bb-5c37-4eb2-b629-3fe09b665d42"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [],
            "dst": [
                "963b597b-b28d-4f59-b2e6-4d443499e464"
            ],
            "bidirectional": false
        },
        {
            "entityType": {
                "id": "0da18c64-1fe3-43a7-aca3-d8ebf01ddbde",
                "type": {
                    "namespace": "publicsafety",
                    "name": "transportedtohospital"
                },
                "title": "Transported to (hosp.)",
                "description": "Association linking a hospital with the entity (i.e., police dept.) transporting someone there.",
                "schemas": [],
                "key": [
                    "4c4ebaa2-f15a-49a2-ad60-c9e67d00a4fb",
                    "25431c60-6c26-4210-a422-569c5226ba7e"
                ],
                "properties": [
                    "4c4ebaa2-f15a-49a2-ad60-c9e67d00a4fb",
                    "25431c60-6c26-4210-a422-569c5226ba7e"
                ],
                "propertyTags": {},
                "category": "AssociationType",
                "shards": 3
            },
            "src": [
                "69bd68de-7baa-4a9c-bd50-ed3d1e4047ae"
            ],
            "dst": [
                "1a024fe2-693a-4cf2-95e9-7a18735ca3f2"
            ],
            "bidirectional": false
        }
    ],
    "entityTypes": [
        {
            "id": "c2bd25ed-cdec-41be-bf5d-a700902f84db",
            "type": {
                "namespace": "bhr",
                "name": "followup"
            },
            "title": "Behavioral Health Report (BHR) Follow-up",
            "description": "Follow-up report to a behavioral health report. Based on Baltimore's paper form.",
            "schemas": [],
            "key": [
                "8117d21a-c144-4114-8d7f-a420cd35114c",
                "998bc748-4f40-4f5d-98ed-91ac4dab28a1"
            ],
            "properties": [
                "8117d21a-c144-4114-8d7f-a420cd35114c",
                "998bc748-4f40-4f5d-98ed-91ac4dab28a1",
                "9ee60ae1-d4f1-4cd6-a242-0cd287e7cad8",
                "c39806a5-0c6d-4824-87f7-0fa3495a2236",
                "26140cbf-4492-4ac4-a94b-802515edf721",
                "4f99eb18-3f0b-492f-827c-7bdcf92fcff7",
                "b1b546ed-d248-476a-b705-905838550413",
                "27313332-a7fb-4760-a143-8ccc8e81b64e",
                "c16ab352-3099-4579-b900-40d54fec44c6",
                "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "69bd68de-7baa-4a9c-bd50-ed3d1e4047ae",
            "type": {
                "namespace": "bhr",
                "name": "report"
            },
            "title": "Behavioral Health Report (BHR)",
            "description": "Behavioral Health Report",
            "schemas": [],
            "key": [
                "998bc748-4f40-4f5d-98ed-91ac4dab28a1",
                "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
            ],
            "properties": [
                "0442724d-526e-4abb-a98c-49245ad7cfae",
                "b71a2186-e56a-4ade-b5a9-561d21db1331",
                "998bc748-4f40-4f5d-98ed-91ac4dab28a1",
                "9c82a2ce-0492-40ca-bfd8-7323f12e1e29",
                "9ee60ae1-d4f1-4cd6-a242-0cd287e7cad8",
                "c5e40bd2-df10-450f-beed-ac1f4f9d0b89",
                "1c1d84ba-40f6-46ec-aaaf-c681d2366c8e",
                "2a7b3588-c3c4-49e2-9b4f-6b9fca771795",
                "6668b209-7b41-4fef-8c76-b70998f02a35",
                "98bddd57-a75c-4779-a3a4-dd8a3c317e4f",
                "28e996a0-7df7-401c-a2b0-e336ea679804",
                "564e1b7a-5e25-4e58-b50c-5b1cfcb1c581",
                "6b438142-adda-4720-85dc-5a069fe8f00f",
                "760b44e1-75ca-4806-9f8d-eb7c44e31acf",
                "05e8cb86-1975-4ca2-950a-3d37654543dd",
                "603c441d-0ba9-4554-a3db-32d671e9a875",
                "e5fdc012-6cf0-4e8a-9900-d37625f21ec1",
                "df257768-2d79-4cfc-9f7b-2759f17daf35",
                "993e327b-6fee-44e4-9d3a-937ff910b2ef",
                "702f3d3b-69c1-4069-87ba-6378f04ddc24",
                "aa335fd9-5212-4b11-b6bb-cace9cf6cb56",
                "80c95ba4-5c9d-457c-b7b2-85f4702a82f6",
                "68023b1d-9025-466d-80e2-b548eddeca8b",
                "1eea0dc5-bea2-4462-8de5-4b7c8f9ad0cf",
                "bd4a3c16-cf71-4757-bc5a-b2c0eb32dcb8",
                "10dc1a8d-a0b1-48b7-8383-e003fc521559",
                "977ee856-bcda-4d35-b8d6-3271c4b0a456",
                "f6fe187a-e5c3-43d6-820c-386793394f83",
                "70916123-0a98-430d-81b5-8dca614728da",
                "227132f3-7802-43fd-b0fb-5950dcd6e21c",
                "3c05d4f1-3201-4117-8228-40ec6dd3e4b3",
                "c65408d0-c966-413b-b868-d13f29402faf",
                "4b28408e-78e9-4d32-967e-e1ad8e26027f",
                "31ab7160-6a8b-46fa-aa9c-01d9b3f11806",
                "44d1f72b-9246-4d22-b5a7-d72ce0cf6db7",
                "54b42b66-b45c-47d2-8759-ad73f482d331",
                "4f99eb18-3f0b-492f-827c-7bdcf92fcff7",
                "8f3d8e21-9424-4129-ba82-0d3c4e9667b8",
                "533f9b61-fe30-4c0c-befb-9e473a651993",
                "112e96c7-9392-41be-aaf3-99c42bf2827f",
                "a3614c79-38c6-41bb-a09b-0f7abf95ab65",
                "3a998043-7a38-4050-84c3-bef051e10714",
                "2f175283-543f-4e61-9835-cf925796a342",
                "dcc42fe8-0154-4188-97e6-6a6b1b92affc",
                "02c6ade8-4914-40b6-a711-dff9c3d9e64f",
                "6194623f-c162-47e7-b49f-60089ad198d4",
                "11445207-4211-404e-89e5-5212a7314a84",
                "9db70c46-fcf2-4020-a275-0a266cef2ea1",
                "29b8f8f4-9449-4605-8fe3-0d0b08d4c6fe",
                "e325d17e-2793-47a0-be1d-631e4df7ceb7",
                "22c7191f-9816-41fc-ac6f-0e17e7aefd61",
                "51bcc54d-2386-4f47-9a75-f11bd94f23dc",
                "d0eb7570-433f-4eb2-83c3-cd2a25ef4c1b",
                "0d3bac15-d2dd-4b7b-bd26-a8af62475a8e",
                "1c79ff6e-8b7b-482f-a408-0f22a20b130a",
                "24ebdb0b-fe91-430c-bafd-b5b0d19d8918",
                "3321f380-4515-414d-be74-c7ad44bcc5a6",
                "c39806a5-0c6d-4824-87f7-0fa3495a2236",
                "26140cbf-4492-4ac4-a94b-802515edf721",
                "531f3f43-9531-4e31-af27-aa1feaa2cc88",
                "a21c1ba0-7eb0-40d4-b960-6b303459aa05",
                "2795a838-883d-4f5e-b3ae-1cd39733f1ba",
                "8172d32b-49a6-43f2-b973-6a4ef2cf495e",
                "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                "13628582-3512-49b4-9db9-860e991f289c",
                "30ed2183-c972-4035-a3c7-11896e1adf71",
                "01a38115-3bb7-49a1-8003-a32ae02ad283",
                "3817e465-4b2a-45e9-809b-df301a1d89eb",
                "15b7e438-b029-4953-a813-e26f7a6546d8",
                "20ee1d1d-b513-4769-978d-f313571cd1f5",
                "14c86462-c720-416b-b664-032c62cada16",
                "f1e1af30-fb7c-4ca9-9a51-dc10b8e4e072",
                "b54a27e5-f840-4ad0-a335-9311df4c8978",
                "86bf4aec-9e9b-41ad-b6f9-43e042c8c46c",
                "449179ea-4a8c-4d84-884b-13d13300cf21",
                "ffaed27e-6724-42b6-bca6-8e4c7e61a466",
                "81c9961e-7ac8-4a12-9b8b-c6403bd5ce49",
                "4c4ebaa2-f15a-49a2-ad60-c9e67d00a4fb",
                "9469a7eb-6973-4525-9a57-0e6f402cd095",
                "2ed1e391-89a7-41dd-b2bd-15079b9916dd",
                "2358f345-8fd3-4d2f-a172-1cea8505e0a9",
                "7c1b100f-8ca2-4dfd-a751-0fce1339991b",
                "8bb0fb29-b210-4ace-a3d4-17a7b1af39fd",
                "6c29dee0-f4bf-4bd5-8034-7334f4a3074b",
                "457b03d7-84b9-4028-a7f9-9836d7cd2658",
                "9441199f-3c8f-4f4b-af15-3e9546bc2531",
                "41b6073c-5198-4465-8338-166f41fd1e54",
                "7472589d-4f1b-4d7b-bd84-470b3f324ab8",
                "df73ac08-6a4a-48d4-9847-77681794e0f7",
                "bd0354d9-e0c9-42ce-ad21-88a6a9450e57",
                "db6eb03a-2eb5-4eb2-abee-b97147e9778e",
                "c3c5d959-e6e0-42f7-ac38-fcdbcbcde0f7",
                "52f9d0c8-46c4-4d97-81c8-b153d9e825bb",
                "e2a6b1bc-fcf9-4b7d-a7da-998e794c0583",
                "39e13db7-a730-421a-a600-ae0674060140",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "b02188e0-3001-4cef-9184-e31b1bba4cc0",
                "95c7b8b5-8a7b-41a3-8bdc-2a8f1df99cca",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "8b455c6e-0c0e-478c-a291-7519f1b0c279",
                "3391e728-bfc1-43e2-bd9b-1106ec9d64c7",
                "9a32aedd-6d65-4bde-b919-d6eb073a4273",
                "24cd6477-01c5-4f25-8453-904d8a5ce84d",
                "68c294ec-2b0c-449a-857c-397a92ca2a74",
                "5a3b4a37-4675-410d-93cd-2f9262c23bef",
                "437e5dac-d5e2-4a8f-beb5-7bb067ac015c",
                "e75d3b82-3d82-485d-b203-984c64b5dc5c",
                "44b84985-9849-4f8e-af7f-8f8e0c9557ff",
                "4ac907f3-3c2c-4a5b-9435-0c17f5d93e03",
                "df9d6c53-b52f-4455-9acd-a001beb57fea"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "461c2d06-d7d6-4b5d-aa9e-3d0a4f9a6b6d",
            "type": {
                "namespace": "criminaljustice",
                "name": "cfsorigin"
            },
            "title": "Call for service (CFS) Origin/Initiation",
            "description": "Details on how a Call for Service is initiated or originated.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "0de9808a-d8e3-4f62-9413-e86e5ede304a"
            ],
            "properties": [
                "915df70e-ebe3-4b59-9d4e-59c0609a5577",
                "9d2d4a0e-26af-46c8-b366-fd872dbc5506",
                "cebc61bf-9052-4e11-99af-3aa3113688a8",
                "57d24585-7aec-43b7-b0f9-4162321366de",
                "0de9808a-d8e3-4f62-9413-e86e5ede304a",
                "39dc4d54-8fac-46ad-ae3d-e538123a9b30",
                "e455b024-72bc-4dfe-b362-3852aadb8496",
                "c16ab352-3099-4579-b900-40d54fec44c6"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "4c21bcc3-0d4c-40ba-95cd-275a763f94ef",
            "type": {
                "namespace": "criminaljustice",
                "name": "incident"
            },
            "title": "Incident (-d)",
            "description": "A police incident",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                },
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "3ca03e79-6b50-4fc4-94a0-17b25eabae34"
            ],
            "properties": [
                "3ca03e79-6b50-4fc4-94a0-17b25eabae34",
                "999dbc43-519f-43b2-8119-73a2ef196bf5",
                "477db70c-ee49-41bf-97d2-c4eb0e1ffcc4",
                "91106b89-5842-48e4-a21f-ef923557c1b8",
                "eabab409-8ce7-499f-a4fb-d71356ada13b",
                "5f122ec5-f8cd-4618-8bfa-3f387141616c",
                "13ad1d8a-24da-4c5d-9168-018d33979007",
                "25431c60-6c26-4210-a422-569c5226ba7e",
                "c228a9c8-e0f3-4bb0-8b09-78b2c6162caa",
                "c97555a0-ed79-4944-a000-ab961da3ab48",
                "d673e32c-6e67-4885-8e30-47e98f6229f2",
                "9d2d4a0e-26af-46c8-b366-fd872dbc5506",
                "062fd4f6-30c0-4a4a-a221-18bb1da2cb88",
                "f7c87cb1-7ddd-4dec-b634-bef6f184a557",
                "e71e3faa-fc19-45f8-87e7-c3e2449a1dac",
                "c2b18c7a-6625-4a31-8196-a8d3cb0e3309",
                "19466bb0-eeba-4c69-9ab1-8999b3cb43bf",
                "8de9d1f4-9fe1-4056-a342-9142b227fd86",
                "80c3ffc7-5a8a-4547-8d60-dfb0b06e92b4",
                "285e6bfc-2a73-49ae-8cb2-b112244ed85d",
                "cb92bd0b-0338-4f93-9936-e857e12be830",
                "6f995298-c6b7-4f9c-b9a2-81d873a7c692",
                "b94361f0-7172-4556-a4f3-99a183bff03c",
                "e6d790e8-f2aa-457f-9597-369cf7e0214a",
                "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                "bd96f0c8-dbc0-49cd-b3a2-bb3faa9d6860",
                "d7a0c31f-6bea-4818-a299-7378b5516df2",
                "f105dd1b-1c71-4042-8ea8-53013070d9da"
            ],
            "propertyTags": {
                "91106b89-5842-48e4-a21f-ef923557c1b8": [
                    "timeline",
                    "eventdate"
                ],
                "c228a9c8-e0f3-4bb0-8b09-78b2c6162caa": [
                    "breadcrumbs"
                ],
                "d673e32c-6e67-4885-8e30-47e98f6229f2": [
                    "breadcrumbs"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "e13743e7-babd-49a0-93e5-f93c8b7502cc",
            "type": {
                "namespace": "criminaljustice",
                "name": "jailrecord"
            },
            "title": "Jail stay/record (-d)",
            "description": "A jail stay/record.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                },
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "6900fcb7-f44d-4b65-b392-40617dea5fed"
            ],
            "properties": [
                "6900fcb7-f44d-4b65-b392-40617dea5fed",
                "81b3073b-e01f-4b69-9b64-03fcea0ccab7",
                "2216f875-9645-4786-b062-9ec3960e4630",
                "e32ceae7-c00b-4e9f-bf98-0f03e94fb566",
                "18f2e4c6-86ce-4f5d-ad8f-0eb018947371",
                "a67bcbdd-f9e1-4830-9730-d88a419a693d",
                "523de719-c894-4bed-91ec-3b1d2fa51f4c",
                "5d37978a-b658-462a-8903-4a9a2d2d69e3",
                "cccdf498-4c90-4015-85c3-2a83536b705a",
                "656ded15-4503-4623-977f-b1188a64cafa",
                "3cfead4f-09ce-4ef8-bd03-a70dce298ac5",
                "7c2953f9-babd-4ecf-9adf-fc20ff1f9fa9",
                "62c82f33-295a-4437-8a3c-2d409c1e2224",
                "e3b223ce-4f91-4125-be4d-ec7371382823",
                "f3b41e19-d1e9-4004-8763-b514a93983d2",
                "92ecb196-23f1-4ab4-a8c3-084ccbcc151a",
                "d146903f-9196-40b8-90ce-3a0e8e4557a5",
                "2a590340-a360-4456-af81-949f6d490a88",
                "d5cd8ae6-f0de-48fe-9139-89108adedc19",
                "4d5db4fe-a0c8-45f8-af6d-cd7cd4cab86c",
                "c7d2c503-651d-483f-8c17-72358bcfc5cc",
                "49adf7e7-1962-44c0-a683-4091366e03fd",
                "26990519-ac4e-4dc9-9559-f9b500a728da",
                "b730b3b3-d442-45a1-8d81-c082b1dd3a45",
                "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                "f9404d36-7cbb-462c-88d8-033b494afe10",
                "5641cb0f-07ac-4f88-8fd2-da2f8d40d68c",
                "1bde9fa3-7bdf-437e-81f3-ce50944bfb1e",
                "77f1e62e-a648-4be1-84c8-c3712eef3ff3",
                "2b509f15-cb22-4515-8638-088641a0ca86",
                "73cc64b4-6b03-40aa-85fe-9492847587d2",
                "52722320-b04e-41ae-95b3-ec670256e0b9",
                "cfea602e-9b53-4f10-8c2f-97173b77003d",
                "49c477f2-95bb-4fe2-a654-e2c1c8419304",
                "1901c0b0-f051-4660-8d6d-b5a040dc9dcb",
                "3e1ba12f-13cf-475c-bdeb-033381785ce5",
                "c16ab352-3099-4579-b900-40d54fec44c6",
                "14908e47-923a-4c87-8d94-5881bf871cc1",
                "e6d740ac-daa7-40e6-b864-c83d5054fa21"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "c1d76f87-b32b-4b7f-b24f-5c4b1f30aa78",
            "type": {
                "namespace": "criminaljustice",
                "name": "offense"
            },
            "title": "Offense (-d)",
            "description": "A criminal justice offense",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                },
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "9b2bd81e-51cc-44ce-9051-18d833762848"
            ],
            "properties": [
                "9b2bd81e-51cc-44ce-9051-18d833762848",
                "c228a9c8-e0f3-4bb0-8b09-78b2c6162caa",
                "d673e32c-6e67-4885-8e30-47e98f6229f2",
                "c97555a0-ed79-4944-a000-ab961da3ab48",
                "cd901bfa-d785-4d96-8969-6df2fb69f04e",
                "eabab409-8ce7-499f-a4fb-d71356ada13b",
                "5f122ec5-f8cd-4618-8bfa-3f387141616c",
                "c16ab352-3099-4579-b900-40d54fec44c6",
                "1956bf5b-a597-4ba4-bcef-5b286ac83339",
                "8de9d1f4-9fe1-4056-a342-9142b227fd86",
                "8d86916c-af7e-46bd-9890-061643b6ea6f",
                "e6eafc89-f9e7-436b-b267-054854c4d564",
                "73224904-f769-47c6-85f0-d70c519b54cd",
                "bc7869bd-f646-4e0c-89ad-ae77cdadb3ef"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "31814e3c-ef0b-437f-8b53-79ad5486c189",
            "type": {
                "namespace": "criminaljustice",
                "name": "person"
            },
            "title": "Justice-Involved Personal Information (-d)",
            "description": "Further details relating to someone involved in criminal justice proceedings.",
            "schemas": [],
            "key": [
                "7c0f56bb-e77c-4a2a-8e17-4542849aeeda"
            ],
            "properties": [
                "e823bc68-f7b8-40e0-9c77-076414e46467",
                "d9a90e01-9670-46e8-b142-6d0c4871f633",
                "45aa6695-a7e7-46b6-96bd-782e6aa9ac13",
                "96dc5643-d138-4b2e-b5f7-dcf23d12959d",
                "7c0f56bb-e77c-4a2a-8e17-4542849aeeda",
                "9b55f541-416c-4ab2-8d6e-b30e547eecb4",
                "656ded15-4503-4623-977f-b1188a64cafa",
                "5ea6e8d5-93bb-47cf-b054-9faaeb05fb27",
                "fa00bfdb-98ec-487a-b62f-f6614e4c921b",
                "f0a6a588-aee7-49a2-8f8e-e5209731da30",
                "ac37e344-62da-4b50-b608-0618a923a92d",
                "8293b7f3-d89d-44f5-bec2-6397a4c5af8b",
                "cf7a0bbe-db1e-4561-b5b1-c05d16c31091",
                "49adf7e7-1962-44c0-a683-4091366e03fd",
                "c270d705-3616-4abc-b16e-f891e264b784",
                "43a6df96-1cb8-4daa-9a82-f9361b8777c7"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "ee29fb9e-dad9-4b9a-a93a-e30d0c488266",
            "type": {
                "namespace": "demographics",
                "name": "household"
            },
            "title": "Household, family",
            "description": "A household or a family",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "2cb50324-4126-4ee4-9698-c9185e4bad92"
            ],
            "properties": [
                "6606dbf5-3823-457e-a0bd-adad141e46e0",
                "c22b7629-4323-4d69-94fd-dae4d64df69c",
                "2cb50324-4126-4ee4-9698-c9185e4bad92",
                "c23cf4b3-d0bf-4d3a-a507-396991a595ce",
                "09108469-c88e-42e5-8dd3-491848405bb4",
                "cd940361-dc39-4486-be20-a1d43757c20d",
                "f28cc0f3-1065-42df-b43f-d70b313a25de",
                "50b95693-1602-45ab-8846-98b3721ac208",
                "d5a1b393-df47-485c-ad34-d77fd83acb5e"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "35ba83eb-678e-422e-b4ca-2c51e28e713d",
            "type": {
                "namespace": "dmf",
                "name": "riskfactors"
            },
            "title": "DMF Risk Factors",
            "description": "Risk factors considered in calculating a DMF",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "f37ce91f-cfd7-4190-839a-bfab3b5b82fd",
                "fc8a6936-c47b-443d-aced-761d41399d79",
                "969d9ce4-a455-4314-8da6-ad843ca09783",
                "59c3c6f2-9309-4302-912d-902e6883793a",
                "b70c96ea-4f8f-4650-8a2a-fee6ecea7aa8",
                "8f8aaa2d-68a5-4f4f-8931-f3f78eac3913",
                "16a5c35b-7dd0-41a0-bec3-9561f30c7614",
                "7aec427d-92c8-467a-9be8-fc23f4847b91",
                "b05983fa-a6bb-4ac0-8aaf-f03d0771757c",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "63bb0e5a-3b42-43f1-bd4c-5f9ab6ada66e",
                "07acc554-ba50-4d42-b2ad-06ddfbab9636"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "2cdef3ca-d9c9-4ddd-9e9d-a2c539b9d074",
            "type": {
                "namespace": "general",
                "name": "Arrest"
            },
            "title": "Arrest (-d)",
            "description": "Arrest",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "4ee740d5-1eda-4ace-a3b1-355245cc0063"
            ],
            "properties": [
                "09539d58-dc53-44ca-9c63-9604a02681bd",
                "1fe28610-d4f6-4608-99d4-0c2b6e805703",
                "2358f345-8fd3-4d2f-a172-1cea8505e0a9",
                "4ee740d5-1eda-4ace-a3b1-355245cc0063",
                "5d37978a-b658-462a-8903-4a9a2d2d69e3",
                "5e99b5ce-3da4-47de-8bfd-d07f5fcc07c6",
                "8388b7cc-19eb-411f-9af1-57999eeb27e0",
                "9cc5f76d-b17a-4f14-95d2-b6aed679f869",
                "acd8f65f-c7e5-4227-bfda-10507abaf44f",
                "c374f9fb-2fc1-44c4-b24a-cb1f2d3c643a",
                "c3a8ab49-bb93-4591-a1b4-b952cf9502bd",
                "fd934c65-f02a-4514-bf6a-937567a66af2"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "705c33d4-5426-4fd2-977d-4ce5a047326c",
            "type": {
                "namespace": "general",
                "name": "DispatchType"
            },
            "title": "Dispatch Type",
            "description": "Dispatch Type",
            "schemas": [],
            "key": [
                "9f91239a-9614-4a70-b36d-e70c5da6fdaa"
            ],
            "properties": [
                "10839c42-2252-4630-ab22-a9752333a601",
                "39dc4d54-8fac-46ad-ae3d-e538123a9b30",
                "71fe0840-fb24-4867-a23c-47a96c517141",
                "9f91239a-9614-4a70-b36d-e70c5da6fdaa",
                "c938eb9b-15da-4b87-bf0a-006e290db4ec"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "54d0679d-2aea-4bda-932c-33936d0a8493",
            "type": {
                "namespace": "general",
                "name": "SentencingRecords"
            },
            "title": "Sentencing Records",
            "description": "Sentencing Records",
            "schemas": [],
            "key": [
                "73224904-f769-47c6-85f0-d70c519b54cd"
            ],
            "properties": [
                "73224904-f769-47c6-85f0-d70c519b54cd",
                "86834b9d-30db-45f5-8d1a-5ed1e787f413",
                "a988059c-4108-49a1-977c-44baf45c3dde",
                "afc463ff-695d-470c-96ae-78f2e186b7f4"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
            "type": {
                "namespace": "general",
                "name": "person"
            },
            "title": "Person",
            "description": "A person",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
            ],
            "properties": [
                "e9a0b4dc-5298-47c1-8837-20af172379a5",
                "d0935a7e-efd3-4903-b673-0869ef527dea",
                "7b038634-a0b4-4ce1-a04f-85d1775937aa",
                "481f59e4-e146-4963-a837-4f4e514df8b7",
                "d3f3f3de-dc1b-40da-9076-683ddbfeb4d8",
                "1e6ff0f0-0545-4368-b878-677823459e57",
                "6f61a510-98d6-4da3-9c40-a951dd6ddd39",
                "2efc1030-5b57-42eb-9de2-80c81469305d",
                "c270d705-3616-4abc-b16e-f891e264b784",
                "f950d05a-f4f2-451b-8c6d-56e78bba8b42",
                "1407ac70-ea63-4879-aca4-6722034f0cda",
                "6ec154f8-a4a1-4df2-8c57-d98cbac1478e",
                "96dc5643-d138-4b2e-b5f7-dcf23d12959d",
                "45aa6695-a7e7-46b6-96bd-782e6aa9ac13",
                "49adf7e7-1962-44c0-a683-4091366e03fd",
                "5ea6e8d5-93bb-47cf-b054-9faaeb05fb27",
                "8293b7f3-d89d-44f5-bec2-6397a4c5af8b",
                "9b55f541-416c-4ab2-8d6e-b30e547eecb4",
                "ac37e344-62da-4b50-b608-0618a923a92d",
                "c7d2c503-651d-483f-8c17-72358bcfc5cc",
                "cf4598e7-5bbe-49f7-8935-4b1a692f6111",
                "d9a90e01-9670-46e8-b142-6d0c4871f633",
                "f0a6a588-aee7-49a2-8f8e-e5209731da30",
                "fa00bfdb-98ec-487a-b62f-f6614e4c921b",
                "0111a451-0f30-4e53-8902-79b55f53ef1a",
                "e823bc68-f7b8-40e0-9c77-076414e46467",
                "314d2bfd-e50e-4965-b2eb-422742fa265c",
                "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                "32eba813-7d20-4be1-bc1a-717f99917a5e",
                "ae5bbe59-ab6d-43f9-8d69-386d8f85f818",
                "603c441d-0ba9-4554-a3db-32d671e9a875",
                "111fc894-0478-4ce5-923c-149f720442f7",
                "692a2108-7f5d-40fa-a376-2341acea88b0",
                "8237d146-bf3c-4652-a44a-5ecd9dabb2ad",
                "d6c150b5-fff6-410f-a090-0973950bbe24",
                "d005e6e8-a3ff-42e9-b5c8-1be5cdea1b27",
                "70d2ff1c-2450-4a47-a954-a7641b7399ae"
            ],
            "propertyTags": {
                "1407ac70-ea63-4879-aca4-6722034f0cda": [
                    "pie"
                ],
                "1e6ff0f0-0545-4368-b878-677823459e57": [
                    "eventdate"
                ],
                "6ec154f8-a4a1-4df2-8c57-d98cbac1478e": [
                    "pie"
                ],
                "7b038634-a0b4-4ce1-a04f-85d1775937aa": [
                    "breadcrumbs"
                ],
                "e9a0b4dc-5298-47c1-8837-20af172379a5": [
                    "breadcrumbs"
                ],
                "f950d05a-f4f2-451b-8c6d-56e78bba8b42": [
                    "pie"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "04db765f-7c68-409d-83ac-530aac1736a2",
            "type": {
                "namespace": "general",
                "name": "place"
            },
            "title": "Place",
            "description": "A building or an organization",
            "schemas": [],
            "key": [
                "2cc4a88c-86f0-404c-b328-caf3ec7b9c66"
            ],
            "properties": [
                "2cc4a88c-86f0-404c-b328-caf3ec7b9c66",
                "70d2ff1c-2450-4a47-a954-a7641b7399ae",
                "cebc61bf-9052-4e11-99af-3aa3113688a8",
                "f5628aca-71b2-40fe-ad66-374cb1f4d506"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "f6526a96-37c1-49e5-a362-3f33105ea6d8",
            "type": {
                "namespace": "general",
                "name": "speakerverificationprofile"
            },
            "title": "Speaker Verification Profile",
            "description": "Details of a speaker verification profile.",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "e49d422a-62d2-4883-b5e2-ad60e0a603b0",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "90eaf97d-68e8-425b-b190-7caa9460b67f",
                "d5809a95-13b2-433d-a0fb-2852455484f9",
                "d3cc7402-ac19-443b-b7a9-15840a55dcfa"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "0257769a-7b29-4ee3-9d64-dc2e7fcbab60",
            "type": {
                "namespace": "geo",
                "name": "address"
            },
            "title": "Address (-d)",
            "description": "Address",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                },
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "34888d10-4c3b-4400-9426-23dfc3d0f8e5"
            ],
            "properties": [
                "3cd2facf-9ae4-4fff-8e97-c0fe6f435193",
                "63dd667e-566c-4851-9d19-f4bb5f1374e8",
                "25431c60-6c26-4210-a422-569c5226ba7e",
                "3677e8ea-5da9-41f3-8b56-006548564eac",
                "4dfd7e4f-207a-4591-8cf3-2e5c9c7d0e53",
                "6a85d1e1-fda5-4c9c-9e2e-2dda4ed8d3d1",
                "e96f4905-e323-47b6-be43-2a356fd82e08",
                "132820b9-6f20-40c8-945f-9ca2ec45e233",
                "64fb51c4-a1f1-4a52-aeda-73b7ff071c54",
                "90d8c6f6-385d-4064-a582-ad95a0ccc040",
                "06083695-aebe-4a56-9b98-da6013e93a5e",
                "e8f9026a-2494-4749-84bb-1499cb7f215c",
                "32eba813-7d20-4be1-bc1a-717f99917a5e",
                "f43dccfe-7dbe-425a-a2c0-eb104daba964",
                "314d2bfd-e50e-4965-b2eb-422742fa265c",
                "34888d10-4c3b-4400-9426-23dfc3d0f8e5"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "8e38aace-12f1-41fb-861d-f3af2d08df39",
            "type": {
                "namespace": "health",
                "name": "allergy"
            },
            "title": "Allergies",
            "description": "Reported medical allergies",
            "schemas": [],
            "key": [
                "148f7999-db89-49c0-b847-12d4ac92803b",
                "4f9a1ed5-377b-45d1-9014-2a7aafd76f74",
                "70d2ff1c-2450-4a47-a954-a7641b7399ae"
            ],
            "properties": [
                "148f7999-db89-49c0-b847-12d4ac92803b",
                "4f9a1ed5-377b-45d1-9014-2a7aafd76f74",
                "70d2ff1c-2450-4a47-a954-a7641b7399ae"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "1a024fe2-693a-4cf2-95e9-7a18735ca3f2",
            "type": {
                "namespace": "health",
                "name": "hospitals"
            },
            "title": "Hospitals",
            "description": "List of hospitals ",
            "schemas": [],
            "key": [
                "ee3a7573-aa70-4afb-814d-3fad27cda988"
            ],
            "properties": [
                "4c4ebaa2-f15a-49a2-ad60-c9e67d00a4fb",
                "ee3a7573-aa70-4afb-814d-3fad27cda988",
                "25431c60-6c26-4210-a422-569c5226ba7e"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "5b16b066-99a7-4dbc-81c3-2b10ea12929c",
            "type": {
                "namespace": "health",
                "name": "substancetreatmenthistory"
            },
            "title": "Substance Treatment History",
            "description": "Substance Treatment History",
            "schemas": [],
            "key": [
                "51374bce-3c0d-4222-a057-000f670294e7"
            ],
            "properties": [
                "51374bce-3c0d-4222-a057-000f670294e7",
                "7d09b632-b4bb-4ee9-925f-1b672e4567db",
                "86772954-91d7-41f5-8929-9675d6310b74",
                "94a74d24-30fb-4063-94ea-db758a08a4f1",
                "adf443f7-eae6-4276-8f4b-55cc5b705880",
                "ae1a1181-bf76-471c-bb3e-663b9ecbff36",
                "c16ab352-3099-4579-b900-40d54fec44c6",
                "c7cca1cc-7bf9-4ac4-8430-3eefdb103c9e",
                "cf1f3061-fc1c-47e3-8c64-bd0f77939ed0",
                "e55b4e57-c97a-48c2-ac48-115531664630"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "8d713e79-21ff-41c3-9bcb-6d460f02a845",
            "type": {
                "namespace": "housing",
                "name": "assessment"
            },
            "title": "Housing Resident Assessment (-d)",
            "description": "Can be used for both admission assessments and discharge assessments.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "b2ba8787-68b4-448a-84a7-04acaf6ad4d5"
            ],
            "properties": [
                "78916b55-22fe-4ed8-bde6-b819f4114dc9",
                "18a2c775-3929-4937-b85b-758e66522d8d",
                "02bee94a-5bc8-4c07-a902-b8698ce625b7",
                "8f3d9dbd-6f2e-4f92-bf45-68809ab828d4",
                "b470a3c9-016a-44ce-b855-8382ba53dca5",
                "23b2104b-83d1-48e0-b884-a149a7da7315",
                "49adf7e7-1962-44c0-a683-4091366e03fd",
                "fafbf5d2-d681-4468-b7e3-3472c661b042",
                "d8d5cd4c-0262-4dbe-b446-97dc913a4b3b",
                "8d52f9b7-fe9d-4d09-aec4-bbbfee74f714",
                "fb03ce47-10b5-4d39-8ccf-96e868a7f1e9",
                "f63e82fe-5d2d-44fb-b7fa-d82ab6217d36",
                "0965a96a-9799-4093-9020-79b0fa8340a3",
                "37ff5f8d-3747-4242-8365-f9a09e239ea6",
                "9dd6385b-50c9-43c2-bb86-9232cc187d1a",
                "b8d807b2-6c7a-4d1b-add6-aac8e24f251b",
                "314d2bfd-e50e-4965-b2eb-422742fa265c",
                "ff610b7c-54e1-47e1-ba5e-4087b62f5164",
                "cb81457e-c49d-4cd2-9d00-d82a4d1a9028",
                "22d68e05-8579-42b1-a188-c05bfe0773b7",
                "c5397609-0124-4c54-8ec9-79f82341d19d",
                "10aa082b-7173-44ca-a00f-d629b874b598",
                "a962a8ba-2c4c-4110-92b5-dc37c0d02e22",
                "b996bdd3-1748-48a0-8348-a24feb4ea74f",
                "aa6b31ce-f283-426c-b0e9-8bc4e459d4c5",
                "3bdb9a7d-507c-4b7e-b728-cb3d4b96d837",
                "a07f05f9-b19d-4e96-9851-c098bfed5050",
                "293be234-531d-4253-82bc-57498395138c",
                "dbf8c083-c8d7-47d3-bc4b-e91baaeef526",
                "f8c070a6-6315-494d-b8b8-f413e2ace393",
                "acdef6c8-348d-4c66-9ec2-2a082e838786",
                "a07b2d64-d1a4-4555-a57d-470490920d32",
                "36864a7e-ba1f-487d-adca-4dc55ba82700",
                "1db0650e-8a68-4c6c-8b3a-fd7b89aabedd",
                "1b959654-02fd-487b-adc3-eb6049a878ff",
                "5a7afac3-471b-4b5a-8d58-d7748f0f2525",
                "27246bfa-7496-4b8b-a5d5-aaf2398108dc",
                "126c3754-281f-4c88-83ef-3c8c78198d5b",
                "fa6e9c4d-09bd-46bc-a7f8-c1ac7c5d820e",
                "c22b7629-4323-4d69-94fd-dae4d64df69c",
                "6606dbf5-3823-457e-a0bd-adad141e46e0",
                "a6487f5b-5212-4726-a5cd-4ddbf8f8355b",
                "8cf711e4-5a75-4d02-84be-efc2611191eb",
                "06acbbb5-2c9d-4e6c-a440-a3efa4f4f00e",
                "543bfa76-a46d-4ec0-a00e-75678af4552c",
                "1ec2ea70-eff1-46d1-a0c4-0e06a0c84bd4",
                "bca1d47b-abbb-4755-a06c-2e1c15bea118",
                "7b5a9dac-7111-4825-baeb-13edf11d65b3",
                "b8a5ac4e-a501-4186-9b64-908844fb8425",
                "04e9becf-0add-440b-b0da-f3cdf559c1d6",
                "84bbabed-c6a2-4166-b743-92dcc743cae7",
                "2bf49a3d-36d9-4e02-a824-1757d4ebc61f",
                "8e15cc71-c2b5-4f1f-ae42-eb572ad66aa6",
                "b2ba8787-68b4-448a-84a7-04acaf6ad4d5",
                "19139922-3ff4-4c37-8d81-0bfe7cf10e28"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "57d33e0a-6c84-4447-9d36-d39fb19efa6f",
            "type": {
                "namespace": "housing",
                "name": "personnel"
            },
            "title": "Personnel - Housing, Peer Support and Recovery",
            "description": "Personnel and employees supporting the housing, peer support, and substance use recovery efforts.",
            "schemas": [],
            "key": [
                "9f97811b-fef5-434d-b3b2-9e72171a66b8"
            ],
            "properties": [
                "e4578982-dac4-4ee3-b997-f8853a4204ee",
                "913cf5e1-f652-4484-a455-b4e4b9dc012e",
                "bf828c73-2ea9-4d4e-be40-ae9702e64b21",
                "f43dccfe-7dbe-425a-a2c0-eb104daba964",
                "9f97811b-fef5-434d-b3b2-9e72171a66b8",
                "0111a451-0f30-4e53-8902-79b55f53ef1a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "0d02fc2b-561d-4de9-ac14-611b54a99eb9",
            "type": {
                "namespace": "housing",
                "name": "stay"
            },
            "title": "Supportive Housing/Shelter Stay",
            "description": "Details about a person or household's stay in supportive housing, a shelter, or other temporary housing program.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "ee3a7573-aa70-4afb-814d-3fad27cda988"
            ],
            "properties": [
                "e5c16bdb-bddb-4daa-9daf-89a99d227202",
                "07dcc100-037d-4b6f-9062-35126b2f1318",
                "b63ac291-3a26-4d99-8677-1e1c0f5c44da",
                "c8a675e0-c45f-4343-a538-86d609223bd0",
                "d8d5cd4c-0262-4dbe-b446-97dc913a4b3b",
                "57d24585-7aec-43b7-b0f9-4162321366de",
                "c9937ae9-4602-4c28-b719-3575aad643f4",
                "047e196d-695b-4568-8932-ca6932156b1b",
                "92fcd6e9-6839-42b4-83fa-47716b647ef6",
                "22d68e05-8579-42b1-a188-c05bfe0773b7",
                "f3b41e19-d1e9-4004-8763-b514a93983d2",
                "1ceaf4eb-dace-4b3a-961e-e3fe4beb7c7c",
                "e6cdba08-218f-427b-9aa8-ebfcbd5c148a",
                "2a659e04-9a9b-43d7-9585-7bcf6d1cf25d",
                "02379201-8815-489d-a056-37e36d299aae",
                "32eba813-7d20-4be1-bc1a-717f99917a5e",
                "2cb50324-4126-4ee4-9698-c9185e4bad92",
                "ee3a7573-aa70-4afb-814d-3fad27cda988",
                "92a6a5c5-b4f1-40ce-ace9-be232acdce2a"
            ],
            "propertyTags": {
                "07dcc100-037d-4b6f-9062-35126b2f1318": [
                    "breadcrumbs"
                ],
                "1ceaf4eb-dace-4b3a-961e-e3fe4beb7c7c": [
                    "breadcrumbs"
                ],
                "c8a675e0-c45f-4343-a538-86d609223bd0": [
                    "timeline",
                    "eventdate"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "594bafb7-58c4-4722-bcf5-f3f87c884dea",
            "type": {
                "namespace": "j",
                "name": "EnforcementOfficial"
            },
            "title": "Officer",
            "description": "An officer",
            "schemas": [],
            "key": [
                "c7d2c503-651d-483f-8c17-72358bcfc5cc"
            ],
            "properties": [
                "1b8c38d4-3e7c-4db0-aee2-276beb3aae56",
                "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                "7b038634-a0b4-4ce1-a04f-85d1775937aa",
                "8c80f4f6-7f6d-40da-97e8-b2330976d7e3",
                "8e410ffd-4ea5-4ea0-b475-e4c73ea9d0a7",
                "929bf616-8189-4550-9a41-6b1ba3c1ed50",
                "9d2d4a0e-26af-46c8-b366-fd872dbc5506",
                "c7d2c503-651d-483f-8c17-72358bcfc5cc",
                "d05e183e-8bad-4ff8-b5ee-9b552fc2fc03",
                "e9a0b4dc-5298-47c1-8837-20af172379a5"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "e2de2838-5eb4-4ed9-9c08-52b51db712cd",
            "type": {
                "namespace": "j",
                "name": "sentence"
            },
            "title": "Sentence (-d)",
            "description": "A sentence",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "aeded0e9-cdec-428a-a90a-c62f0546ac08",
                "8fb52b9f-9491-47b8-805e-c6d077b34d8a",
                "ca4e7ec9-9609-492f-8657-cbc225df9e29",
                "a5ca682a-3d5a-4b6a-86be-a541c33a2439",
                "abe359a9-1508-47c2-a7bd-1a9ff7dd5d39",
                "33a587ce-ca9d-4e68-a878-b4c704947577",
                "2c7e8f24-d292-48a6-b0d0-c3c878be019d",
                "72172d6b-6eba-487a-9269-81b0853892ba",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "dcec451c-8e42-4ca0-af1d-7273530b26f1",
                "1819ceea-97c5-450b-b5f1-91982d103e71",
                "d3781367-e327-4135-86e8-3259bcf7bae0",
                "279d099a-5561-4834-9567-99ab08540a47",
                "5ea92743-6c40-4eb3-a178-94b68896b195",
                "ca840a75-3f8a-41f5-86ce-ff341ed01a0d",
                "1b70a3fa-1da5-46e3-b4b4-36f1aec0761f",
                "4e897a5f-27e9-4fad-898b-35e367d2182a",
                "5bed5489-98ea-4fc7-bf68-58d0e3c7d203",
                "c5ac112a-f797-439b-bb00-ad188ef87f21",
                "0243a08b-f1ef-40f8-8162-e97d80d3119b",
                "6b8551c0-1999-4a6f-aa4e-3e745302a246",
                "086bbcea-d443-452e-946c-f73108c16d85"
            ],
            "propertyTags": {
                "086bbcea-d443-452e-946c-f73108c16d85": [
                    "breadcrumbs"
                ],
                "aeded0e9-cdec-428a-a90a-c62f0546ac08": [
                    "timeline",
                    "eventdate"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "7de3bc94-4571-4a3a-871f-3822e98ab60d",
            "type": {
                "namespace": "justice",
                "name": "ChargeDetails"
            },
            "title": "Charge Details",
            "description": "Details of a charge",
            "schemas": [],
            "key": [
                "162a165a-ca23-4c29-bc43-aa65a0ba773e"
            ],
            "properties": [
                "162a165a-ca23-4c29-bc43-aa65a0ba773e",
                "43c61444-69a4-46e7-a334-fe823914e779",
                "44f80fec-7d58-4b7a-a6bc-f35f3d652a32",
                "6388ea39-fde1-46d8-bdd6-49aebe16f5f7",
                "6527f4a6-58b3-4c15-8e47-abe8ba377485",
                "680d4599-5fa7-4b52-ba23-b50cc6ff426b",
                "6f7c3c65-0717-4c39-8a40-4152a94f1278",
                "7c2953f9-babd-4ecf-9adf-fc20ff1f9fa9",
                "7c804cb8-8b8d-4d8d-98d2-c1c0b38774cc",
                "9b84989f-2e1f-42da-8833-65cf09c5b2d6",
                "a3482196-c6b1-4cd6-a12e-aba8ba3803c1",
                "c5d24216-6a34-4da2-a872-240006c1d398",
                "c9141182-5bdf-4bf4-89d0-88b2191817b0",
                "e45e5d5e-6714-4b9c-b9c4-c8aaf9a2d94b",
                "e6eafc89-f9e7-436b-b267-054854c4d564",
                "edbd3e8f-dd82-43ba-859d-62e4d84d1183",
                "f3b0f612-4434-4ef6-9ff2-2bf028bf4afd",
                "f9404d36-7cbb-462c-88d8-033b494afe10"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "415d008f-4310-4477-b333-404e6b11e537",
            "type": {
                "namespace": "justice",
                "name": "JailBooking"
            },
            "title": "Jail Booking (-d)",
            "description": "A jail booking",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "2216f875-9645-4786-b062-9ec3960e4630"
            ],
            "properties": [
                "2216f875-9645-4786-b062-9ec3960e4630",
                "34b530a3-c43f-4439-b410-d09e77ea8e0d",
                "3b5c462d-af10-498f-bd12-5a9913754f29",
                "752f6e0b-1c37-4920-80bd-28ba0c9939e4",
                "7a0d8601-33f4-4ddb-9040-0f738a4898e9",
                "8b2028a3-ea0a-4776-815d-8ff4902a6bdb",
                "9a54d4e0-11a0-4edd-b5b1-25236de4f7e1",
                "c7d2c503-651d-483f-8c17-72358bcfc5cc",
                "dc74e5d7-5fed-432c-b129-dcfa3e2c818b",
                "e3b223ce-4f91-4125-be4d-ec7371382823",
                "f3b41e19-d1e9-4004-8763-b514a93983d2",
                "f7c38fcd-e815-4f16-90ee-13932336265d",
                "caf53ac1-30f2-492a-a284-65eef9ed7827"
            ],
            "propertyTags": {
                "3b5c462d-af10-498f-bd12-5a9913754f29": [
                    "breadcrumbs"
                ],
                "7a0d8601-33f4-4ddb-9040-0f738a4898e9": [
                    "breadcrumbs"
                ],
                "dc74e5d7-5fed-432c-b129-dcfa3e2c818b": [
                    "breadcrumbs"
                ],
                "f7c38fcd-e815-4f16-90ee-13932336265d": [
                    "timeline",
                    "eventdate"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "2dbf1e58-e218-4211-965c-070b6c4388c9",
            "type": {
                "namespace": "justice",
                "name": "JailRecord"
            },
            "title": "Jail Record (-d)",
            "description": "A jail record.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "c7d2c503-651d-483f-8c17-72358bcfc5cc"
            ],
            "properties": [
                "031554d1-13fc-48dc-ae36-cff7bfe33f40",
                "15a3e630-f11b-4b54-9e0f-e2866ddf27a7",
                "17d5e422-2bb4-42ad-878f-e9490807edba",
                "1ad43659-6efb-477c-b2b8-db588af59bc9",
                "2a590340-a360-4456-af81-949f6d490a88",
                "474f6088-49b2-478a-93ef-2d9541858701",
                "523de719-c894-4bed-91ec-3b1d2fa51f4c",
                "62c82f33-295a-4437-8a3c-2d409c1e2224",
                "6527f4a6-58b3-4c15-8e47-abe8ba377485",
                "656ded15-4503-4623-977f-b1188a64cafa",
                "6c808228-5445-4977-8d11-19477cb48380",
                "6ed9947f-3d0a-4bfa-bd47-4a0e86a231f6",
                "c7d2c503-651d-483f-8c17-72358bcfc5cc",
                "cccdf498-4c90-4015-85c3-2a83536b705a",
                "cf97bce4-3aea-4623-b744-2650e2c20348",
                "d5cd8ae6-f0de-48fe-9139-89108adedc19",
                "e32ceae7-c00b-4e9f-bf98-0f03e94fb566",
                "e6d740ac-daa7-40e6-b864-c83d5054fa21",
                "f9091990-47d5-43e1-a112-a38e181d8dcf"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "dfc59ce4-576b-4d61-9515-dba20e0dca5c",
            "type": {
                "namespace": "justice",
                "name": "Offense"
            },
            "title": "Offense (-d)",
            "description": "An offense",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "213fb0dc-0ea2-4f7d-95dc-e0e937482eef",
                "5641cb0f-07ac-4f88-8fd2-da2f8d40d68c",
                "98b437c3-1e1f-4f51-91b0-837c084f61d8",
                "af0adecd-9608-470b-935f-44799542fb7c",
                "d3affb63-83fe-403d-b3f7-ee91de6df63e",
                "f6748439-1049-400d-ac44-7803820289be"
            ],
            "properties": [
                "213fb0dc-0ea2-4f7d-95dc-e0e937482eef",
                "4bf71bea-8ea7-4acb-b91c-d10f2c1654eb",
                "5641cb0f-07ac-4f88-8fd2-da2f8d40d68c",
                "98b437c3-1e1f-4f51-91b0-837c084f61d8",
                "af0adecd-9608-470b-935f-44799542fb7c",
                "d3affb63-83fe-403d-b3f7-ee91de6df63e",
                "d673e32c-6e67-4885-8e30-47e98f6229f2",
                "f6748439-1049-400d-ac44-7803820289be",
                "e6eafc89-f9e7-436b-b267-054854c4d564",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "73224904-f769-47c6-85f0-d70c519b54cd"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "ef890efc-3cfd-4de9-8788-aa2ec695235b",
            "type": {
                "namespace": "justice",
                "name": "Sentence"
            },
            "title": "A Sentence",
            "description": "A sentence",
            "schemas": [],
            "key": [
                "1bde9fa3-7bdf-437e-81f3-ce50944bfb1e",
                "2b2129ab-e484-44ae-8e49-c733ef313999",
                "2b509f15-cb22-4515-8638-088641a0ca86",
                "48c44a9a-6960-4a3e-aabe-714fbc3ba03c",
                "4f30f9c1-dc1d-46b4-890e-5e5690ed3955",
                "73cc64b4-6b03-40aa-85fe-9492847587d2",
                "769f8a1c-39ed-4364-aba9-876535f89730",
                "77f1e62e-a648-4be1-84c8-c3712eef3ff3",
                "80aabcc7-aed2-499b-bef0-f4519c34155b",
                "a162a734-2715-4cca-80a0-b500630d7eaf",
                "ad23db44-065a-4b5a-8433-dd529b57e221",
                "d146903f-9196-40b8-90ce-3a0e8e4557a5",
                "d69f91d1-648f-4b1d-9129-50f17980a795",
                "d76b572e-f105-4f6c-a6c6-043984c71332",
                "d9a90e01-9670-46e8-b142-6d0c4871f633"
            ],
            "properties": [
                "1bde9fa3-7bdf-437e-81f3-ce50944bfb1e",
                "21f5b00c-284a-4b45-bc37-355649bbb4f0",
                "2b2129ab-e484-44ae-8e49-c733ef313999",
                "2b509f15-cb22-4515-8638-088641a0ca86",
                "48c44a9a-6960-4a3e-aabe-714fbc3ba03c",
                "4f30f9c1-dc1d-46b4-890e-5e5690ed3955",
                "73cc64b4-6b03-40aa-85fe-9492847587d2",
                "769f8a1c-39ed-4364-aba9-876535f89730",
                "77f1e62e-a648-4be1-84c8-c3712eef3ff3",
                "80aabcc7-aed2-499b-bef0-f4519c34155b",
                "a162a734-2715-4cca-80a0-b500630d7eaf",
                "ad23db44-065a-4b5a-8433-dd529b57e221",
                "b3f06fb6-47e8-46d6-80ab-62f91733a99f",
                "d146903f-9196-40b8-90ce-3a0e8e4557a5",
                "d69f91d1-648f-4b1d-9129-50f17980a795",
                "d76b572e-f105-4f6c-a6c6-043984c71332",
                "d9a90e01-9670-46e8-b142-6d0c4871f633",
                "e3b223ce-4f91-4125-be4d-ec7371382823",
                "57d24585-7aec-43b7-b0f9-4162321366de",
                "db4bc6de-48c3-40eb-a946-7ed051f52752",
                "f9404d36-7cbb-462c-88d8-033b494afe10"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "64326d03-6cdb-4481-b817-e4e720311acc",
            "type": {
                "namespace": "justice",
                "name": "agency"
            },
            "title": "Agency",
            "description": "A criminal justice agency.",
            "schemas": [],
            "key": [
                "dc74e5d7-5fed-432c-b129-dcfa3e2c818b"
            ],
            "properties": [
                "dc74e5d7-5fed-432c-b129-dcfa3e2c818b"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "0f79443c-5ed8-4b1e-8e5f-61dee705e309",
            "type": {
                "namespace": "justice",
                "name": "bond"
            },
            "title": "Bond",
            "description": "A bond",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "d7aa079f-a58d-4a61-bba1-df2ebd277498",
                "ce2d54c2-8d45-4e75-b924-b15ce48c0407",
                "774a1ce8-1582-4fc4-bb87-6fb7055a4734",
                "a7ecc119-6f7f-4603-b9ec-68b9141ea114",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "e8f2b636-730c-44e1-b2ee-51e700397a16",
                "c8460593-7a12-450a-80ad-bc8e97018a0d"
            ],
            "propertyTags": {
                "774a1ce8-1582-4fc4-bb87-6fb7055a4734": [
                    "breadcrumbs"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "161ca75e-8a16-41c1-8b02-7b1649c3a2d7",
            "type": {
                "namespace": "justice",
                "name": "booking"
            },
            "title": "Booking (v1)",
            "description": "A booking",
            "schemas": [],
            "key": [
                "cec17b62-2821-4701-ab0b-1bae728d52de"
            ],
            "properties": [
                "2216f875-9645-4786-b062-9ec3960e4630",
                "cec17b62-2821-4701-ab0b-1bae728d52de",
                "e7ea04e3-5047-4d9c-9bbe-b0bffe2c9cd1",
                "6f7c3c65-0717-4c39-8a40-4152a94f1278",
                "d26c23ae-7864-481a-9fe8-8121ec6a8670",
                "f3b0f612-4434-4ef6-9ff2-2bf028bf4afd",
                "57d24585-7aec-43b7-b0f9-4162321366de",
                "c9c26fde-b5de-4c65-9456-4553532b0f39",
                "32003564-c9d7-482e-ae52-c3291d529a07",
                "3a765400-e994-48d4-9622-f438b4be38bd",
                "92ecb196-23f1-4ab4-a8c3-084ccbcc151a",
                "a4a4223f-f400-45ce-a093-9b6672ba4dc0",
                "2cb2a17a-fcb2-46b6-8279-a33e1d863c35",
                "e6cdba08-218f-427b-9aa8-ebfcbd5c148a",
                "7d396794-6c42-4c93-bcc5-df3ba2b967ad",
                "d146903f-9196-40b8-90ce-3a0e8e4557a5",
                "dc74e5d7-5fed-432c-b129-dcfa3e2c818b",
                "e60acf67-42d2-40fd-8493-3835e16ae038",
                "db4bc6de-48c3-40eb-a946-7ed051f52752"
            ],
            "propertyTags": {
                "6f7c3c65-0717-4c39-8a40-4152a94f1278": [
                    "breadcrumbs"
                ],
                "d26c23ae-7864-481a-9fe8-8121ec6a8670": [
                    "breadcrumbs"
                ],
                "dc74e5d7-5fed-432c-b129-dcfa3e2c818b": [
                    "breadcrumbs"
                ],
                "f7c38fcd-e815-4f16-90ee-13932336265d": [
                    "timeline",
                    "eventdate"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "352f83ba-55bd-4a45-becc-e302667ab865",
            "type": {
                "namespace": "justice",
                "name": "case"
            },
            "title": "Case/Hearing",
            "description": "A court case or hearing.",
            "schemas": [],
            "key": [
                "cec17b62-2821-4701-ab0b-1bae728d52de"
            ],
            "properties": [
                "0034d3e1-7ba5-4535-ba6b-3c832ddb73f5",
                "07753fee-5406-4409-8a7c-128a1c58c17f",
                "24c003bb-34cf-4fa8-899a-4bc8ec523296",
                "32003564-c9d7-482e-ae52-c3291d529a07",
                "3a765400-e994-48d4-9622-f438b4be38bd",
                "4fc03a33-2505-484e-9905-c002b249d3e1",
                "4fd36933-02e0-4aaa-b291-959336b154cd",
                "c9c26fde-b5de-4c65-9456-4553532b0f39",
                "cec17b62-2821-4701-ab0b-1bae728d52de",
                "f3b0f612-4434-4ef6-9ff2-2bf028bf4afd",
                "c16ab352-3099-4579-b900-40d54fec44c6",
                "5c5c69bc-1fee-4303-8fe7-086cd9a070ab",
                "29e89dab-2d08-4d19-922f-18b611cd12f1",
                "d24888b1-cbbc-4557-b928-20c16ad744cf",
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "c2e44ccc-1a2a-4cdb-944a-ba063e98714f",
                "2264eea3-9fb3-450a-83b7-481975917fd8",
                "bdc1f760-1f87-45e4-a49e-c5a2dd0cdabf"
            ],
            "propertyTags": {
                "4fd36933-02e0-4aaa-b291-959336b154cd": [
                    "pie",
                    "breadcrumbs"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "5386b226-1544-455f-b330-1107399b1ed2",
            "type": {
                "namespace": "justice",
                "name": "charge"
            },
            "title": "Charge (-d)",
            "description": "A charge",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "24c003bb-34cf-4fa8-899a-4bc8ec523296"
            ],
            "properties": [
                "0597ec2a-9809-4f7a-b338-011a0a0d220f",
                "213fb0dc-0ea2-4f7d-95dc-e0e937482eef",
                "24c003bb-34cf-4fa8-899a-4bc8ec523296",
                "32003564-c9d7-482e-ae52-c3291d529a07",
                "42534a26-578b-4958-a7a8-3475e1597623",
                "4cd0ab91-5ecf-4a9a-a295-742db7be6163",
                "9a54d4e0-11a0-4edd-b5b1-25236de4f7e1",
                "c5d24216-6a34-4da2-a872-240006c1d398",
                "d76e670b-6342-409f-9235-d22e5abb158c",
                "8d86916c-af7e-46bd-9890-061643b6ea6f",
                "a4ab4782-87be-4387-8e77-096e51cd3269",
                "43c61444-69a4-46e7-a334-fe823914e779",
                "5ba4ac95-8532-4c2c-8747-71268f7c5898",
                "11ba7bf9-200e-4b04-b1e7-80b54359143f",
                "2850d352-48af-47d4-8cd1-bde20f134ecc",
                "d5f5843c-7102-4b28-9e65-cfe277f34de1",
                "c16ab352-3099-4579-b900-40d54fec44c6",
                "1956bf5b-a597-4ba4-bcef-5b286ac83339"
            ],
            "propertyTags": {
                "4cd0ab91-5ecf-4a9a-a295-742db7be6163": [
                    "pie"
                ],
                "5ba4ac95-8532-4c2c-8747-71268f7c5898": [
                    "pie"
                ],
                "8d86916c-af7e-46bd-9890-061643b6ea6f": [
                    "breadcrumbs"
                ],
                "a4ab4782-87be-4387-8e77-096e51cd3269": [
                    "breadcrumbs"
                ],
                "d5f5843c-7102-4b28-9e65-cfe277f34de1": [
                    "timeline",
                    "eventdate"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "464c494d-e90b-4518-9733-d713f950fa6f",
            "type": {
                "namespace": "justice",
                "name": "dmf"
            },
            "title": "DMF",
            "description": "A decision making framework result",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "c5a91ff2-31b4-4d87-b0f6-e16d5bd321e2",
                "92ecb196-23f1-4ab4-a8c3-084ccbcc151a",
                "8043ac35-1976-4c8e-a196-9a9dd739523e",
                "180c4d7f-8e08-441b-a03e-dba008a12ad8",
                "24f3cbc3-78bf-4fc9-9bfd-9b6a49cc8355",
                "8d82115a-e33f-4fda-b0cf-35d82145bb3d",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "d98f8cf4-4459-4923-b85e-ff35c62b4e9f",
                "9a32aedd-6d65-4bde-b919-d6eb073a4273"
            ],
            "propertyTags": {
                "92ecb196-23f1-4ab4-a8c3-084ccbcc151a": [
                    "breadcrumbs"
                ],
                "c5a91ff2-31b4-4d87-b0f6-e16d5bd321e2": [
                    "pie"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "a150f42d-801d-4d5d-bec1-50f46fa58a58",
            "type": {
                "namespace": "justice",
                "name": "fta"
            },
            "title": "Failure To Appear",
            "description": "A failure to appear for a court date.",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "propertyTags": {
                "5ef69814-cd40-4209-ba7a-04f966c2fd00": [
                    "breadcrumbs",
                    "timeline"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "395da81a-0bf5-473d-92b3-11f47fdd5d9f",
            "type": {
                "namespace": "justice",
                "name": "psa"
            },
            "title": "Public Safety Assessment",
            "description": "A set of public safety assessment scores, calculating likelihood of outcomes based on a set of risk factors.",
            "schemas": [],
            "key": [
                "3e99c4c2-e62a-4a4d-a5df-e0ca3fed4f8a",
                "5c939b22-0ed8-46ba-9ec9-2a279a9cd2cf",
                "88c0edf6-9be6-4d7d-a43a-1667dea09cb8"
            ],
            "properties": [
                "3e99c4c2-e62a-4a4d-a5df-e0ca3fed4f8a",
                "5c939b22-0ed8-46ba-9ec9-2a279a9cd2cf",
                "88c0edf6-9be6-4d7d-a43a-1667dea09cb8",
                "a962a8ba-2c4c-4110-92b5-dc37c0d02e22",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "14908e47-923a-4c87-8d94-5881bf871cc1",
                "ec5656b3-c10a-481a-9dfb-989622b5d343",
                "fc2a3d34-cc9a-45b8-8b44-03932fef0904",
                "5ef69814-cd40-4209-ba7a-04f966c2fd00"
            ],
            "propertyTags": {
                "14908e47-923a-4c87-8d94-5881bf871cc1": [
                    "pie"
                ],
                "3e99c4c2-e62a-4a4d-a5df-e0ca3fed4f8a": [
                    "pie",
                    "breadcrumbs"
                ],
                "5c939b22-0ed8-46ba-9ec9-2a279a9cd2cf": [
                    "pie",
                    "breadcrumbs"
                ],
                "88c0edf6-9be6-4d7d-a43a-1667dea09cb8": [
                    "pie",
                    "breadcrumbs"
                ],
                "ec5656b3-c10a-481a-9dfb-989622b5d343": [
                    "pie"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "26e338e2-670f-4770-a1de-d6038a53957a",
            "type": {
                "namespace": "justice",
                "name": "psaRiskFactors"
            },
            "title": "PSA Risk Factors",
            "description": "Risk factors determined in a public safety assessment",
            "schemas": [],
            "key": [
                "3b6027be-0cb7-442e-bed4-7ace9ec01fb1",
                "412b3e91-545b-4024-b8a2-bc7b83d186bf",
                "54fbebb4-34a7-4a4a-97ed-88f74b837937",
                "5d481160-d94b-4687-8f39-c0a37d728246",
                "61129561-f69c-4f32-893c-0fb13fe751c1",
                "82ed0dda-c526-4dae-ad24-ac7178b78433",
                "8be364b8-a5ac-49c3-b5dc-4bb7f0a1fa34",
                "8c0bcd74-18d8-430a-b346-7dfb5678b650",
                "ab287218-7888-4b6b-9a92-5f83c9fc4b83",
                "ca0d3289-43df-445d-8cf1-d7f7b6740a3b",
                "f76aa3b0-79d6-41cf-bfca-ff4509c4af29"
            ],
            "properties": [
                "3b6027be-0cb7-442e-bed4-7ace9ec01fb1",
                "412b3e91-545b-4024-b8a2-bc7b83d186bf",
                "54fbebb4-34a7-4a4a-97ed-88f74b837937",
                "5d481160-d94b-4687-8f39-c0a37d728246",
                "61129561-f69c-4f32-893c-0fb13fe751c1",
                "82ed0dda-c526-4dae-ad24-ac7178b78433",
                "8be364b8-a5ac-49c3-b5dc-4bb7f0a1fa34",
                "8c0bcd74-18d8-430a-b346-7dfb5678b650",
                "ab287218-7888-4b6b-9a92-5f83c9fc4b83",
                "ca0d3289-43df-445d-8cf1-d7f7b6740a3b",
                "f76aa3b0-79d6-41cf-bfca-ff4509c4af29",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "638413c5-d5d0-4af1-b738-8e35c81dcb28",
                "93aef850-f00b-41a4-94e2-38ba702c408e",
                "7cb99539-075d-41d0-9d40-32cd3eb36745",
                "e6ccd88c-559d-414c-88dd-2c4d5e04003b",
                "faa8a459-84e2-4ba2-af69-465660913d01",
                "d722e1d9-9497-4d0c-9c61-0bb0b5881e3b",
                "b2cd48b5-84d4-4364-96d9-b147e60a7a17",
                "a806bc75-00e4-4a66-8b21-534e4d3015b8",
                "7cdfb829-b3ef-4000-9371-b32cd6af3e90",
                "b05983fa-a6bb-4ac0-8aaf-f03d0771757c"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "cbc78bf2-e2e7-4aee-984c-9acdcbd967f6",
            "type": {
                "namespace": "justice",
                "name": "psaoutcome"
            },
            "title": "PSA Outcome for Hearing",
            "description": "Did the judge accept, increase, or decrease the PSA recommendation ",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "92ecb196-23f1-4ab4-a8c3-084ccbcc151a",
                "d98f8cf4-4459-4923-b85e-ff35c62b4e9f",
                "9a32aedd-6d65-4bde-b919-d6eb073a4273",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "d4bf1bd6-92f2-4a7f-baff-d0182fd14d39",
                "8005b1f5-0288-4e5a-a516-47467e54500d"
            ],
            "propertyTags": {
                "d4bf1bd6-92f2-4a7f-baff-d0182fd14d39": [
                    "pie"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "043a8413-7066-41d2-acc1-14b24e5caf0d",
            "type": {
                "namespace": "justice",
                "name": "releasecondition"
            },
            "title": "Release Condition",
            "description": "A condition of release from jail",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "e8f2b636-730c-44e1-b2ee-51e700397a16",
                "c8460593-7a12-450a-80ad-bc8e97018a0d",
                "d5dd02a7-d4c4-497a-8301-f95430defa52",
                "71075611-5217-409a-be98-e9e3ef21f44d",
                "9a32aedd-6d65-4bde-b919-d6eb073a4273",
                "70d2ff1c-2450-4a47-a954-a7641b7399ae",
                "fa00bfdb-98ec-487a-b62f-f6614e4c921b",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "b3fbdeaa-b5c9-49fc-944c-67915a148905",
            "type": {
                "namespace": "lawenforcement",
                "name": "arrest"
            },
            "title": "Arrest (-d)",
            "description": "An arrest",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "3b5c462d-af10-498f-bd12-5a9913754f29"
            ],
            "properties": [
                "01bbd1ee-edf1-4379-be0c-430eb9e84075",
                "25431c60-6c26-4210-a422-569c5226ba7e",
                "27b1570f-937c-4961-b429-3b21f06e120b",
                "2c030baf-6624-413a-b971-5dc8f6329108",
                "2f8339d6-453b-4a22-a4ec-657d3d7e0b83",
                "3b5c462d-af10-498f-bd12-5a9913754f29",
                "43c61444-69a4-46e7-a334-fe823914e779",
                "4cd0ab91-5ecf-4a9a-a295-742db7be6163",
                "6f7c3c65-0717-4c39-8a40-4152a94f1278",
                "80c3ffc7-5a8a-4547-8d60-dfb0b06e92b4",
                "90cde7b1-8126-43b5-8458-beed5c432661",
                "98b437c3-1e1f-4f51-91b0-837c084f61d8",
                "9a54d4e0-11a0-4edd-b5b1-25236de4f7e1",
                "a4a4223f-f400-45ce-a093-9b6672ba4dc0",
                "c5d24216-6a34-4da2-a872-240006c1d398",
                "cec17b62-2821-4701-ab0b-1bae728d52de",
                "d673e32c-6e67-4885-8e30-47e98f6229f2",
                "f7c87cb1-7ddd-4dec-b634-bef6f184a557"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "df6071bd-a585-47bb-8536-2a6fd5cb7adf",
            "type": {
                "namespace": "medical",
                "name": "History"
            },
            "title": "Medical History",
            "description": "Medical History",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "ef65c640-9aed-4faf-8c7e-5db1866efaca"
            ],
            "properties": [
                "0fb81e8a-9aa7-4a6f-ba35-048167f8597b",
                "200e0bbb-bf70-459d-8fa8-516d73383703",
                "2d975f4a-a244-4651-909c-3f4eb7ec27cc",
                "49b25d0a-e874-4308-9013-db5d178638da",
                "4e46fdd8-27ce-4f7e-bc0f-ddf77700904c",
                "5dc1af1e-31d6-4668-9f0d-d350c31a3229",
                "631c1f02-3991-4644-a9d5-28aa16103ab9",
                "adf443f7-eae6-4276-8f4b-55cc5b705880",
                "c16ab352-3099-4579-b900-40d54fec44c6",
                "c5ef3188-2d74-476e-8fca-6b19fbd1e84d",
                "d4007838-e900-4b7d-a306-139114b28685",
                "d41f3196-d011-4f79-b211-1e93341874df",
                "d638bea4-ee97-4c24-860d-4addc02f79cb",
                "e0fda4d0-b19b-422c-a702-d30d9e89d024",
                "e391a565-cb3c-4076-abfb-6817ed2ff5b0",
                "ed577cc3-f627-43d8-b17a-39d34480570d",
                "ef65c640-9aed-4faf-8c7e-5db1866efaca",
                "f046b68a-cc58-4e81-a22a-177c3eb2f78f",
                "f2c3c58f-e643-4990-9297-e0f009a67f86",
                "fe48224c-751f-4dfb-afd5-d856c27705a3"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "14acfc18-6d46-4ba2-a09d-3dc38c4c202b",
            "type": {
                "namespace": "medical",
                "name": "Insurance"
            },
            "title": "Insurance (-d)",
            "description": "An insurance",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "3a886c9a-87d7-4d29-816e-72811bf420d9"
            ],
            "properties": [
                "3a886c9a-87d7-4d29-816e-72811bf420d9",
                "70d2ff1c-2450-4a47-a954-a7641b7399ae",
                "0edd1b3b-ad08-4a7a-87ab-5e467c05d74f",
                "272eaa42-a372-4202-8819-4718690503c4",
                "461df09b-14fe-4201-abe7-85c7d298fe46",
                "5892c3a0-4f3d-49dd-80f6-d8de856bb5ce",
                "793dba6e-789c-40c6-afd0-167cf5e73fcf",
                "9f5a37ed-27a2-46e5-aa20-0e58ff7751c7",
                "b2c765df-730e-4811-b2b8-e56cce120b5c",
                "b8ea6a66-2066-4f73-a8db-ae805c59251f",
                "a7ecc119-6f7f-4603-b9ec-68b9141ea114"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "7c3bf67e-888f-472c-9555-119d7d91828e",
            "type": {
                "namespace": "medical",
                "name": "Medication"
            },
            "title": "Medication (-d)",
            "description": "The substance used in the preparation or simply the substance used for medical treatment.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "14395b33-f0b3-4d1c-a415-cbcfb2ce3965"
            ],
            "properties": [
                "14395b33-f0b3-4d1c-a415-cbcfb2ce3965",
                "18d5e463-4421-45cc-b499-2603596b079e",
                "419348da-1353-47e6-921a-e5f92a71b18d",
                "6b947ce1-fc08-4534-8189-1034f39ec2ac",
                "70d2ff1c-2450-4a47-a954-a7641b7399ae",
                "adf443f7-eae6-4276-8f4b-55cc5b705880",
                "c16ab352-3099-4579-b900-40d54fec44c6",
                "dce69615-be50-48c2-8540-f2437784b872",
                "a7ecc119-6f7f-4603-b9ec-68b9141ea114"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "6defb169-7056-486f-abd1-e528a720ab8c",
            "type": {
                "namespace": "medical",
                "name": "TreatmentOrder"
            },
            "title": "Treatment Order",
            "description": "Treatment Order",
            "schemas": [],
            "key": [
                "5c96b76d-1a75-4d74-958b-3feccb75b17a"
            ],
            "properties": [
                "5c96b76d-1a75-4d74-958b-3feccb75b17a",
                "4c0f5721-64be-4c3c-856e-d6c86d55ba89",
                "c1b45114-dc5d-4989-877b-875e580cd25e",
                "c16ab352-3099-4579-b900-40d54fec44c6",
                "adf443f7-eae6-4276-8f4b-55cc5b705880"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "08f9f560-98b9-4804-a7b8-f286f4b144fb",
            "type": {
                "namespace": "medical",
                "name": "gastrointestinalassessment"
            },
            "title": "Gastrointestinal Assessment",
            "description": "Gastrointestinal Assessment",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "3149240c-7b95-4bbb-81ae-53b8c741cc2a"
            ],
            "properties": [
                "16d201e5-f74a-4102-b1f7-5e536a327a25",
                "1e9937aa-be99-4c97-9d8f-286c4e7bae9b",
                "29d50517-8c66-4e0b-bd45-86d9309defb5",
                "2c82974e-1ea1-443e-af28-b879b0d138c9",
                "3149240c-7b95-4bbb-81ae-53b8c741cc2a",
                "733061ae-ea7a-4939-b423-03cfc7162c09",
                "858bf5b6-f771-4672-aaf5-8e4992350d1c",
                "9aed27a9-c179-4dc3-b94a-b949979baa78",
                "ad4b2034-16f9-4394-89f7-5614f33e920c",
                "c16ab352-3099-4579-b900-40d54fec44c6",
                "c5190846-21c0-4819-8bcb-99be5674bcd9",
                "f046b68a-cc58-4e81-a22a-177c3eb2f78f",
                "a4952023-21ba-4670-bdcd-514b3d3c82fe",
                "c1eb6087-a4ec-441d-8c57-b1ac4fb2aebb",
                "f6ad21f8-f7ad-43c9-a001-83fc7a616e9d",
                "fed877c8-eb2a-4714-92c8-3b586bd2c4e7",
                "7c101eeb-3fd3-448b-b606-16e2da4f6d18",
                "93cfb4a2-3911-4a64-8488-d07a0266e48f",
                "66ff6445-bf61-44e9-a661-32810e4a8025",
                "1df87330-510d-421d-9731-b8412e68632c"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "7229eb9e-f1bd-4bc9-b0aa-8de827ca968a",
            "type": {
                "namespace": "medical",
                "name": "respiratoryassessment"
            },
            "title": "Respiratory Assessment",
            "description": "Respiratory Assessment",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "59666069-adae-4974-b328-c96340c4af75"
            ],
            "properties": [
                "59666069-adae-4974-b328-c96340c4af75",
                "1c8ab6f0-e77b-42da-8140-becc02e6fd19",
                "2d975f4a-a244-4651-909c-3f4eb7ec27cc",
                "471a09ff-645d-4d44-841e-ae35c3884cb7",
                "4b1e5b1a-f4ea-4644-8317-1f5e7f47220d",
                "502b0172-e6bf-42f1-a03f-ea9045909360",
                "631c1f02-3991-4644-a9d5-28aa16103ab9",
                "6c1e2180-ac87-4f9f-ac40-2dd741aa5f93",
                "e0fda4d0-b19b-422c-a702-d30d9e89d024",
                "169fff94-d733-4b50-8096-61ea13d80be4",
                "8e4b71ea-30b3-4123-a63b-59ce3c94e9d7",
                "f580437c-f2c9-4ea1-99ee-3ef099bc0a4b",
                "c16ab352-3099-4579-b900-40d54fec44c6"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "dbd01c6f-42bb-46b1-9401-ac92c0592498",
            "type": {
                "namespace": "medical",
                "name": "withdrawalassessment"
            },
            "title": "Withdrawal Assessment",
            "description": "Evaluation of the effects of substance use withdrawal. ",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "937cad34-5c38-44bd-9a12-e5237fd57a21"
            ],
            "properties": [
                "937cad34-5c38-44bd-9a12-e5237fd57a21",
                "6dd08404-92fc-485f-af92-806c83bffece",
                "71ec1401-4765-4048-98c8-97b4b4a1703e",
                "3a109ac6-daa2-4a37-adbc-abb6a6c021f9",
                "1f66b596-91d9-4477-929f-60fd5dbe1fdc",
                "afda612c-a914-4efc-bdb8-7511fdc18b8e",
                "78aa14bd-2816-4829-bfda-32cf970ab760",
                "c0c9af36-5d4a-4e5c-a28f-a699c02f99e4"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "61ef53bf-da92-4629-8240-a6c133857323",
            "type": {
                "namespace": "o",
                "name": "allergy"
            },
            "title": "Allergy / Intolerance / Sensitivity",
            "description": "A record of a clinical assessment of an allergy or intolerance; a propensity, or a potential risk to an individual, to have an adverse reaction on future exposure to the specified substance, or class of substance.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "3276057e-2230-4f3e-abf7-9a80d7be52b8",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "aa2bb9ea-8f1c-4a44-92bd-0358c9d3a4e1",
                "b836ff20-b9b2-4b1d-a1a0-63ae293d8067",
                "39e13db7-a730-421a-a600-ae0674060140",
                "9f73b214-a7de-44c9-95c2-0cf35808cf8d",
                "0397b67c-870b-483a-84b9-d683de54ea3a",
                "1c3b3c2d-583b-40ab-b71b-6691bd93277b"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "06ede450-db5a-461c-956c-f354ce09ad22",
            "type": {
                "namespace": "o",
                "name": "device"
            },
            "title": "Device (MAQs)",
            "description": "Household devices (MAQs)",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "39e13db7-a730-421a-a600-ae0674060140",
                "80be96e6-58e5-4015-a851-312c9c2327bd"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "34789bed-597c-47bd-953a-4ec859b455bb",
            "type": {
                "namespace": "o",
                "name": "facility"
            },
            "title": "Facility or service delivery setting",
            "description": "A facility, including a jail, hospital, clinic, etc.; can also be used to describe another service setting in which a health care encounter occurs.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "2956a11f-b787-4fe9-b396-4f00b1bfecd8",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "09ebda14-780d-489d-89e2-640f1b67c85c",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "91289250-d7aa-4cef-8069-02f0956a1ffa",
                "a7ecc119-6f7f-4603-b9ec-68b9141ea114",
                "25431c60-6c26-4210-a422-569c5226ba7e",
                "b66f28db-765e-426f-95bd-876a25b6bea4"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "1a017c43-8f63-40c3-bdba-064c7d2e5ab4",
            "type": {
                "namespace": "o",
                "name": "study"
            },
            "title": "Research Study",
            "description": "Information on a research study",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "70d2ff1c-2450-4a47-a954-a7641b7399ae",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "0011bbfe-d5d4-4f88-97a8-cdeb821deb6f",
                "2543aa27-0f71-4346-bf62-9049a49ea014",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "c2147279-64c8-412d-b8c5-056744785122"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "6651cc89-9a49-4c5a-9587-0b973321863e",
            "type": {
                "namespace": "ol",
                "name": "abdominalpain"
            },
            "title": "Abdominal Pain",
            "description": "",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "ed3de637-df5d-47cf-bb91-9a8ee346a6ab",
                "28d5e08f-0d92-4c25-9f78-191d0632a11d",
                "174abcbc-b2eb-4de3-b001-0e70054b807f",
                "ab5f6d19-e395-4379-984d-25ee7850a6b1",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "7bf92b81-73fb-4de3-be43-f43e08ea569b",
            "type": {
                "namespace": "ol",
                "name": "abusedetails"
            },
            "title": "Abuse details",
            "description": "Further details around an allegation of abuse, neglect, or exploitation.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "906d1747-f118-48ef-839b-d1a53f64f2ca",
                "ccc4b8c4-7a48-4a8b-8599-e094bf11c755",
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "022ed2d2-f056-4076-9b56-624ea0297dfe",
                "2ef5eab0-95d8-4cce-9c79-b7665fc54dac",
                "ef2ae2ee-67b7-412e-a633-e1ff5de51ca0",
                "f2cb1874-3868-4917-94ce-5263b0357d8e",
                "24cfe583-7823-4382-bf87-19a742b23034",
                "30ed2183-c972-4035-a3c7-11896e1adf71",
                "2a110ce7-1146-4be4-a64a-cbeeba4a89a8",
                "39e13db7-a730-421a-a600-ae0674060140",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "fee00dc4-6e57-421a-8414-18c956ee192f",
                "44d1f72b-9246-4d22-b5a7-d72ce0cf6db7"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "e1b6991c-7d96-45c5-a0a1-bb669944006e",
            "type": {
                "namespace": "ol",
                "name": "acok"
            },
            "title": "AC-OK Screening",
            "description": "AC-OK Screening Tool",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "a3cc030f-bb53-4e77-b67f-430ca201bf85",
                "7468e117-4d40-47b9-8760-4d54f5f03f34",
                "39e13db7-a730-421a-a600-ae0674060140",
                "35fb8e9f-3e62-4f1e-93a8-98f7d97061e5",
                "c0dcbd19-09c3-4e44-b874-aeddb2aeb613",
                "469e2316-e850-4636-a4b4-01d7bcd69655",
                "90b70c3c-6acc-4c7e-949a-8ddea1909236",
                "6bfdf8dc-6404-4537-9b51-26ab0b3a455e",
                "a0656a8e-8364-435b-a6e8-a91551092462",
                "883dc719-2767-477b-9f81-6697b0dd08f5",
                "6675a7e8-2159-41b1-9431-4053690fa3c9",
                "8853b245-2845-413d-baf1-d9cc7491effd",
                "c732d9e3-3bc2-4f1d-bd08-1073d85f26be",
                "77f4bb35-30a9-4001-bfaa-cb081be40892",
                "4f932869-0d81-4455-8de5-ce642a25c0f9",
                "bba073c7-d4d0-4599-b958-09bf8a35e2a0",
                "6a4cc0a9-de70-405b-9167-817d5a9201a0",
                "4374fb0e-5aab-4fc4-ac27-3d08f55a360f"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "d36848f0-ed6c-4c7a-9292-3bffe112bac3",
            "type": {
                "namespace": "ol",
                "name": "activitydefinition"
            },
            "title": "Activity Definition",
            "description": "https://www.hl7.org/fhir/activitydefinition.html ",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "39e13db7-a730-421a-a600-ae0674060140",
                "5c58f7b1-83ec-4ddc-b501-25eb3b25c7f6",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "ccc4b8c4-7a48-4a8b-8599-e094bf11c755",
                "6cc6abfd-c9c6-4ba1-84b1-9719cd25d40c"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "c6088c26-29f0-4f7d-9491-dce34c4b9112",
            "type": {
                "namespace": "ol",
                "name": "admission"
            },
            "title": "Admission details / detailed admission summary information",
            "description": "",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "14908e47-923a-4c87-8d94-5881bf871cc1",
                "f30b6660-800b-4ea4-bbaa-8e93871a2b27",
                "3728048d-b28f-4089-b441-569935339965",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "63e667f0-ae41-4afc-8ef5-01e17f2bf22f",
                "f19f44e1-79bd-4a9e-84aa-f8d65a99c909",
                "7adaf9de-8a4f-4f95-a8b4-9658d53a5173",
                "04b94629-ea29-4c0d-9317-d985f21e30f4",
                "08022a2a-9d50-461d-92b7-dc84b81106c4"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "603e0f61-d621-44dc-bd6a-b1ccc3b8c275",
            "type": {
                "namespace": "ol",
                "name": "adversereactionrisk"
            },
            "title": "Adverse Reaction Risk - Allergies, Sensitivities, etc.",
            "description": "Risk of harmful or undesirable physiological response which is unique to an individual and associated with exposure to a substance.  Use to record a clinical assessment of a propensity for an adverse reaction upon future exposure to the specified substance, or class of substance.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "b836ff20-b9b2-4b1d-a1a0-63ae293d8067",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "39e13db7-a730-421a-a600-ae0674060140",
                "83ec25f5-0389-4215-87a5-ba84d137b9d4",
                "aa2bb9ea-8f1c-4a44-92bd-0358c9d3a4e1"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "e33ad963-60fd-489d-8cdb-9faca522e18a",
            "type": {
                "namespace": "ol",
                "name": "agency"
            },
            "title": "An agency",
            "description": "",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "39e13db7-a730-421a-a600-ae0674060140",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "f9010dd8-ce62-4d2f-a6a7-e4cf32ec6940",
                "7acb8cda-34bc-4fbc-b320-7481debfa294",
                "84b850d8-4fb8-4507-b0f6-0b0466d39c0a",
                "80be96e6-58e5-4015-a851-312c9c2327bd"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "35e31985-ff01-4618-bc7c-b0161af62b91",
            "type": {
                "namespace": "ol",
                "name": "agerange"
            },
            "title": "Age range",
            "description": "The age range of a person.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "0abf30c6-4da9-4ffa-9dbf-02ca1b2e0bb6",
                "4167e9dd-ae6f-49d6-a9ea-c38bddeb8901",
                "fee00dc4-6e57-421a-8414-18c956ee192f",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "0446f356-6cba-4180-9b43-472daafb712c",
            "type": {
                "namespace": "ol",
                "name": "allegation"
            },
            "title": "Allegation",
            "description": "An allegation is describing an incident where child abuse, neglect and/or exploitation is reported.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "39e13db7-a730-421a-a600-ae0674060140",
                "2264eea3-9fb3-450a-83b7-481975917fd8",
                "29e89dab-2d08-4d19-922f-18b611cd12f1"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "5a50c786-050c-4ba6-a6e1-8c6f167424dc",
            "type": {
                "namespace": "ol",
                "name": "allergy"
            },
            "title": "Allergy (-d)",
            "description": "use o.allergy",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "ed3de637-df5d-47cf-bb91-9a8ee346a6ab",
                "28d5e08f-0d92-4c25-9f78-191d0632a11d",
                "174abcbc-b2eb-4de3-b001-0e70054b807f",
                "ab5f6d19-e395-4379-984d-25ee7850a6b1",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "0397b67c-870b-483a-84b9-d683de54ea3a",
                "e58e3c0c-d8e7-4650-9146-e6e67ce472d6",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "7ec77a05-c779-407c-9c6d-8890860fcbcf"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "03aac23e-56d5-4960-b739-fae7fa301a6e",
            "type": {
                "namespace": "ol",
                "name": "appearsin"
            },
            "title": "Appears in",
            "description": "",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "f7af5fb1-92de-495d-ac01-d3ab82081eb8",
                "c5909ed6-5c9d-4016-b5ae-eba0008f4b2e",
                "ee3a7573-aa70-4afb-814d-3fad27cda988",
                "1a99a9f7-c9fa-4cc9-9e29-1370c440f392",
                "07488a0f-0096-4d4b-bdb2-fb50b3a03997",
                "4e4d35e2-8dad-4af7-83f8-c28f983bffe2",
                "58b549ca-62af-4e09-8624-4989f776d4d2"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "5f7c0b2b-614d-4d5d-929f-9efca07ba8d1",
            "type": {
                "namespace": "ol",
                "name": "application"
            },
            "title": "Application",
            "description": "Application data collected via a user's device (e.g., phone, tablet, etc.)",
            "schemas": [
                {
                    "namespace": "cafe",
                    "name": "chronicle"
                }
            ],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "7674c064-c8fb-42b0-a1ca-c7cab0e0829d",
                "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "285e6bfc-2a73-49ae-8cb2-b112244ed85d",
                "e90a306c-ee37-4cd1-8a0e-71ad5a180340",
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                "70d2ff1c-2450-4a47-a954-a7641b7399ae",
                "071ba832-035f-4b04-99e4-d11dc4fbe0e8"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "14923c22-ac79-4efb-b298-c54c698b84de",
            "type": {
                "namespace": "ol",
                "name": "applicationdata"
            },
            "title": "Application Data (-d)",
            "description": "Information on applications recently used on device",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "ee3a7573-aa70-4afb-814d-3fad27cda988"
            ],
            "properties": [
                "70d2ff1c-2450-4a47-a954-a7641b7399ae",
                "285e6bfc-2a73-49ae-8cb2-b112244ed85d",
                "ee3a7573-aa70-4afb-814d-3fad27cda988",
                "1624fc2d-d221-48d2-a7b4-ee94f80a515b",
                "06083695-aebe-4a56-9b98-da6013e93a5e",
                "e8f9026a-2494-4749-84bb-1499cb7f215c",
                "e90a306c-ee37-4cd1-8a0e-71ad5a180340",
                "c106ee75-f18e-48ed-bc85-b75702bfe802",
                "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                "00e5c55f-f1ef-4538-8d48-c08d5bcfe4c7",
                "071ba832-035f-4b04-99e4-d11dc4fbe0e8"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "4d9dcc53-1655-4869-8684-879a24bc5a7d",
            "type": {
                "namespace": "ol",
                "name": "appointment"
            },
            "title": "Appointment",
            "description": "",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "f52ecac3-f1ab-46e4-8af8-3b8dcf68fe4d",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "181eed7e-a0bc-4913-a9f4-439f1d52d1bb",
                "14908e47-923a-4c87-8d94-5881bf871cc1",
                "a7ecc119-6f7f-4603-b9ec-68b9141ea114",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "f30b6660-800b-4ea4-bbaa-8e93871a2b27",
                "e8f2b636-730c-44e1-b2ee-51e700397a16",
                "c8460593-7a12-450a-80ad-bc8e97018a0d"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "bc0f0785-6af4-4a16-ab01-ef125d8fa183",
            "type": {
                "namespace": "ol",
                "name": "appsettings"
            },
            "title": "App Settings",
            "description": "Custom settings defined for any instance of an app",
            "schemas": [],
            "key": [
                "6f1cf64a-0bac-47d3-a74d-289b6df50a1b"
            ],
            "properties": [
                "6f1cf64a-0bac-47d3-a74d-289b6df50a1b"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "9643c919-48cb-478e-9577-d7b36a2e3766",
            "type": {
                "namespace": "ol",
                "name": "areamedianincome"
            },
            "title": "Area Median Income (AMI)",
            "description": "The area median income (AMI), commonly calculated for a household or individual and used in eligibility for affordable housing programs.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "f9ac41fb-897e-4d0f-ac71-dac7eddc56fa",
                "0abf30c6-4da9-4ffa-9dbf-02ca1b2e0bb6",
                "4167e9dd-ae6f-49d6-a9ea-c38bddeb8901",
                "fee00dc4-6e57-421a-8414-18c956ee192f",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "a8933914-d849-4b90-ab0f-eaa1525c4ec8",
            "type": {
                "namespace": "ol",
                "name": "arrest"
            },
            "title": "Arrest",
            "description": "An arrest.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "88f6294a-8b73-45e3-a0ec-8ebfb75a930e",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "8388b7cc-19eb-411f-9af1-57999eeb27e0",
                "80c3ffc7-5a8a-4547-8d60-dfb0b06e92b4",
                "39e13db7-a730-421a-a600-ae0674060140",
                "fc486634-adbf-4108-aa0b-65225cad5618",
                "b94361f0-7172-4556-a4f3-99a183bff03c",
                "4cd3b524-8c33-4efe-8bbc-09738a06facf",
                "28bf3e65-3497-4fe3-a080-b758caf65053",
                "b9170d9b-8265-452c-b9e8-ebeab5f7556f",
                "cf89d88b-138f-4533-94e8-880a6674541b",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7"
            ],
            "propertyTags": {
                "88f6294a-8b73-45e3-a0ec-8ebfb75a930e": [
                    "timeline",
                    "eventdate"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "a6c0d26c-bb72-4c11-b4b0-f2c5331eca5e",
            "type": {
                "namespace": "ol",
                "name": "asam"
            },
            "title": "ASAM Assessment",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "30317774-a6e8-4971-865a-430e551f59d6",
            "type": {
                "namespace": "ol",
                "name": "assessmentscore"
            },
            "title": "Numeric Assessment Score or Scale",
            "description": "Numeric assessment scores or scales",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "8e65eca6-a3d1-4c05-885f-cc3156257139",
                "418f4003-99ca-4c0c-a32b-ac9145be7209",
                "01a38115-3bb7-49a1-8003-a32ae02ad283",
                "79f562d8-efe7-4780-9f8b-3e5bc5fa6733",
                "f2dbdc90-bf80-43d4-b015-196864ac4045"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "50ce2984-8e2c-4c15-82cc-99aac72ee628",
            "type": {
                "namespace": "ol",
                "name": "assignedto"
            },
            "title": "Assigned to",
            "description": "",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "5ef69814-cd40-4209-ba7a-04f966c2fd00"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "dc7f2571-a453-4c52-9d8d-2200e5777889",
            "type": {
                "namespace": "ol",
                "name": "audit"
            },
            "title": "Audit",
            "description": "Entity type for auditing user logs.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "4c235fb9-6ac7-455c-8c60-bcb2012e092b",
                "3df88d48-1fa1-43b4-8c0a-e1ea2434ddc7",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "a47a4c24-9955-4c27-8f69-f9212a1aefef",
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "39e13db7-a730-421a-a600-ae0674060140",
                "427ce7b2-02e9-44ff-b88b-8b2065bbe002",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "c0e38331-3d1b-4adf-8c84-5e2cf940bb3b"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "f55feb4f-1a3c-43f9-9259-1beb33ca61d9",
            "type": {
                "namespace": "ol",
                "name": "authorization"
            },
            "title": "Authorization / Preauthorization (Status)",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "14908e47-923a-4c87-8d94-5881bf871cc1",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "39e13db7-a730-421a-a600-ae0674060140",
                "bf4f1c24-65f5-47c7-88d7-48aec1e4e591",
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                "d750e74f-0829-439c-b6ef-1dfc3692a78f",
                "e092d7b6-6788-46c3-8c0a-f7438745514e",
                "93a23f2b-8528-4173-89d9-cb049bb036ee"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "abcc6784-0d63-4ffb-937e-b7c5edcc9785",
            "type": {
                "namespace": "ol",
                "name": "behavior"
            },
            "title": "Behavioral Characteristics",
            "description": "Descriptions of / characteristics of an individual's appearance and behavior during an encounter or incident",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "c2e01b3e-76a3-46ed-9617-0ab4cea5a883",
                "db9aa49b-38a1-4852-bb90-dd077ac29495",
                "4cd0f372-8bed-417d-8941-e815d22a18f3",
                "e75d3b82-3d82-485d-b203-984c64b5dc5c",
                "32b2d6fb-b291-4d8c-9787-a469a8ff2e6f",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "e40c2fdd-0a40-4069-877d-4c030799943e",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "cfef5c27-4456-4a2b-abf6-119dd4b65fda"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "20127760-00c9-4baa-b8a5-b2b46a78b8ae",
            "type": {
                "namespace": "ol",
                "name": "biopsychosocialassessment"
            },
            "title": "Biopsychosocial Assessment",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "8e65eca6-a3d1-4c05-885f-cc3156257139"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "c8c1ef66-56da-43e1-a1b1-4b0a71d53968",
            "type": {
                "namespace": "ol",
                "name": "bond"
            },
            "title": "Bond / bail",
            "description": "",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "7c2953f9-babd-4ecf-9adf-fc20ff1f9fa9"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "26b30a9c-4ff0-4b44-a26a-19c3195a6b16",
            "type": {
                "namespace": "ol",
                "name": "bondset"
            },
            "title": "Bondset for",
            "description": "(Bond) is set for a (Jailstay).",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "42c87ead-3038-4682-961c-5dd079071786",
            "type": {
                "namespace": "ol",
                "name": "booking"
            },
            "title": "A booking.",
            "description": "A booking (in jail or associated with an arrest).",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "57d24585-7aec-43b7-b0f9-4162321366de",
                "39e13db7-a730-421a-a600-ae0674060140",
                "8ce79ba8-b498-460a-a1b3-325954bb6d4f",
                "f7f01aa6-159a-435f-901b-44e62679bc51",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "24f9de48-5c58-4697-a68c-fe156bfa3c3c",
                "55bd8483-ae7e-466f-88bd-84d67160bd3f",
                "a5753546-902d-4eb0-8914-e014487138e4",
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "b9170d9b-8265-452c-b9e8-ebeab5f7556f"
            ],
            "propertyTags": {
                "5ef69814-cd40-4209-ba7a-04f966c2fd00": [
                    "timeline",
                    "eventdate"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "3128fd92-34b6-450d-be02-b9a24dcee943",
            "type": {
                "namespace": "ol",
                "name": "careactivity"
            },
            "title": "Care Activity",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "d98f8cf4-4459-4923-b85e-ff35c62b4e9f",
                "eece0de7-4ea7-47b2-81a3-1df1eeab8add",
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "39e13db7-a730-421a-a600-ae0674060140",
                "8e65eca6-a3d1-4c05-885f-cc3156257139"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "ed8621cb-08a5-4319-b830-74cbf4d56214",
            "type": {
                "namespace": "ol",
                "name": "caregoal"
            },
            "title": "Goal / Care Plan Goal",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "39e13db7-a730-421a-a600-ae0674060140",
                "2d47ff8b-b723-4e20-8e70-c64cd8bbeb6f",
                "5c58f7b1-83ec-4ddc-b501-25eb3b25c7f6",
                "d5dd02a7-d4c4-497a-8301-f95430defa52",
                "e8f2b636-730c-44e1-b2ee-51e700397a16",
                "90e033f3-c36e-4375-b51b-d4a1a5727fa9",
                "457b03d7-84b9-4028-a7f9-9836d7cd2658",
                "c0760479-aea9-4873-8047-6a063e0952fa",
                "87bc2163-5c93-412e-972f-9ded4eb43437"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "620b6307-b1c2-4a69-8f9c-d889412e569e",
            "type": {
                "namespace": "ol",
                "name": "careplan"
            },
            "title": "Care Plan",
            "description": "The structure through which goals, care-planning actions and processes can be organized, planned, communicated, and checked for completion.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "9edeb131-f6a1-4ba1-b282-2fe3f0f6102c",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "d98f8cf4-4459-4923-b85e-ff35c62b4e9f",
                "eece0de7-4ea7-47b2-81a3-1df1eeab8add",
                "b1e2bcd8-bd3d-42de-beed-d73d6bfaa09f",
                "1619fd58-3da5-478e-9e48-34368c2585b7",
                "bf4f1c24-65f5-47c7-88d7-48aec1e4e591",
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "d038e8f6-5910-46b2-88e4-b028a5120a46",
            "type": {
                "namespace": "ol",
                "name": "charge"
            },
            "title": "A charge",
            "description": "A law enforcement charge.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "6e43eb85-276b-4855-b96c-24f701a58389",
                "f957cc01-1969-46b8-bd76-b8006142779b",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "bc7869bd-f646-4e0c-89ad-ae77cdadb3ef",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "7ed19ef2-a1ed-48e3-b347-18a885914bee",
                "1956bf5b-a597-4ba4-bcef-5b286ac83339",
                "fee00dc4-6e57-421a-8414-18c956ee192f",
                "1e5bc2c5-3320-4ae0-b4eb-38edf65a4942",
                "351e51ad-9f7e-4bd5-a237-84b16e1e1ce8",
                "39e3e0d1-d5c4-4422-a88d-e5e442e8a667",
                "12a03e63-d114-4593-90d1-bb8bdb68e14b",
                "c5e1a98e-bc92-4858-8d0f-2bcb9d59ec70",
                "b8ec37cc-f27e-49d9-acb1-3e058e62f4e2",
                "8404751e-014c-4202-ac10-ba7a9276e874",
                "e41f8c94-5c15-4368-bf1c-08bcd2cccd70",
                "cc9ddead-9e6f-4b3b-88a9-8aab20726045",
                "42534a26-578b-4958-a7a8-3475e1597623",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "c2629909-32d0-4a23-8bab-fcdf639ba19c",
                "cdb38749-8e44-440b-87db-544ac510034c",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "58929d33-1c01-42f1-891c-f3e55c4d4fc4"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "f5942bd5-685c-4a37-be0a-d55a3c952aa4",
            "type": {
                "namespace": "ol",
                "name": "chargedby"
            },
            "title": "charged by",
            "description": "(Person) is charged by (Authority).",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "22f294e5-f3f4-4317-8ff8-63528125c95f",
            "type": {
                "namespace": "ol",
                "name": "chargedwith"
            },
            "title": "Charged With",
            "description": "(Person) is charged with (A charge/offense).",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "aa07cf91-0fe7-4e5d-acdf-9b1f2b81106e",
            "type": {
                "namespace": "ol",
                "name": "chestpain"
            },
            "title": "Chest Pain",
            "description": "",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "ed3de637-df5d-47cf-bb91-9a8ee346a6ab",
                "28d5e08f-0d92-4c25-9f78-191d0632a11d",
                "174abcbc-b2eb-4de3-b001-0e70054b807f",
                "ab5f6d19-e395-4379-984d-25ee7850a6b1",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "96c8b151-f114-4fda-a9eb-4573c6db3b77",
            "type": {
                "namespace": "ol",
                "name": "childcare"
            },
            "title": "Childcare",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "39e13db7-a730-421a-a600-ae0674060140",
                "f105dd1b-1c71-4042-8ea8-53013070d9da",
                "621051c6-09fd-4982-8f96-07833f75aaa8",
                "f29222f7-635c-41d9-9ea0-c90ab182c1f2",
                "b9170d9b-8265-452c-b9e8-ebeab5f7556f",
                "457b03d7-84b9-4028-a7f9-9836d7cd2658",
                "c5a388d7-f9ed-4eb6-8dd6-633a4afcae6a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "153d5ffd-671f-4afb-8f2f-77c5d9adf000",
            "type": {
                "namespace": "ol",
                "name": "childlanguage"
            },
            "title": "Child Language Development",
            "description": "Verbal / Vocabulary / Language Development",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "0e9bef46-4062-4255-a23f-4affe0946a10",
                "22782665-d7a2-4e72-b283-64e42b6a6108",
                "eece0de7-4ea7-47b2-81a3-1df1eeab8add",
                "309318f4-6453-4fb2-b1eb-0d04eded9cb6",
                "0ca15d80-442d-4b10-883b-bad40f534723",
                "e5f917ca-743a-438a-a671-c909c00b4375",
                "5c58f7b1-83ec-4ddc-b501-25eb3b25c7f6",
                "a2bfb6fb-c1ac-4343-9aff-87ad0f910a9e",
                "03b40fe3-7479-46a3-8788-840272c9d136",
                "bc47afad-fb93-4597-8e78-c1528398be86",
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a",
                "366eacb7-b3a9-464b-896e-0729baf97eb6",
                "bd6698da-f2d5-4066-8b42-605b7f6f1144"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "d3e30327-cce8-4907-9317-3f6894cd1fc0",
            "type": {
                "namespace": "ol",
                "name": "citation"
            },
            "title": "A Citation",
            "description": "A Citation",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "589c5599-895c-497c-8864-3488d9ff4402",
            "type": {
                "namespace": "ol",
                "name": "clearedby"
            },
            "title": "Cleared by",
            "description": "",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "4c663098-2d48-46ae-a875-99b98f8df46e",
            "type": {
                "namespace": "ol",
                "name": "clinicalevaluation"
            },
            "title": "Clinical Evaluation - Health-related provider assessment ",
            "description": "Provider assessment of client",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "deae0899-3e12-43e6-bae6-ae562e85b651",
                "1694fe54-4eb7-4a90-9875-d93acd20739c",
                "39e13db7-a730-421a-a600-ae0674060140",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "ed075421-abbf-4dcc-bf67-2277790108b8"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "5d88ee83-3be4-4a04-9650-e7f1c48c3662",
            "type": {
                "namespace": "ol",
                "name": "committedby"
            },
            "title": "Committed by",
            "description": "(Person) is committed by (Authority) to jail.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "3e6d3232-6469-46ee-b437-aa0d0458a88e"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "75f9eef8-d199-401e-8519-549f11cd98de",
            "type": {
                "namespace": "ol",
                "name": "communication"
            },
            "title": "Language, Literacy and Communication",
            "description": "Written and Spoken Language",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "b4755499-5920-4e52-8774-20d70e812504",
                "c929ca9a-f03f-468d-9627-923f8571b177",
                "5bf7f587-c75c-46f1-9935-edb490e8b30e",
                "39e13db7-a730-421a-a600-ae0674060140",
                "3e93de4e-8344-4d08-a9ef-f967d1e0094d",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "8a0449c3-1f27-44ab-8c69-571aced1ccc9",
                "705bfa28-7b10-47d5-931e-9f06aeb5644e",
                "dfe90a24-41ec-4b7d-8051-8bcbc81dc630",
                "a2bfb6fb-c1ac-4343-9aff-87ad0f910a9e"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "6cfd1f84-96a9-42ad-81fe-9345e8eda237",
            "type": {
                "namespace": "ol",
                "name": "confidencemetrics"
            },
            "title": "Confidence Metrics",
            "description": "Confidence Metrics",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "a8c6cfca-88df-485e-8bde-332e5e64ed61",
                "8a16ce2a-85b5-485c-8a86-caf61f970a8e",
                "96473ea4-3ff7-4df8-893a-8a433c6bd38f",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "a0432ae5-799f-4dfc-a72e-adbde3e312b9",
            "type": {
                "namespace": "ol",
                "name": "contactactivity"
            },
            "title": "Contact Activity",
            "description": "A contact with an individual. The contact can be initiated by law enforcement, probation, human services, school, and others.",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "2ff089c6-716d-44d9-8470-bfe9689eeacd",
                "ba77fbf5-9f45-4def-b17f-4ddd2f757129",
                "a7ecc119-6f7f-4603-b9ec-68b9141ea114",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "d98f8cf4-4459-4923-b85e-ff35c62b4e9f",
                "9a32aedd-6d65-4bde-b919-d6eb073a4273",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "553cd731-73de-4377-bad8-ab4ec8b65b58",
            "type": {
                "namespace": "ol",
                "name": "contactedat"
            },
            "title": "Contacted at (-d)",
            "description": "",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                },
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "cf9b4d36-6f1a-4e6f-94f0-6458054fc567",
            "type": {
                "namespace": "ol",
                "name": "contactinfogiven"
            },
            "title": "(Contact information) given to (entity)",
            "description": "",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "2e20c21e-6448-4a2d-bc57-9a5f2c45b589",
            "type": {
                "namespace": "ol",
                "name": "contactinformation"
            },
            "title": "Contact Information",
            "description": "A set of details about how to contact a person or an organization.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "2ff089c6-716d-44d9-8470-bfe9689eeacd",
                "c2147279-64c8-412d-b8c5-056744785122",
                "cebc61bf-9052-4e11-99af-3aa3113688a8",
                "a7ecc119-6f7f-4603-b9ec-68b9141ea114",
                "ee34032c-9082-4535-af42-8d568683324f",
                "1b4b3973-6465-4483-a455-30be30bdc912",
                "13b5c5a1-8335-4798-ba53-fc855b8f00ec",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "39e13db7-a730-421a-a600-ae0674060140",
                "ff7c3f66-1904-481b-b7d7-56d8b331be00",
                "e107ace7-8fad-40d0-9d2e-57cf47cbb839",
                "7d4dbc62-4335-4515-9629-052c904a0ec0",
                "705bfa28-7b10-47d5-931e-9f06aeb5644e",
                "bdc1f760-1f87-45e4-a49e-c5a2dd0cdabf"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "2be26014-a32f-4826-b768-d2b3895ddab2",
            "type": {
                "namespace": "ol",
                "name": "content"
            },
            "title": "Content (e.g., text of a form)",
            "description": "Modifiable text content of a form ",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "d94bc9ae-2017-4979-b297-09264cd1f0eb"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "9f1fb6c3-d4b8-4ae8-bdf5-0e64ae0a2935",
            "type": {
                "namespace": "ol",
                "name": "counselingprogressnotes"
            },
            "title": "Counseling Progress Notes",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "8e65eca6-a3d1-4c05-885f-cc3156257139",
                "7674c064-c8fb-42b0-a1ca-c7cab0e0829d",
                "a2bfb6fb-c1ac-4343-9aff-87ad0f910a9e"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "4deef11f-ab4d-47b5-89c1-b38fdcc0efe2",
            "type": {
                "namespace": "ol",
                "name": "deal"
            },
            "title": "Deal",
            "description": "Details of a deal",
            "schemas": [],
            "key": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe"
            ],
            "properties": [
                "b5875c05-0bd5-4511-92a4-a33513e612d0",
                "e961013c-5206-48ff-81dc-0971e579e4de",
                "29e89dab-2d08-4d19-922f-18b611cd12f1",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "f704fe85-6c21-4370-bdc3-55eb1fc36f57",
            "type": {
                "namespace": "ol",
                "name": "deleriumtremens"
            },
            "title": "Delerium Tremens",
            "description": "Current status of medical condition and history thereof",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "ed3de637-df5d-47cf-bb91-9a8ee346a6ab",
                "28d5e08f-0d92-4c25-9f78-191d0632a11d",
                "174abcbc-b2eb-4de3-b001-0e70054b807f",
                "ab5f6d19-e395-4379-984d-25ee7850a6b1",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "308edc79-512e-408c-a280-7a11477224fe",
            "type": {
                "namespace": "ol",
                "name": "detoxcautions"
            },
            "title": "Detox cautions and concerns",
            "description": "Barriers to treatment, issues, concerns, etc.",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "6dba18ef-e26d-4059-9328-84b0189e1e88",
                "b2e57899-8c93-422e-afd9-4d8e4ac497e2",
                "9ad2b9b7-64ab-4aad-88aa-2b153502ca81",
                "672f4964-a91a-4cdd-adbc-58e24411b349",
                "b22b41c1-be87-4392-8968-e5e8f5f29f68",
                "141a88a9-379c-475e-b612-a22e55d985a2",
                "5233c803-f115-4696-ade9-770cc2b63949",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "cfa5c240-ca36-476f-9603-367ee40dfe6c",
                "c2b1ba7a-86b1-432e-95c5-e7ae156193e1",
                "ed3de637-df5d-47cf-bb91-9a8ee346a6ab",
                "28d5e08f-0d92-4c25-9f78-191d0632a11d",
                "8ec3bc52-0b2a-40a2-8816-2430c6daf627",
                "a7ecc119-6f7f-4603-b9ec-68b9141ea114",
                "db6eb03a-2eb5-4eb2-abee-b97147e9778e",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "a1a0926a-0fad-417c-ba84-c223fce20dc9",
            "type": {
                "namespace": "ol",
                "name": "detoxmotivation"
            },
            "title": "Motivation to Quit, Discontinue Use, Readiness to Change",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a",
                "181eed7e-a0bc-4913-a9f4-439f1d52d1bb",
                "39e13db7-a730-421a-a600-ae0674060140",
                "3f5e9383-96e0-4b64-bdd5-e9f10fbb416f",
                "3d2144ea-dec1-496a-b83d-86597ae934dd",
                "ec863827-74f3-4145-8686-5d6e406a9d16",
                "ee8181ba-a5aa-4683-8f27-2debd75a6b0a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "e7efc244-fc8c-4d75-8326-cf3e8bae5e3e",
            "type": {
                "namespace": "ol",
                "name": "detoxrecovery"
            },
            "title": "Substance Use Treatment, Recovery Environment",
            "description": "Social situation as it relates to recovery, plans to quit and stay sober, aftercare plans.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "e88f9630-eeb4-4866-98bb-925b6c285739",
                "3f0bad2c-69d5-48c9-b066-9f7a3852baea",
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a",
                "28aeef32-a2c1-4c3b-b683-f01616c48e20",
                "beb63b1e-f0c0-467b-9d2c-7a0d7e5eb138",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "bb618179-cfd1-4e70-89f8-82599641722b",
                "c625583f-585a-45a5-9d18-24eb5849cd6a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "58b3a5cd-8806-400e-b91d-5ae314063378",
            "type": {
                "namespace": "ol",
                "name": "device"
            },
            "title": "Device (-d)",
            "description": "",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "ee3a7573-aa70-4afb-814d-3fad27cda988"
            ],
            "properties": [
                "93b8b60b-bcfc-4778-99b8-8c57ce6cb502",
                "0011bbfe-d5d4-4f88-97a8-cdeb821deb6f",
                "ee3a7573-aa70-4afb-814d-3fad27cda988",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "0376458d-b44f-413e-88e2-66c49e61a386",
            "type": {
                "namespace": "ol",
                "name": "deviceuse"
            },
            "title": "Device Use / Media Use (e.g., use of phone)",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "7674c064-c8fb-42b0-a1ca-c7cab0e0829d",
                "dcb47b40-17ac-487f-8a99-0956157d2907",
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "621051c6-09fd-4982-8f96-07833f75aaa8",
                "39e13db7-a730-421a-a600-ae0674060140",
                "a2bfb6fb-c1ac-4343-9aff-87ad0f910a9e",
                "d5dd02a7-d4c4-497a-8301-f95430defa52",
                "07844126-651d-417f-9678-df3f909a7ef7",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "2b6417e4-486b-4411-bd4f-0073ad68668c",
                "f12a9c1e-c81c-46fc-9974-7344fb6046d8",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "0dde9277-25af-4c3d-980c-936ebb112c0d",
                "816e8faa-8740-4fcb-94ab-d0e9e7ae0576",
                "9e57eb53-a729-4cd0-bca4-a2bde8d56093",
                "6a07d836-5613-4917-99af-9ed56eb4f44d"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "9d40e6a5-5e00-47ec-9645-32fcfd276a86",
            "type": {
                "namespace": "ol",
                "name": "diagnosis"
            },
            "title": "Diagnosis / Problem",
            "description": "Problem/condition/diagnosis - Details about a single identified health condition, injury, disability or any other issue which impacts on the physical, mental and/or social well-being of an individual.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "58929d33-1c01-42f1-891c-f3e55c4d4fc4",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "082583c3-08d9-4e6c-b8ac-52f5e74b54f3",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "39e13db7-a730-421a-a600-ae0674060140",
                "14908e47-923a-4c87-8d94-5881bf871cc1",
                "f52ecac3-f1ab-46e4-8af8-3b8dcf68fe4d",
                "1df921c4-9f92-4e6e-8b41-c6687930c00e"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "8f7e554e-a877-44c8-9d79-1b976ac3399f",
            "type": {
                "namespace": "ol",
                "name": "diagnosticstudy"
            },
            "title": "Diagnostic Study",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "1df921c4-9f92-4e6e-8b41-c6687930c00e"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "9242fe71-04c3-4bd5-a906-806e7e3b88f2",
            "type": {
                "namespace": "ol",
                "name": "digitalsignature"
            },
            "title": "Digital Signature",
            "description": "A cryptographic hash uniquely identifying an electronically-signed document. Included among the hashed data is the document content, signature, timestamp, geolocation.",
            "schemas": [],
            "key": [
                "d41be97c-15aa-4c3d-9720-55acb7d11ad6"
            ],
            "properties": [
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "d41be97c-15aa-4c3d-9720-55acb7d11ad6",
                "e9264f06-9f0c-4196-b857-b4f8621f29f4",
                "517d9dbd-d6cc-49d2-afed-21f6e86ff154",
                "4ceb2128-8bff-409e-9ae2-39714c81b252"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "78667385-3430-48d6-8bee-3966a329998a",
            "type": {
                "namespace": "ol",
                "name": "disabilityassessment"
            },
            "title": "Disability Assessment",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "58958407-cb4a-4233-963d-f6a96b09b7a9",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "58929d33-1c01-42f1-891c-f3e55c4d4fc4",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "a91ccfa6-1ac7-49f8-a005-6570d76a2360",
            "type": {
                "namespace": "ol",
                "name": "discharge"
            },
            "title": "Discharge information / details",
            "description": "type: AMA/termination/discharge; locationstatus: walked off, on grounds, etc.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "8e65eca6-a3d1-4c05-885f-cc3156257139",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "39e13db7-a730-421a-a600-ae0674060140",
                "b0370f87-dcc0-4a99-8357-d93ad9dd4c9d",
                "369051b0-1f54-4651-8c8c-4017f3882d0b",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "281141de-e65f-46ec-9f2f-450974ed4d0d",
                "0eb09893-72c8-4f0f-99d8-0b906558a585"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "fb30b015-690d-4310-b9ec-30596cbaf85d",
            "type": {
                "namespace": "ol",
                "name": "dispatch"
            },
            "title": "Dispatch",
            "description": "A dispatch (police, medical,...).",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "e404a3f0-3e98-412f-b146-52aa80ec98c2",
                "736818e8-0ad9-4c83-8b53-3e00005fed2b",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "f52ecac3-f1ab-46e4-8af8-3b8dcf68fe4d",
                "39e13db7-a730-421a-a600-ae0674060140",
                "0b68c2cd-4c03-43e6-b1c8-fe6187b0eae3",
                "c97555a0-ed79-4944-a000-ab961da3ab48",
                "6675a7e8-2159-41b1-9431-4053690fa3c9",
                "9f3bc9a7-cb01-4cb5-9d62-628912e7e637",
                "b9170d9b-8265-452c-b9e8-ebeab5f7556f",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "7674c064-c8fb-42b0-a1ca-c7cab0e0829d",
                "6e43eb85-276b-4855-b96c-24f701a58389",
                "7ac3c170-7088-4765-bd23-6ec1d02f2d5f",
                "1256d3f4-2a83-44d0-8b1d-389803b28314",
                "4d5db4fe-a0c8-45f8-af6d-cd7cd4cab86c",
                "7064b696-d3ac-4ca7-9340-8e9db996b36e",
                "13c7f654-085d-4cd0-9db2-674df9c69dda",
                "0f10a3f1-a020-4367-a261-750d979abfca",
                "e5721ba0-f64e-4c19-8e7f-fbb016555a65",
                "86b4bbbf-6006-4863-9f6b-7b1b2f707837",
                "07c288b6-3425-4d83-bf38-60989de8f5e3",
                "5b7a2aba-9d5a-4026-8a9a-319f00a8e4ac",
                "b6dec135-54d1-493e-9202-8d72070ddce8",
                "8c3baea2-1ab0-4eaf-be35-12d0ff7313da",
                "fcb28385-93c7-48d8-86b6-f622ee670f1d",
                "035c5134-52ba-4682-8391-60939c9b79ef",
                "4101ac47-9d56-4910-aace-a99f058324a0",
                "cc5dcf55-98e9-452f-955b-4139b165b772",
                "12e40b86-c848-4f9e-bb5a-e9632835565b",
                "300079e6-aaca-499d-8116-ae6812aaac44",
                "d466fca6-1677-409b-98bd-01d96c519368",
                "200a4b05-655f-419a-ba00-648747cb4b11",
                "80be96e6-58e5-4015-a851-312c9c2327bd"
            ],
            "propertyTags": {
                "9f3bc9a7-cb01-4cb5-9d62-628912e7e637": [
                    "timeline",
                    "eventdate"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "9314b075-ac0f-4659-9fed-9be21931ada1",
            "type": {
                "namespace": "ol",
                "name": "disposition"
            },
            "title": "A disposition, solution, result.",
            "description": "",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "b4537358-a051-417a-832a-045d59c13b7f",
                "5ef69814-cd40-4209-ba7a-04f966c2fd00"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "cd85931a-ce58-40f4-b3f3-afc0fb9e1b1f",
            "type": {
                "namespace": "ol",
                "name": "domesticviolence"
            },
            "title": "Domestic Violence",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "6f995298-c6b7-4f9c-b9a2-81d873a7c692",
                "dbf8c083-c8d7-47d3-bc4b-e91baaeef526",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "8969dba7-7ff5-4aa5-ab14-1bed6723e4cc",
            "type": {
                "namespace": "ol",
                "name": "dsm"
            },
            "title": "DSM-5 Diagnostic Criteria - 5 Axes and Scales",
            "description": "DSM 5 axes diagnostic criteria",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "b0884db2-ae90-4a71-9219-e4748d239932",
                "2e3ed8a0-0724-438e-89b3-a106e4d5c6f7",
                "f989f7f6-45bb-4c95-9a24-a86fb2fdc8a4",
                "3c0b1425-9ce8-499c-ad76-6c7e55b1af40",
                "f7c5a55d-7c69-49f7-8da1-f9e078c5b95d",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "39e13db7-a730-421a-a600-ae0674060140",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "e671a273-d540-4f4e-a428-ce7f0b2f7129",
                "418f4003-99ca-4c0c-a32b-ac9145be7209",
                "79f562d8-efe7-4780-9f8b-3e5bc5fa6733"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "7b6b6b33-a836-4e44-9b07-0ed6ed58e97e",
            "type": {
                "namespace": "ol",
                "name": "education"
            },
            "title": "Education",
            "description": "Educational details about a person.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "62d542e1-a451-4d0e-b8f8-1483ef3970c2",
                "39e13db7-a730-421a-a600-ae0674060140",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "2d47ff8b-b723-4e20-8e70-c64cd8bbeb6f",
                "6cf81706-5bfa-4870-b878-df3484af3ec0"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "f8a323f0-8129-4a36-a2d4-3de14d8c1526",
            "type": {
                "namespace": "ol",
                "name": "electronicsignature"
            },
            "title": "Electronic Signature",
            "description": "An electronic representation of a physical \"wet\" signature, such as an image of a handwritten signature.",
            "schemas": [],
            "key": [
                "d41be97c-15aa-4c3d-9720-55acb7d11ad6"
            ],
            "properties": [
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "d41be97c-15aa-4c3d-9720-55acb7d11ad6",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "f32f0c3e-ed80-4155-89b6-0baaba21eaee",
            "type": {
                "namespace": "ol",
                "name": "employee"
            },
            "title": "Employee",
            "description": "The purpose of this entity is to identify the type of relationship the employee has to the employer rather than the nature of the work actually performed. \nFor medical personnel, there will be some kind of natural identifier, and the Employee role has a considerable number of specific attributes (jobClass, salary, hazardExposure). Employee may be a Resource for personnel management, to define the relationship between person and his/her employer.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "39e13db7-a730-421a-a600-ae0674060140",
                "e729bfaf-929e-498e-b953-d24656a168f6",
                "aa3f9865-e882-4363-9cef-5145f787b114",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "deccb4b4-9156-4f43-983d-104c344c2096",
            "type": {
                "namespace": "ol",
                "name": "employee (-d)"
            },
            "title": "Employee (-d)",
            "description": "A person who works for a business or a person. For users, the unique ID should be the auth0 ID.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "14908e47-923a-4c87-8d94-5881bf871cc1",
                "6bfc4a96-a4b9-49d7-affb-874f1edd9c91",
                "0111a451-0f30-4e53-8902-79b55f53ef1a",
                "aa3f9865-e882-4363-9cef-5145f787b114",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "e9a0b4dc-5298-47c1-8837-20af172379a5",
                "7b038634-a0b4-4ce1-a04f-85d1775937aa",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "7b0fbacb-d8e6-4a0c-93f7-9ca784120473",
            "type": {
                "namespace": "ol",
                "name": "employer"
            },
            "title": "Employer",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "b18efe15-5b7c-4342-9eed-e8583fd22110",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "224bee1a-6f7b-42e6-89eb-d8d3cda0b342",
            "type": {
                "namespace": "ol",
                "name": "employment"
            },
            "title": "A person's occupation information and employment history.",
            "description": "General occupational and employment information for a person. Differs from 'employee' in that 'employee' focuses on the relationship between a person and a specific organization; this entity type relates to occupation history (risks, industry, etc).",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "f0373614-c607-43b2-99b0-1cd32ff4f921",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "7d0c4111-85db-48d0-8465-708ed0269c31",
                "93a23f2b-8528-4173-89d9-cb049bb036ee",
                "b9bccb61-e83c-4e7d-89fa-62c91ea7665b",
                "1c3b3c2d-583b-40ab-b71b-6691bd93277b"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "b8b95a13-3316-47db-b96c-97d1d5614fa2",
            "type": {
                "namespace": "ol",
                "name": "emsunit"
            },
            "title": "EMS unit",
            "description": "A unit for an Emergency Medical Service",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "85499cb1-58bc-4f5c-85f2-99d7f4baca69",
            "type": {
                "namespace": "ol",
                "name": "encounter"
            },
            "title": "Encounter",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "f52ecac3-f1ab-46e4-8af8-3b8dcf68fe4d",
                "07844126-651d-417f-9678-df3f909a7ef7",
                "dcb47b40-17ac-487f-8a99-0956157d2907",
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a",
                "80be96e6-58e5-4015-a851-312c9c2327bd"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "873100f8-c672-435a-98d1-cf8e8bae8316",
            "type": {
                "namespace": "ol",
                "name": "encounterdetails"
            },
            "title": "Encounter details",
            "description": "Further details about an encounter.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "d5dd02a7-d4c4-497a-8301-f95430defa52",
                "39e13db7-a730-421a-a600-ae0674060140",
                "94e6ce04-e6a6-4b03-bb92-d8c2f7dc3f46",
                "e2fba0d0-4b1d-414f-bb30-89a49bb745b0",
                "c0eabed9-c959-4b32-afbd-483f4c81e6a6",
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a",
                "61592882-b700-42cd-95b7-715f312ece90",
                "b4343ae9-42d0-4ede-ae44-71736def4c11",
                "da509f09-e38a-4745-9e8d-295e2f42cade",
                "a57d8213-2b04-4004-b5b5-d2479e88429b"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "c2f00f3d-48c9-47a2-80a4-b1cbcf7d5397",
            "type": {
                "namespace": "ol",
                "name": "enrollment"
            },
            "title": "Enrollment Status ",
            "description": "Enrollment Status - (e.g., enrollment in health insurance, government programs, etc)",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                "bf4f1c24-65f5-47c7-88d7-48aec1e4e591",
                "39e13db7-a730-421a-a600-ae0674060140",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "54fa6acb-bd3e-4849-85b7-4eadaf33e112"
            ],
            "propertyTags": {
                "bf4f1c24-65f5-47c7-88d7-48aec1e4e591": [
                    "timeline",
                    "eventdate"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "f8c4ed72-709a-477e-96f9-04a54d5dd363",
            "type": {
                "namespace": "ol",
                "name": "episode"
            },
            "title": "Episode / Episode of Care",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "bf4f1c24-65f5-47c7-88d7-48aec1e4e591",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "39e13db7-a730-421a-a600-ae0674060140",
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65"
            ],
            "propertyTags": {
                "a791ca8d-b433-4a2b-be04-43d43cea14a7": [
                    "pie"
                ],
                "bf4f1c24-65f5-47c7-88d7-48aec1e4e591": [
                    "timeline",
                    "eventdate"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "ce0f8dc1-5938-4574-94bd-d9cd56487951",
            "type": {
                "namespace": "ol",
                "name": "episodedetails"
            },
            "title": "Details for an Episode / Episode of Care",
            "description": "An episode of care that groups 1 or more related health care encounters and the information contained within. For example, ",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "2956a11f-b787-4fe9-b396-4f00b1bfecd8",
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a",
                "39e13db7-a730-421a-a600-ae0674060140",
                "a57d8213-2b04-4004-b5b5-d2479e88429b",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "02c1d8f2-231d-4fa5-8c6f-5a18d36a470d",
                "1413453d-d5a8-4195-bb10-2f7acb9889b2",
                "da509f09-e38a-4745-9e8d-295e2f42cade"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "40385a8b-d0e4-4b18-ab17-5439ddbc28c2",
            "type": {
                "namespace": "ol",
                "name": "evictionhistory"
            },
            "title": "Eviction History",
            "description": "Details on eviction histories (number of times evicted stored as integers).",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "0abf30c6-4da9-4ffa-9dbf-02ca1b2e0bb6",
                "4167e9dd-ae6f-49d6-a9ea-c38bddeb8901",
                "f9ac41fb-897e-4d0f-ac71-dac7eddc56fa",
                "fee00dc4-6e57-421a-8414-18c956ee192f",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "bffb6c95-fac2-41ad-9fad-9b37f819d85f",
            "type": {
                "namespace": "ol",
                "name": "expense"
            },
            "title": "Expense",
            "description": "Details of an expense",
            "schemas": [],
            "key": [
                "29e89dab-2d08-4d19-922f-18b611cd12f1",
                "53960699-a9b0-4fbb-918f-f9460362914a"
            ],
            "properties": [
                "29e89dab-2d08-4d19-922f-18b611cd12f1",
                "53960699-a9b0-4fbb-918f-f9460362914a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "e0aba7dd-8033-48d8-8336-89e942102709",
            "type": {
                "namespace": "ol",
                "name": "facility"
            },
            "title": "Facility (-d)",
            "description": "A facility, including jail, hospital, clinic, etc.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "ee3a7573-aa70-4afb-814d-3fad27cda988"
            ],
            "properties": [
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "ee3a7573-aa70-4afb-814d-3fad27cda988",
                "90d8c6f6-385d-4064-a582-ad95a0ccc040",
                "09ebda14-780d-489d-89e2-640f1b67c85c"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "bcd99aeb-2938-4b28-b42f-cf35e3008720",
            "type": {
                "namespace": "ol",
                "name": "familyhistory"
            },
            "title": "Family History / Family Member History",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "c5a388d7-f9ed-4eb6-8dd6-633a4afcae6a",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "58929d33-1c01-42f1-891c-f3e55c4d4fc4"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "e53ff059-313c-459d-8dcb-788e1460cf8e",
            "type": {
                "namespace": "ol",
                "name": "feedback"
            },
            "title": "Feedback",
            "description": "Feedback about a health encounter or service. Can be given by colleagues, supervisors, or clients. Can be about the service itself or about the way data was entered about the service. ",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "4bae5b6e-3681-4e5f-b1e9-3429b482b2d9",
                "39e13db7-a730-421a-a600-ae0674060140",
                "01496236-e059-48d3-a01e-847eaf436fe2"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "7cb21770-9639-4f8a-95be-3ce479a3eaca",
            "type": {
                "namespace": "ol",
                "name": "fever"
            },
            "title": "Fever",
            "description": "",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "ed3de637-df5d-47cf-bb91-9a8ee346a6ab",
                "28d5e08f-0d92-4c25-9f78-191d0632a11d",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "8fccb0a9-1554-4a01-bdc2-4200952ca25a",
            "type": {
                "namespace": "ol",
                "name": "fireunit"
            },
            "title": "Fire Unit",
            "description": "A unit for a Fire Dispatch",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "b6c79daa-e6ce-4d6b-9c39-892feb9ff077",
            "type": {
                "namespace": "ol",
                "name": "form"
            },
            "title": "A form (e.g., consent form, release)",
            "description": "A form",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "8e65eca6-a3d1-4c05-885f-cc3156257139",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "c4ebb166-0d09-4499-beb3-627c3372168f"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "d653f9af-e16d-440d-bc00-5de169e3fd68",
            "type": {
                "namespace": "ol",
                "name": "gang"
            },
            "title": "Gang",
            "description": "A group of associates, friends or members of a family with a defined leadership and internal organization that identifies with or claims control over territory in a community and engages, either individually or collectively, in illegal, and possibly violent, behavior. (Wikipedia)",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "c5a91ff2-31b4-4d87-b0f6-e16d5bd321e2",
                "39e13db7-a730-421a-a600-ae0674060140",
                "80be96e6-58e5-4015-a851-312c9c2327bd"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "3062e759-3a3a-4b16-8536-5b0351889960",
            "type": {
                "namespace": "ol",
                "name": "gangrelatedbehavior"
            },
            "title": "Gang-related behavior",
            "description": "A collection of activities and actions exhibited by an individual, that law enforcement assesses for their relation to criminal gangs. ",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "79caddc9-f064-464e-92e8-9c2ee581e278",
                "6c322506-8210-462f-9034-9a1d45fff3ad",
                "39e13db7-a730-421a-a600-ae0674060140",
                "2c08b79a-e8fa-49b4-ba7d-2425d90bfcb8",
                "9050b307-c406-4dcf-b5c7-9503ea56b0d5",
                "54930826-d023-4ea1-9d4b-da7abbb000eb",
                "3e234667-0d2f-4fa7-8f56-407ff52bd7f4",
                "c687a37c-11e1-4e71-9b90-ff69467cfe2e",
                "d8ead474-4d65-4c80-92de-1b676de7bfaf",
                "383f2d12-ca4f-4e81-9acb-07cd7f0927b1",
                "34cf8330-bf25-4d2f-a019-8caf38643bb8",
                "af4648ce-4ce9-476b-b1d4-068592a84bcf",
                "d2a1e280-8ca5-4dc0-b1cf-0f071bc15d84",
                "eca2c6c4-edfb-4a1a-9b62-bf6569f820b3",
                "8531ffdd-1085-4281-afc4-43627e8fa9bc",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "6675a7e8-2159-41b1-9431-4053690fa3c9",
                "0ec3cae8-d002-4d66-af62-c3adb2b9bee3",
                "b86fade5-977a-4099-84ec-a6a54876d11a",
                "8b477563-64e3-46fe-99e4-4e7b396ab7fa",
                "7d063dc6-71cd-4fad-9db6-bd388cc6d963",
                "6b3c1924-2dd5-448c-ba6d-320784f2a139",
                "c6be649e-39ec-4306-98ec-a9345c8814c6"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "3c32486b-5a03-45ee-a4d0-d51bf6938f2d",
            "type": {
                "namespace": "ol",
                "name": "gastrointestinalbleeding"
            },
            "title": "Gastrointestinal Bleeding",
            "description": "",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "ed3de637-df5d-47cf-bb91-9a8ee346a6ab",
                "28d5e08f-0d92-4c25-9f78-191d0632a11d",
                "174abcbc-b2eb-4de3-b001-0e70054b807f",
                "ab5f6d19-e395-4379-984d-25ee7850a6b1",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "722173d3-c50a-4e67-b595-77bb9365f347",
            "type": {
                "namespace": "ol",
                "name": "group"
            },
            "title": "Group",
            "description": "A group.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "39e13db7-a730-421a-a600-ae0674060140",
                "12e40b86-c848-4f9e-bb5a-e9632835565b"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "edae9468-4eb4-4f34-a47b-f53423e3705b",
            "type": {
                "namespace": "ol",
                "name": "hasentity"
            },
            "title": "Has (-d)",
            "description": "",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "955dc331-b23e-4b4f-993c-4f2c9bb47fca",
            "type": {
                "namespace": "ol",
                "name": "healthcondition"
            },
            "title": "Health Condition / Problem / Issue / Diagnosis / Injury",
            "description": "Detailed information about a condition, problem, diagnosis, injury, or other event, situation, issue, or clinical concept that has risen to a level of concern.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "3276057e-2230-4f3e-abf7-9a80d7be52b8",
                "9f73b214-a7de-44c9-95c2-0cf35808cf8d",
                "39e13db7-a730-421a-a600-ae0674060140",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "c4ebb166-0d09-4499-beb3-627c3372168f",
                "d991694c-9c58-4476-b360-b3e5a57c9330",
                "83ec25f5-0389-4215-87a5-ba84d137b9d4",
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                "e018dfc5-9b1d-4c1d-b79b-30b49b4e9f97",
                "34755720-6444-456f-a626-a3609f692336",
                "7f311ad1-2972-4fb6-b273-cf9a04746494",
                "6cc66500-826b-458c-9d97-580b98b68991",
                "9e8d3210-8fb6-4532-b94a-cd746c8c57d6",
                "75a9a36d-f242-444d-b863-ea06c7a27cc0",
                "543bfa76-a46d-4ec0-a00e-75678af4552c",
                "54fa6acb-bd3e-4849-85b7-4eadaf33e112",
                "c8460593-7a12-450a-80ad-bc8e97018a0d",
                "87c18dcb-94e6-4690-97d5-0800754b79d4",
                "03b5cd4e-2519-4da6-98d6-9e5c692739f5",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "fcd7afb9-906b-486d-afb1-c2a3c0eccf35",
                "eac3c135-2819-408f-9134-c809c860e8f6",
                "92583a5d-0ff2-4408-9a06-5e7c04b59fcc"
            ],
            "propertyTags": {
                "c4ebb166-0d09-4499-beb3-627c3372168f": [
                    "pie"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "37892b00-4f0d-46b6-a157-943184ab1848",
            "type": {
                "namespace": "ol",
                "name": "healthencounteroutpatient"
            },
            "title": "Health Encounter - Outpatient Visit",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "62b88d5c-2928-423a-a606-9a1ccdcc4b50",
            "type": {
                "namespace": "ol",
                "name": "hearing"
            },
            "title": "Hearing / Ability to Hear",
            "description": "Properties associated with the ability to hear",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "43d335d3-4fd5-4b16-b7df-2494499b36fd",
                "19ae591e-9fdb-4c43-9d36-3ebff1929293",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "9e7a5933-f649-4061-9e29-b90b828089e1",
            "type": {
                "namespace": "ol",
                "name": "homeless"
            },
            "title": "Homelessness history",
            "description": "Information related to homelessness",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "2a9c1cae-e3a8-437f-9fc3-ecfb3d43e3bf",
                "14908e47-923a-4c87-8d94-5881bf871cc1",
                "e8f2b636-730c-44e1-b2ee-51e700397a16",
                "c8460593-7a12-450a-80ad-bc8e97018a0d",
                "3458d8fc-edeb-4d81-951c-d7d4668f4449",
                "22d68e05-8579-42b1-a188-c05bfe0773b7",
                "a7ecc119-6f7f-4603-b9ec-68b9141ea114",
                "e96f4905-e323-47b6-be43-2a356fd82e08",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "25431c60-6c26-4210-a422-569c5226ba7e",
                "811ccf93-5237-494f-acfc-069aa1a58836",
                "f12a9c1e-c81c-46fc-9974-7344fb6046d8",
                "fcd7afb9-906b-486d-afb1-c2a3c0eccf35",
                "eac3c135-2819-408f-9134-c809c860e8f6",
                "f9ac41fb-897e-4d0f-ac71-dac7eddc56fa",
                "0abf30c6-4da9-4ffa-9dbf-02ca1b2e0bb6",
                "4167e9dd-ae6f-49d6-a9ea-c38bddeb8901",
                "621051c6-09fd-4982-8f96-07833f75aaa8",
                "fee00dc4-6e57-421a-8414-18c956ee192f",
                "1c3b3c2d-583b-40ab-b71b-6691bd93277b",
                "622741a7-1332-4e6d-8ec5-6906c8abfd68",
                "c5397609-0124-4c54-8ec9-79f82341d19d",
                "717a0522-ef76-40c3-a123-22eb5c61d1db",
                "c4a5c9e3-3fb6-4b77-a8ca-e906fc3ff86e"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "25756d31-117e-41b9-8260-c3bf7346d82c",
            "type": {
                "namespace": "ol",
                "name": "hospitalization"
            },
            "title": "Inpatient stay / hospitalization",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "40c9935f-7bee-4241-a921-edfe99ec64dc",
                "47554181-5be7-4ae2-8373-0364e48ea2ac",
                "4974d4ed-a1a2-4c9f-ab1e-17e428a4eadb",
                "0ace727d-b397-48ba-82ab-2e6138fb31df",
                "3728048d-b28f-4089-b441-569935339965",
                "275e71f9-15b2-4107-8a15-d28fcedfa7cf",
                "281141de-e65f-46ec-9f2f-450974ed4d0d",
                "0eb09893-72c8-4f0f-99d8-0b906558a585"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "2fb96971-862a-4cd9-a9bc-00e89436a9d5",
            "type": {
                "namespace": "ol",
                "name": "housing"
            },
            "title": "Housing / Living Arrangements",
            "description": "Summary or persistent information about the housing, accommodation and living arrangements for an individual.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "e8f2b636-730c-44e1-b2ee-51e700397a16",
                "39e13db7-a730-421a-a600-ae0674060140",
                "5bfededf-4570-448e-9175-3ded749b3eb3",
                "802eac0c-19d4-473d-af60-1abd3dab4fc5",
                "b63ac291-3a26-4d99-8677-1e1c0f5c44da",
                "5f385f27-3c76-413b-980d-9bd0abe89c4a",
                "08c84783-afc8-46d2-83ff-f682f65bd01a",
                "c4068de7-245b-462e-946e-b8452a02d1c9",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "12e40b86-c848-4f9e-bb5a-e9632835565b"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "1751e759-6b46-4cb5-8fe0-c156fab29829",
            "type": {
                "namespace": "ol",
                "name": "housinghistory"
            },
            "title": "Housing History",
            "description": "Details on housing history.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "a57d8213-2b04-4004-b5b5-d2479e88429b",
                "bca1d47b-abbb-4755-a06c-2e1c15bea118",
                "aef490ca-b0e5-455c-b831-0d04bdf1a5e2",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "671621a2-6173-4bb4-aafa-a7a69d402563",
            "type": {
                "namespace": "ol",
                "name": "identification"
            },
            "title": "An identification (ID card, driver's license,...)",
            "description": "",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "e96f4905-e323-47b6-be43-2a356fd82e08",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "39e13db7-a730-421a-a600-ae0674060140",
                "0f10a3f1-a020-4367-a261-750d979abfca",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "e8174f66-4b80-4f8c-bcd3-2924d5ccd6d7",
                "faf3c011-b386-4c51-a1bb-4bad27b4083f"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "f984248c-5069-48b3-a292-719de798b9c7",
            "type": {
                "namespace": "ol",
                "name": "identifyingcharacteristics"
            },
            "title": "Identifying characteristics",
            "description": "Identifying physical characteristics on a person. In law enforcement records this information is often entered into the category of \"scars, marks and tattoos\". ",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "9e8d3210-8fb6-4532-b94a-cd746c8c57d6",
                "39e13db7-a730-421a-a600-ae0674060140",
                "2a9c1cae-e3a8-437f-9fc3-ecfb3d43e3bf"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "8c69f5e3-a690-4232-9a4a-2ef25965c305",
            "type": {
                "namespace": "ol",
                "name": "image"
            },
            "title": "Image / Picture",
            "description": "Image or Picture",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "e7c6fe49-1194-4119-bd0f-4ddb94c1b7d9",
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "6b513215-2566-491c-9d08-02a282f4123e",
            "type": {
                "namespace": "ol",
                "name": "imagesource"
            },
            "title": "Image Source",
            "description": "An image source",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "79737758-c62b-4a81-9298-cc40540850da",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "ed8b65b6-b387-4c16-b635-023d99347f99",
            "type": {
                "namespace": "ol",
                "name": "immigrationstatus"
            },
            "title": "Immigration Status",
            "description": "An Immigration Status of a Person with respect to a Country. This definition follows the National Information Exchange Model (NIEM).",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "39e13db7-a730-421a-a600-ae0674060140",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "afd4df97-11ee-4c9d-85e0-58d33ed4d840"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "645e7a97-3ef9-4cb7-9ed3-82211e7564f5",
            "type": {
                "namespace": "ol",
                "name": "incarcerationhistory"
            },
            "title": "Incarceration history",
            "description": "Details about a person's history of incarceration.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "811ccf93-5237-494f-acfc-069aa1a58836",
                "f12a9c1e-c81c-46fc-9974-7344fb6046d8",
                "fcd7afb9-906b-486d-afb1-c2a3c0eccf35",
                "eac3c135-2819-408f-9134-c809c860e8f6",
                "3fa50b55-efa9-4839-9ba7-2b1dad263739"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "72dc4594-8dc0-4956-959f-2408a069f2aa",
            "type": {
                "namespace": "ol",
                "name": "incident"
            },
            "title": "Incident",
            "description": "A police incident",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "4d5db4fe-a0c8-45f8-af6d-cd7cd4cab86c",
                "b94361f0-7172-4556-a4f3-99a183bff03c",
                "39e13db7-a730-421a-a600-ae0674060140",
                "477db70c-ee49-41bf-97d2-c4eb0e1ffcc4",
                "cb92bd0b-0338-4f93-9936-e857e12be830",
                "6f995298-c6b7-4f9c-b9a2-81d873a7c692",
                "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                "351e51ad-9f7e-4bd5-a237-84b16e1e1ce8",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "bd96f0c8-dbc0-49cd-b3a2-bb3faa9d6860",
                "8de9d1f4-9fe1-4056-a342-9142b227fd86",
                "d7a0c31f-6bea-4818-a299-7378b5516df2",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "b9170d9b-8265-452c-b9e8-ebeab5f7556f",
                "82798057-1496-4fd2-96cb-5156217fd8f7",
                "8636d42e-170a-4561-b962-5466fbe7af5e"
            ],
            "propertyTags": {
                "92a6a5c5-b4f1-40ce-ace9-be232acdce2a": [
                    "timeline",
                    "eventdate"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "b166054b-6cc7-41cd-8f1a-805fdfd20bbc",
            "type": {
                "namespace": "ol",
                "name": "income"
            },
            "title": "Income",
            "description": "Source of income",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "f9ac41fb-897e-4d0f-ac71-dac7eddc56fa",
                "621051c6-09fd-4982-8f96-07833f75aaa8",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "4167e9dd-ae6f-49d6-a9ea-c38bddeb8901",
                "0abf30c6-4da9-4ffa-9dbf-02ca1b2e0bb6",
                "fee00dc4-6e57-421a-8414-18c956ee192f",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "d2b5c652-de2a-4870-9526-f5118de5fe19",
            "type": {
                "namespace": "ol",
                "name": "income_deprecated"
            },
            "title": "Income (-d)",
            "description": "Income financial support, cash and noncash.",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "f012662e-45e5-45e6-90c1-85d757c95104",
                "27246bfa-7496-4b8b-a5d5-aaf2398108dc",
                "a962a8ba-2c4c-4110-92b5-dc37c0d02e22",
                "b22d9428-a103-424f-8885-4f0c976d3b84",
                "08c84783-afc8-46d2-83ff-f682f65bd01a",
                "8e15cc71-c2b5-4f1f-ae42-eb572ad66aa6",
                "126c3754-281f-4c88-83ef-3c8c78198d5b",
                "36864a7e-ba1f-487d-adca-4dc55ba82700",
                "9dd6385b-50c9-43c2-bb86-9232cc187d1a",
                "b996bdd3-1748-48a0-8348-a24feb4ea74f",
                "fa6e9c4d-09bd-46bc-a7f8-c1ac7c5d820e",
                "acdef6c8-348d-4c66-9ec2-2a082e838786",
                "a07b2d64-d1a4-4555-a57d-470490920d32",
                "10aa082b-7173-44ca-a00f-d629b874b598",
                "1db0650e-8a68-4c6c-8b3a-fd7b89aabedd",
                "f8c070a6-6315-494d-b8b8-f413e2ace393",
                "b8d807b2-6c7a-4d1b-add6-aac8e24f251b",
                "5a7afac3-471b-4b5a-8d58-d7748f0f2525"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "652fd22b-99d2-4a3b-8acc-e536259bf108",
            "type": {
                "namespace": "ol",
                "name": "inmateclassification"
            },
            "title": "Inmate Classification",
            "description": "Details on the classification of an inmate in jail or prison. Classification pertains to both custody and security levels, and can confer or revoke privileges and access rights.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "1023b3ee-f2d4-4eea-84a5-824ce6fa1bc0",
                "4982860a-d82b-4b62-a636-0092a9a55707",
                "39e13db7-a730-421a-a600-ae0674060140",
                "fe34a941-22ce-4beb-9479-b83d7831378a",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "6675a7e8-2159-41b1-9431-4053690fa3c9",
                "7da40450-5005-44e1-9ccd-cccadc2904a9",
                "36ffd722-1cd8-4714-ab95-4237bda9464b"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "26b6b5e0-7341-4941-b34a-3ee7b955335b",
            "type": {
                "namespace": "ol",
                "name": "insurance"
            },
            "title": "Insurance (plan or coverage information)",
            "description": "Insurance plan (e.g., an individual's coverage details). Use Person -> eligiblefor -> insurance for specific insurance benefits.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "24cd6477-01c5-4f25-8453-904d8a5ce84d",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "cb71e270-a273-4a72-9754-e022ea2a5fb0",
                "71075611-5217-409a-be98-e9e3ef21f44d",
                "14908e47-923a-4c87-8d94-5881bf871cc1",
                "e56f3d9d-7381-434a-998d-4d310f850cb0",
                "dc1fe921-ffd4-4d1b-a094-9fa3d25d4943",
                "36bc33ef-1ae0-40f1-91f2-6e1c7a3eadbb",
                "76e4aedc-5342-4886-8612-0a831ec7b392",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "a7ecc119-6f7f-4603-b9ec-68b9141ea114",
                "c87cdbb7-c4bd-4c71-b0ec-70b1ed69e00d",
                "e030091b-4447-4bdc-804f-430fb664978b",
                "369051b0-1f54-4651-8c8c-4017f3882d0b",
                "2543aa27-0f71-4346-bf62-9049a49ea014",
                "e8174f66-4b80-4f8c-bcd3-2924d5ccd6d7",
                "faf3c011-b386-4c51-a1bb-4bad27b4083f"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "25e14b46-e50e-4012-9d0d-3d2e76c95657",
            "type": {
                "namespace": "ol",
                "name": "invoice"
            },
            "title": "Invoice",
            "description": "Details of an invoice",
            "schemas": [],
            "key": [
                "29e89dab-2d08-4d19-922f-18b611cd12f1",
                "53960699-a9b0-4fbb-918f-f9460362914a"
            ],
            "properties": [
                "29e89dab-2d08-4d19-922f-18b611cd12f1",
                "53960699-a9b0-4fbb-918f-f9460362914a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "5bf88cde-65bc-4865-a58b-920eec4c4028",
            "type": {
                "namespace": "ol",
                "name": "involvedin"
            },
            "title": "Involved in",
            "description": "(Person) is involved in (an event).",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "1a99a9f7-c9fa-4cc9-9e29-1370c440f392",
                "07488a0f-0096-4d4b-bdb2-fb50b3a03997",
                "4e4d35e2-8dad-4af7-83f8-c28f983bffe2",
                "58b549ca-62af-4e09-8624-4989f776d4d2",
                "f7af5fb1-92de-495d-ac01-d3ab82081eb8",
                "ee3a7573-aa70-4afb-814d-3fad27cda988",
                "c5909ed6-5c9d-4016-b5ae-eba0008f4b2e",
                "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                "9e0ddd74-6881-44b3-a7d8-f98e9b45e02d"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "892bce63-805e-4b45-b9b1-7eaea1c48f2f",
            "type": {
                "namespace": "ol",
                "name": "jailstay"
            },
            "title": "Jail stay/record",
            "description": "A jail stay/record.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "52722320-b04e-41ae-95b3-ec670256e0b9",
                "94a8a61c-93cb-4284-82dd-06d36fb3fc81",
                "d5cd8ae6-f0de-48fe-9139-89108adedc19",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "8d7889be-f23c-42a9-811b-f72a3671d1a1",
                "eabab409-8ce7-499f-a4fb-d71356ada13b",
                "d45d5c98-ef15-4c28-bb59-7367c293db58",
                "14908e47-923a-4c87-8d94-5881bf871cc1",
                "1901c0b0-f051-4660-8d6d-b5a040dc9dcb",
                "cfea602e-9b53-4f10-8c2f-97173b77003d",
                "92ecb196-23f1-4ab4-a8c3-084ccbcc151a",
                "6e22d468-4977-4bec-8b87-9a9a9b10963e",
                "e5471522-9ec6-46e1-8b91-56b7e9291605",
                "1023b3ee-f2d4-4eea-84a5-824ce6fa1bc0",
                "d16ed792-851b-42cb-9e82-246869355651",
                "3e6d3232-6469-46ee-b437-aa0d0458a88e",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "d3450290-b346-4ce7-9bad-031c443d69de",
                "e1e36ca8-84d0-4c52-9e8b-0de16a2e7943"
            ],
            "propertyTags": {
                "3e6d3232-6469-46ee-b437-aa0d0458a88e": [
                    "timeline"
                ],
                "92ecb196-23f1-4ab4-a8c3-084ccbcc151a": [
                    "pie"
                ],
                "eabab409-8ce7-499f-a4fb-d71356ada13b": [
                    "eventdate"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "8b626558-cf1d-495d-a0f5-53bbb59bc25e",
            "type": {
                "namespace": "ol",
                "name": "jailstaylength"
            },
            "title": "Jail stay length",
            "description": "Details of a jailstay with respect to its duration.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "9bcfd1a5-804c-4bdd-a547-ad4494be4e1f",
                "6557a4f5-1193-4a0f-a1d1-54f23c33722a",
                "26990519-ac4e-4dc9-9559-f9b500a728da",
                "6e22d468-4977-4bec-8b87-9a9a9b10963e",
                "ffcf42d0-4134-4430-9f8f-d76cca10b9f2",
                "b730b3b3-d442-45a1-8d81-c082b1dd3a45",
                "d146903f-9196-40b8-90ce-3a0e8e4557a5",
                "a866612a-2316-4b18-88c1-e19ce9a01f01",
                "eabab409-8ce7-499f-a4fb-d71356ada13b",
                "f3b41e19-d1e9-4004-8763-b514a93983d2",
                "d15ace9d-fa1c-4db6-99fe-b009778cc781",
                "d2b300d8-3f54-4dbd-8800-4838f82f522f"
            ],
            "propertyTags": {
                "eabab409-8ce7-499f-a4fb-d71356ada13b": [
                    "timeline",
                    "eventdate"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "4bae15fb-4e1b-48ed-bf87-476df148b1c4",
            "type": {
                "namespace": "ol",
                "name": "kinto"
            },
            "title": "Kin to",
            "description": "(Person) is kin to (Person).",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "dd21c199-dd98-4c89-8dcc-08c8d38ef80b",
            "type": {
                "namespace": "ol",
                "name": "labtest"
            },
            "title": "Laboratory test",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "1df921c4-9f92-4e6e-8b41-c6687930c00e",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "8e65eca6-a3d1-4c05-885f-cc3156257139"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "fc3e9815-0ce7-4709-96d4-d5e8be584393",
            "type": {
                "namespace": "ol",
                "name": "legalissues"
            },
            "title": "Legal issues, concerns, self-reported arrest history",
            "description": "Reported legal issues and/or arrest history during a specified time frame / duration",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "db6eb03a-2eb5-4eb2-abee-b97147e9778e",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "dcb47b40-17ac-487f-8a99-0956157d2907",
                "621051c6-09fd-4982-8f96-07833f75aaa8",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "136eee13-0113-4b91-a804-6154824daa49",
            "type": {
                "namespace": "ol",
                "name": "location"
            },
            "title": "Location or address",
            "description": "Location or address",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "25431c60-6c26-4210-a422-569c5226ba7e",
                "3677e8ea-5da9-41f3-8b56-006548564eac",
                "376f727c-5329-4c92-87c9-a3b4d177ee3c",
                "64fb51c4-a1f1-4a52-aeda-73b7ff071c54",
                "6a85d1e1-fda5-4c9c-9e2e-2dda4ed8d3d1",
                "e96f4905-e323-47b6-be43-2a356fd82e08",
                "132820b9-6f20-40c8-945f-9ca2ec45e233",
                "06083695-aebe-4a56-9b98-da6013e93a5e",
                "e8f9026a-2494-4749-84bb-1499cb7f215c",
                "1624fc2d-d221-48d2-a7b4-ee94f80a515b",
                "a7ecc119-6f7f-4603-b9ec-68b9141ea114",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "4dfd7e4f-207a-4591-8cf3-2e5c9c7d0e53",
                "2aaffa14-e540-4d64-b087-56fe5bef0ba3",
                "90d8c6f6-385d-4064-a582-ad95a0ccc040",
                "39e13db7-a730-421a-a600-ae0674060140",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "afd4df97-11ee-4c9d-85e0-58d33ed4d840",
                "7c2ddf7e-81da-4fe7-91d8-4d2e1f6c5e22",
                "28d661b8-a45a-41b6-aec4-ed9988fa28dc",
                "8a8a4b3a-2530-40ab-afb4-55db1641f6c5",
                "e558a4e8-db25-478e-8f22-c5c230c27383",
                "3e2226e6-b45e-40e3-9952-d52f78a4ca30",
                "12ee5b7d-42a9-4a73-a41d-6e6f70fecb83"
            ],
            "propertyTags": {
                "25431c60-6c26-4210-a422-569c5226ba7e": [
                    "breadcrumbs"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "abd5a44f-5b9e-4c6f-871a-73268db25f6d",
            "type": {
                "namespace": "ol",
                "name": "malignanthyperthermia"
            },
            "title": "Malignant Hyperthermia",
            "description": "Current status of medical condition and history thereof",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "ed3de637-df5d-47cf-bb91-9a8ee346a6ab",
                "28d5e08f-0d92-4c25-9f78-191d0632a11d",
                "174abcbc-b2eb-4de3-b001-0e70054b807f",
                "ab5f6d19-e395-4379-984d-25ee7850a6b1",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "b9215c18-d2e2-411b-b206-a076b3f2db5c",
            "type": {
                "namespace": "ol",
                "name": "mapprojection"
            },
            "title": "Map projection ",
            "description": "Location information related to a specific geographic map projection.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "4c9e0939-f23e-4ddd-8471-880859145b6a",
                "5df57345-d02d-4fa3-867a-25d8dd79f2e9",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "930d126c-fa2e-4013-86f1-110c83a73a1a",
            "type": {
                "namespace": "ol",
                "name": "mat"
            },
            "title": "Information related to Medication-Assisted Treatment (MAT) for substance use.",
            "description": "Medication-Assisted Treatment (MAT) approach to treat substance use",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "23b2104b-83d1-48e0-b884-a149a7da7315",
                "2a9c1cae-e3a8-437f-9fc3-ecfb3d43e3bf",
                "39e13db7-a730-421a-a600-ae0674060140",
                "ed075421-abbf-4dcc-bf67-2277790108b8"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "df44620a-a921-44ee-b962-c10335ef7152",
            "type": {
                "namespace": "ol",
                "name": "mediaexposure"
            },
            "title": "Household Media / Media Exposure",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "448c6ce4-d1db-4f21-9f5b-41f325fe4311",
                "f52ecac3-f1ab-46e4-8af8-3b8dcf68fe4d",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "2ff485de-62e4-4e07-96eb-4bf2dfb3a7c1",
                "39e13db7-a730-421a-a600-ae0674060140",
                "f71cefdf-2c4c-41ff-be9e-4658b5854836",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "dcb47b40-17ac-487f-8a99-0956157d2907",
                "621051c6-09fd-4982-8f96-07833f75aaa8",
                "5bf7f587-c75c-46f1-9935-edb490e8b30e",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "2b6417e4-486b-4411-bd4f-0073ad68668c"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "5d7d2ce4-db1a-4c89-9af1-a1e65d7e053a",
            "type": {
                "namespace": "ol",
                "name": "mediauseattitude"
            },
            "title": "Media Use Attitudes",
            "description": "Parent's attitudes on their own media use",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "25609674-889c-42cb-84b3-299e0a80e7df",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a",
                "1b4b3973-6465-4483-a455-30be30bdc912",
                "beb63b1e-f0c0-467b-9d2c-7a0d7e5eb138",
                "6b1168fc-140d-46a9-a6cf-d5be81a88dd8",
                "928ed54f-812e-4819-ab8d-ea333afcbc5f",
                "b3a50aa9-ad1e-45ac-8982-cb59d95ce829",
                "bfb2b4d3-6842-4602-b77b-61252dd86648",
                "2b6417e4-486b-4411-bd4f-0073ad68668c",
                "1ad27953-9038-4e64-95aa-08c02be60e44"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "a4f10943-f7ac-4371-bab8-341ee206830a",
            "type": {
                "namespace": "ol",
                "name": "mediauseconcerns"
            },
            "title": "Media Use Concerns (Child Media Use)",
            "description": "Concern over child media use",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "5afb4422-d23d-4e70-90ca-f9a9d4f9ebcc",
                "39e13db7-a730-421a-a600-ae0674060140",
                "2b6417e4-486b-4411-bd4f-0073ad68668c",
                "b926d899-f3bb-485c-98f1-b5d4ade2d8ef",
                "9149a1b9-2508-4484-ba90-f89f2cb271bf",
                "c7edcd30-134f-4a68-b1f2-ab9f932c40d2",
                "af69859e-1319-446c-9744-54e8a68c584b",
                "c8f208c0-bd39-45ee-9c0f-817477246613",
                "80be96e6-58e5-4015-a851-312c9c2327bd"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "f180a5ba-b39e-43a3-84bc-65ff18203f32",
            "type": {
                "namespace": "ol",
                "name": "medicalprocedureicd10"
            },
            "title": "Medical Procedure - consistent with ICD-10 PCS",
            "description": "Medical procedure information, consistent with the ICD-10 PCS procedure coding and classification system.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "58929d33-1c01-42f1-891c-f3e55c4d4fc4",
                "f2e27121-252e-41d0-8ba0-d3cd42768e97",
                "6e9b88d9-0d9c-4b56-9ebd-49cc344312d9",
                "36734862-3f0e-4c64-a5cd-c1b8a51482dd",
                "87c18dcb-94e6-4690-97d5-0800754b79d4",
                "a47ea847-55a1-4f09-8e84-dff67e1b8083",
                "39e13db7-a730-421a-a600-ae0674060140",
                "fee00dc4-6e57-421a-8414-18c956ee192f",
                "10f1516b-336f-4b67-9e1a-37b598001ae3",
                "8e65eca6-a3d1-4c05-885f-cc3156257139"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "6ddd6161-c23c-4d25-9bef-ee283270d443",
            "type": {
                "namespace": "ol",
                "name": "medicaltest"
            },
            "title": "Medical Test",
            "description": "Information on a medical test or screening.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "f9ac41fb-897e-4d0f-ac71-dac7eddc56fa",
                "8e65eca6-a3d1-4c05-885f-cc3156257139",
                "d9d04245-892d-4364-b3f0-e33b5eb3c28e",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "621051c6-09fd-4982-8f96-07833f75aaa8"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "fbadb396-0497-413c-83ee-89e7370d7e4d",
            "type": {
                "namespace": "ol",
                "name": "medicaltestresult"
            },
            "title": "Medical Test Results",
            "description": "The results of a medical test (e.g., this entity can contain laboratory results, diagnostic test results, pathology, urinalysis, phlebotomy, other screenings, etc).",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "6e21f4c9-13e9-452e-8f18-d116276aa58d",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "fee00dc4-6e57-421a-8414-18c956ee192f",
                "f9ac41fb-897e-4d0f-ac71-dac7eddc56fa",
                "621051c6-09fd-4982-8f96-07833f75aaa8",
                "4167e9dd-ae6f-49d6-a9ea-c38bddeb8901",
                "0abf30c6-4da9-4ffa-9dbf-02ca1b2e0bb6",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "5ef69814-cd40-4209-ba7a-04f966c2fd00"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "89eb9433-3ef9-46f4-96c3-543df6a9e64c",
            "type": {
                "namespace": "ol",
                "name": "medication"
            },
            "title": "Medication",
            "description": "Medication - prescribed.",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "b836ff20-b9b2-4b1d-a1a0-63ae293d8067",
                "b89258a2-d190-4367-b3bc-ab0278749f85",
                "fa1cb70f-c5f4-481f-a9ad-561eb5d7a41a",
                "3d2144ea-dec1-496a-b83d-86597ae934dd",
                "abaa98db-9265-42ca-a272-74d667c972e1",
                "c15a4228-99cb-4439-8c5f-25fccb8ed781",
                "df0277b0-df7e-406f-8360-4a6ed6437fbe",
                "c42fc7c4-2ec6-45d5-9061-f51ed79284c6",
                "a7ecc119-6f7f-4603-b9ec-68b9141ea114",
                "caf53ac1-30f2-492a-a284-65eef9ed7827",
                "e274bded-fbce-46b9-b845-0a239c83956e",
                "93a23f2b-8528-4173-89d9-cb049bb036ee",
                "8e65eca6-a3d1-4c05-885f-cc3156257139",
                "d4e8e212-6400-4947-9997-8469ddec8bf5",
                "7ec77a05-c779-407c-9c6d-8890860fcbcf",
                "a0534dd8-0150-4d37-a41c-32d351c2fa22",
                "621051c6-09fd-4982-8f96-07833f75aaa8",
                "edc320e1-8344-4d68-827c-0a2117a9ff44",
                "fe34a941-22ce-4beb-9479-b83d7831378a",
                "1df921c4-9f92-4e6e-8b41-c6687930c00e",
                "58929d33-1c01-42f1-891c-f3e55c4d4fc4"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "58cee67c-f589-451f-a711-bd2422f2d9a8",
            "type": {
                "namespace": "ol",
                "name": "medicationadministration"
            },
            "title": "Medication Administration",
            "description": "https://www.hl7.org/fhir/medicationadministration.html",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "eece0de7-4ea7-47b2-81a3-1df1eeab8add",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "96e27bda-2ee0-444a-b5ec-9c9bc761887f",
                "8e65eca6-a3d1-4c05-885f-cc3156257139",
                "622741a7-1332-4e6d-8ec5-6906c8abfd68",
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "58929d33-1c01-42f1-891c-f3e55c4d4fc4"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "36ed20d7-e78d-4796-a339-805a33a94335",
            "type": {
                "namespace": "ol",
                "name": "medicationprotocol"
            },
            "title": "Medication Protocol (Care Plan / Treatment Plan Activity)",
            "description": "Medication protocols are written directions that allow for the supply and administration of a named medicinal product by a nurse or midwife in identified clinical situations. Using a Medication Protocol involves the authorization of the RN/RM to supply and administer a medication to groups of patients/service users in a defined situation meeting specific criteria and who may not be individually identified before presentation for treatment.\n",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "39e13db7-a730-421a-a600-ae0674060140",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "eece0de7-4ea7-47b2-81a3-1df1eeab8add",
                "2d47ff8b-b723-4e20-8e70-c64cd8bbeb6f"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "60052a61-4d4b-40f7-9dcc-26d28770310a",
            "type": {
                "namespace": "ol",
                "name": "medicationstatement"
            },
            "title": "Medication Statement",
            "description": "A record of a medication that is being consumed by a patient. A MedicationStatement may indicate that the patient may be taking the medication now or has taken the medication in the past or will be taking the medication in the future. The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician. A common scenario where this information is captured is during the history taking process during a patient visit or stay. The medication information may come from sources such as the patient's memory, from a prescription bottle, or from a list of medications the patient, clinician or other party maintains.\n\nThe primary difference between a medication statement and a medication administration is that the medication administration has complete administration information and is based on actual administration information from the person who administered the medication. A medication statement is often, if not always, less specific. There is no required date/time when the medication was administered, in fact we only know that a source has reported the patient is taking this medication, where details such as time, quantity, or rate or even medication product may be incomplete or missing or less precise. As stated earlier, the medication statement information may come from the patient's memory, from a prescription bottle or from a list of medications the patient, clinician or other party maintains. Medication administration is more formal and is not missing detailed information.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "93a23f2b-8528-4173-89d9-cb049bb036ee",
                "39e13db7-a730-421a-a600-ae0674060140",
                "bf4f1c24-65f5-47c7-88d7-48aec1e4e591",
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a",
                "52722320-b04e-41ae-95b3-ec670256e0b9",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "3276057e-2230-4f3e-abf7-9a80d7be52b8",
                "622741a7-1332-4e6d-8ec5-6906c8abfd68",
                "8d7889be-f23c-42a9-811b-f72a3671d1a1"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "39942a31-6ec6-4395-a491-569309a2b981",
            "type": {
                "namespace": "ol",
                "name": "notification"
            },
            "title": "Notification",
            "description": "An alert or notification",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "39e13db7-a730-421a-a600-ae0674060140",
                "a2bfb6fb-c1ac-4343-9aff-87ad0f910a9e"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "8fff5117-609c-4c39-8905-ee4d7edc21b1",
            "type": {
                "namespace": "ol",
                "name": "nursingprogressnotes"
            },
            "title": "Nursing Progress Notes",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "39e13db7-a730-421a-a600-ae0674060140",
                "5233c803-f115-4696-ade9-770cc2b63949",
                "65ad46f4-fad4-4762-bd07-d4daa9878b67",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "8e65eca6-a3d1-4c05-885f-cc3156257139",
                "bf031c3f-6e71-4002-b7d8-03395c97ada5"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "7dc7c797-96e3-41a4-9b37-ff04de2d61d8",
            "type": {
                "namespace": "ol",
                "name": "nutritionorder"
            },
            "title": "Nutrition Order",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "9edeb131-f6a1-4ba1-b282-2fe3f0f6102c",
                "39e13db7-a730-421a-a600-ae0674060140",
                "34a21e20-f180-4972-9ca1-066be52029ca",
                "80be96e6-58e5-4015-a851-312c9c2327bd"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "33f389fe-9ff6-41eb-b7f9-aa1aad545014",
            "type": {
                "namespace": "ol",
                "name": "offense"
            },
            "title": "Offense.",
            "description": "A law enforcement offense",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "b94361f0-7172-4556-a4f3-99a183bff03c",
                "c228a9c8-e0f3-4bb0-8b09-78b2c6162caa",
                "bc7869bd-f646-4e0c-89ad-ae77cdadb3ef",
                "39e13db7-a730-421a-a600-ae0674060140",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "29e89dab-2d08-4d19-922f-18b611cd12f1",
                "98795356-940f-42c2-9929-383931cac3bf",
                "e1fc2e45-eb5f-42db-b906-c6eaf2a4fb53",
                "c79cd283-bfa4-4393-aa82-efb0d0e63a17",
                "1130598d-991c-43d5-911b-a824d9af0fb7",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "c97555a0-ed79-4944-a000-ab961da3ab48",
                "d673e32c-6e67-4885-8e30-47e98f6229f2",
                "729da80b-be28-496d-b6ce-bb118024408e",
                "24091b3a-9093-4db3-a540-9d83f4f76e01",
                "fee00dc4-6e57-421a-8414-18c956ee192f",
                "6e43eb85-276b-4855-b96c-24f701a58389",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "1e5bc2c5-3320-4ae0-b4eb-38edf65a4942",
                "351e51ad-9f7e-4bd5-a237-84b16e1e1ce8",
                "39e3e0d1-d5c4-4422-a88d-e5e442e8a667",
                "12a03e63-d114-4593-90d1-bb8bdb68e14b",
                "6f995298-c6b7-4f9c-b9a2-81d873a7c692",
                "a2bfb6fb-c1ac-4343-9aff-87ad0f910a9e",
                "cdb38749-8e44-440b-87db-544ac510034c"
            ],
            "propertyTags": {
                "6e43eb85-276b-4855-b96c-24f701a58389": [
                    "pie"
                ],
                "b94361f0-7172-4556-a4f3-99a183bff03c": [
                    "eventdate",
                    "timeline"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "5003d581-0cc3-4d05-b4e2-a62f56d28bb9",
            "type": {
                "namespace": "ol",
                "name": "oflength"
            },
            "title": "Length of",
            "description": "(Something) is of length (Length entity).",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "63f28fa6-3160-484d-be1c-5ef98e72a129",
            "type": {
                "namespace": "ol",
                "name": "optout"
            },
            "title": "Opt Out",
            "description": "An opt out event",
            "schemas": [],
            "key": [
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a"
            ],
            "properties": [
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "30945c4f-2d52-4d4c-bad1-24a72743c159",
            "type": {
                "namespace": "ol",
                "name": "orasassessment"
            },
            "title": "ORAS Assessment Tool",
            "description": "Scores from one of the nine ORAS tools. The Ohio Risk Assessment System (ORAS) is a dynamic risk/needs assessment system to be used with adult offenders. It offers criminal justice actors the ability to assess individuals at various decision points across the criminal justice system. While the assessment is free to use, agencies must be trained prior to implementation. ",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "79f562d8-efe7-4780-9f8b-3e5bc5fa6733",
                "e671a273-d540-4f4e-a428-ce7f0b2f7129",
                "8e65eca6-a3d1-4c05-885f-cc3156257139",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "436da824-c9b5-4a6d-b121-72c77be98ac8",
            "type": {
                "namespace": "ol",
                "name": "organization"
            },
            "title": "Organization",
            "description": "An organization is an entity comprising multiple people, such as an institution or an association, that has a collective goal and is linked to an external environment.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "ebe830b0-2ce9-4f84-9c11-3eaba875ee0d",
                "0dde9277-25af-4c3d-980c-936ebb112c0d",
                "24cd6477-01c5-4f25-8453-904d8a5ce84d",
                "db5e822d-9255-43a8-83a3-0f178da477c9",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "39e13db7-a730-421a-a600-ae0674060140",
                "7f9a6ef4-c75e-4c41-a7dd-1ce49c131040"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "829c5955-243a-42ef-b395-3327563364f5",
            "type": {
                "namespace": "ol",
                "name": "overdosehistory"
            },
            "title": "Overdose History",
            "description": "Information on Past Overdoses",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "a74abb45-0912-47b6-8a7d-470af7ac42ef",
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "7ec77a05-c779-407c-9c6d-8890860fcbcf",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "b836ff20-b9b2-4b1d-a1a0-63ae293d8067",
                "a7ecc119-6f7f-4603-b9ec-68b9141ea114",
                "df73ac08-6a4a-48d4-9847-77681794e0f7"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "5668b57f-904b-4405-ba41-5cf292408a0c",
            "type": {
                "namespace": "ol",
                "name": "parentingstressindex"
            },
            "title": "Parenting Stress Index (PSI) ",
            "description": "PSI",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "eaa64e54-fd63-4678-a589-680f5b9fb1da",
                "6f92cdf1-3e5f-412d-ae44-ccaa4239344e",
                "0bc0c5ec-6b27-45df-a549-e0cf163ffc1b",
                "d4e1a365-46c5-4c33-a3e1-6aa9e7b0c407",
                "e87e1b03-8b82-4d1d-98e3-440304564d9d",
                "e2d47187-085b-4783-85ff-7fc9fff89cc5",
                "02beaa57-ebb9-4349-918d-6bf3afa49c9a",
                "5ebd81b0-ce0e-47f9-9ba1-423e3f177b39",
                "cee91e4c-43ff-47ce-abac-3136d2bfe5b7",
                "c48d3c45-e9f2-4fbf-9824-9549b5199c87",
                "9fc2d920-470f-40d6-8dbd-6861a3e59685",
                "f319ce78-ba6a-495b-a681-b743c3d16cbc",
                "ef2ae2ee-67b7-412e-a633-e1ff5de51ca0",
                "bfb2b4d3-6842-4602-b77b-61252dd86648",
                "057146e2-0f35-402f-ad68-34a003936f65",
                "1d82cd84-d24e-4bec-a7c4-10bb6f387e49",
                "5afb4422-d23d-4e70-90ca-f9a9d4f9ebcc",
                "88d822a6-495b-4d54-bfb1-4ee1c8a4979a",
                "cf83fe38-1661-41b1-97e9-6f4f732b034c",
                "6d37a208-e8b3-42ef-bf85-ad18d70fa180",
                "dec3c2f3-b1b2-4674-933b-a41dc4b9525d",
                "0397b67c-870b-483a-84b9-d683de54ea3a",
                "f0d8174e-d805-45dc-b781-2e86af81511c",
                "a0fdf39a-5166-46de-b6db-8a6eddfead2d",
                "04b94629-ea29-4c0d-9317-d985f21e30f4",
                "c2e01b3e-76a3-46ed-9617-0ab4cea5a883",
                "e325d17e-2793-47a0-be1d-631e4df7ceb7",
                "32b2d6fb-b291-4d8c-9787-a469a8ff2e6f",
                "636fe4de-a596-410c-a51f-10991209e4f8",
                "064b0b89-588f-4f8c-af21-0b65d36fae97",
                "a2bfb6fb-c1ac-4343-9aff-87ad0f910a9e",
                "ff257ab5-ba17-43a6-8730-40351def981f",
                "02dee11b-d817-4ca9-8ba8-b21339d92923",
                "ceaa83b3-f2a8-49f5-8f4b-d3d08388387a",
                "d4394df6-4701-4811-a654-a0558ff4e5eb",
                "7bfd7fac-6b12-40fa-ba9b-021bde9f12f2"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "0f292525-a305-4e33-a2ba-92a6e5987338",
            "type": {
                "namespace": "ol",
                "name": "parentmediationscale"
            },
            "title": "Parent Mediation Scale",
            "description": "Parent mediation of child media use",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "ceaa83b3-f2a8-49f5-8f4b-d3d08388387a",
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a",
                "88d822a6-495b-4d54-bfb1-4ee1c8a4979a",
                "f319ce78-ba6a-495b-a681-b743c3d16cbc",
                "ec07c9c9-56ab-453b-8d70-6c2e51c2c6c4",
                "a9678fab-75d1-4b1c-bb24-7a5a75a97b2b",
                "a845c7e8-de9d-4af8-b071-012074e84036",
                "2b6417e4-486b-4411-bd4f-0073ad68668c",
                "9a32aedd-6d65-4bde-b919-d6eb073a4273",
                "b14c01f0-b273-4f6f-aac9-fa44aa93ebf4",
                "8361c4e7-7163-469a-adab-2131f98a6b5f",
                "9e57eb53-a729-4cd0-bca4-a2bde8d56093",
                "d3bf6c2f-b222-45d5-aed6-458037fcea3b",
                "9149a1b9-2508-4484-ba90-f89f2cb271bf",
                "521826ee-0050-4e2a-8840-f357fe9d41c3",
                "c970b856-79e9-45d7-8c47-48e3bd5d0944",
                "8869e0e2-4516-453c-aadb-9c05a77d1f91",
                "fae7f022-8043-4f97-b9fc-8a3d826db42d",
                "5c58f7b1-83ec-4ddc-b501-25eb3b25c7f6",
                "0aa2e83a-99ec-40fe-b4b7-c07f428746a5",
                "d557fb41-1c2a-4b4d-ade9-ab25553e1d99",
                "93a23f2b-8528-4173-89d9-cb049bb036ee",
                "3f3c2716-e8b0-4d1a-9c17-7e3d6b98fb03",
                "d4c5b552-c52d-471a-99b5-8a09a6009bb2",
                "514532d6-6756-4d8b-adbf-3d37e66287b4",
                "edab4120-3c45-4856-87b9-a3233bf7dfbc",
                "5aaf8461-a64b-446c-9391-2bfc86e6538b",
                "a1707b5f-b76b-47f9-bcad-85b3dbe233d9"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "5d83014d-1be7-4d96-8b9b-057a0bfd9592",
            "type": {
                "namespace": "ol",
                "name": "parentmood"
            },
            "title": "Parent Mood Assessment (PMA)",
            "description": "INSTRUCTIONS:  Select the response on the scale below that indicates how well each adjective or phrase describes your present mood.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "32b2d6fb-b291-4d8c-9787-a469a8ff2e6f",
                "4bae5b6e-3681-4e5f-b1e9-3429b482b2d9",
                "79f562d8-efe7-4780-9f8b-3e5bc5fa6733",
                "418f4003-99ca-4c0c-a32b-ac9145be7209"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "a6864cf8-090f-427d-a9fd-229eeb045797",
            "type": {
                "namespace": "ol",
                "name": "parolereview"
            },
            "title": "Parole Review",
            "description": "A review of an inmate while incarcerated, for the purposes of determining parole eligibility.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "369051b0-1f54-4651-8c8c-4017f3882d0b",
                "fe34a941-22ce-4beb-9479-b83d7831378a",
                "5366c4ae-105b-47f9-80d8-2a6459a1d3fa",
                "ca7ffc02-2002-4ba4-b89f-8c7b0ba8e596",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "45013f5d-fd6f-41bc-983d-d7b4cfe9876c",
            "type": {
                "namespace": "ol",
                "name": "patient"
            },
            "title": "Patient",
            "description": "Person entity for health care settings (e.g., medical, detox, etc).",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "21c84099-a49c-4c44-900b-37a162864a99",
            "type": {
                "namespace": "ol",
                "name": "patientcompliance"
            },
            "title": "Patient Compliance",
            "description": "Patient Compliance / Noncompliance Record",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "96e27bda-2ee0-444a-b5ec-9c9bc761887f",
                "58929d33-1c01-42f1-891c-f3e55c4d4fc4",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "db3d95c3-f4c9-4449-bd47-b363e8e992de",
            "type": {
                "namespace": "ol",
                "name": "patientsurvey"
            },
            "title": "Patient care survey / AMA exit interview",
            "description": "Patient care survey / AMA exit interview",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a",
                "39e13db7-a730-421a-a600-ae0674060140",
                "9c0466a6-a716-4efb-bbe5-3996c57f03cb",
                "e8fc910e-6135-4764-bc99-e5b498ea0dd4",
                "61592882-b700-42cd-95b7-715f312ece90",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "8e65eca6-a3d1-4c05-885f-cc3156257139",
                "c2d759b8-639a-414d-81b8-30caf3ab7df3"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "120454ea-7d50-4770-aa01-5f1479bddb4f",
            "type": {
                "namespace": "ol",
                "name": "payment"
            },
            "title": "Payment",
            "description": "Details of a payment",
            "schemas": [],
            "key": [
                "29e89dab-2d08-4d19-922f-18b611cd12f1",
                "53960699-a9b0-4fbb-918f-f9460362914a"
            ],
            "properties": [
                "29e89dab-2d08-4d19-922f-18b611cd12f1",
                "53960699-a9b0-4fbb-918f-f9460362914a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "6faf5245-3ad1-4d47-96fe-ea11cd4bf1c8",
            "type": {
                "namespace": "ol",
                "name": "person"
            },
            "title": "A person",
            "description": "An individual, its immutable characteristics, and unique identifiers (aka government-issued IDs)",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "c37a2b60-38e8-4489-8b57-4f91d9169da8",
                "1a851089-f932-4d2a-b35a-3af532f72fc8",
                "9d978cb3-7cc4-456c-820a-a978ac81f5cf",
                "f4581819-935c-46f6-b998-135a787601a9",
                "e6024b83-75b4-43ae-9f05-22d05cd183ed",
                "fc026364-0bee-41fe-a079-ab6a04d6a6b4",
                "a66544cf-9400-4436-a3db-29604bb8c1b4",
                "e5fdc012-6cf0-4e8a-9900-d37625f21ec1",
                "28c4efb8-55d9-45bc-9635-201d93cd43c4",
                "0a4dac75-60ad-445b-9727-92bb572bc67a",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "ae5bbe59-ab6d-43f9-8d69-386d8f85f818",
                "692a2108-7f5d-40fa-a376-2341acea88b0",
                "111fc894-0478-4ce5-923c-149f720442f7"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "b83efabb-b89a-4beb-9a84-190da4adc990",
            "type": {
                "namespace": "ol",
                "name": "persondetails"
            },
            "title": "Person Details",
            "description": "Mutable (changeable) characteristics of a person",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "49adf7e7-1962-44c0-a683-4091366e03fd",
                "d8d5cd4c-0262-4dbe-b446-97dc913a4b3b",
                "8d52f9b7-fe9d-4d09-aec4-bbbfee74f714",
                "b4755499-5920-4e52-8774-20d70e812504",
                "e823bc68-f7b8-40e0-9c77-076414e46467",
                "fafbf5d2-d681-4468-b7e3-3472c661b042",
                "0111a451-0f30-4e53-8902-79b55f53ef1a",
                "915df70e-ebe3-4b59-9d4e-59c0609a5577",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "5538ee80-0a0d-489e-ad0c-1c815bd81805",
                "57d24585-7aec-43b7-b0f9-4162321366de",
                "39e13db7-a730-421a-a600-ae0674060140",
                "9b55f541-416c-4ab2-8d6e-b30e547eecb4",
                "f0a6a588-aee7-49a2-8f8e-e5209731da30",
                "8293b7f3-d89d-44f5-bec2-6397a4c5af8b",
                "ac37e344-62da-4b50-b608-0618a923a92d",
                "d9c0caf4-afd6-43e7-9761-96aad916cd86",
                "065a9db9-6fcd-400e-ac26-a969521c386a",
                "f6f98745-c2b0-468f-89a6-7b57a69f104b",
                "82f6ec6a-60ff-42d9-8abf-52086a2f1232",
                "8237d146-bf3c-4652-a44a-5ecd9dabb2ad",
                "62d542e1-a451-4d0e-b8f8-1483ef3970c2",
                "c929ca9a-f03f-468d-9627-923f8571b177",
                "f28cc0f3-1065-42df-b43f-d70b313a25de",
                "f0373614-c607-43b2-99b0-1cd32ff4f921",
                "b6e2d7ad-8f54-488b-ba56-0b5fe64696f3",
                "5bf7f587-c75c-46f1-9935-edb490e8b30e",
                "7b957683-ba64-4226-83a0-fc12de371278",
                "ac359796-a98e-43c3-bbcc-e53e03aa5186",
                "1d798a9e-3914-4fa9-b011-53459b198301",
                "658d4505-b295-4f4a-86aa-a9e50d086ee1",
                "2531472b-8f73-47d1-885b-1dd4018aff48",
                "717c1496-451f-4f39-abf9-b64a8c8f85b7",
                "cf068e11-5ed4-4aee-8363-f52e9969c486",
                "50ece93c-a78e-4295-8f75-7888a55c6c97"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "10438ac7-5083-42c0-95b8-9ad5c4c6c87a",
            "type": {
                "namespace": "ol",
                "name": "persondetailscriminaljustice"
            },
            "title": "Personal details (criminal justice)",
            "description": "Personal details related to criminal justice.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "656ded15-4503-4623-977f-b1188a64cafa",
                "cccdf498-4c90-4015-85c3-2a83536b705a",
                "31854afe-a16e-4d64-99cd-6bf21efe468b",
                "39e13db7-a730-421a-a600-ae0674060140",
                "9bc02b4a-bc13-42a7-89a2-53c8500b2517",
                "f393b40b-884b-45d6-a351-845cb31c46ba",
                "f2c3c58f-e643-4990-9297-e0f009a67f86",
                "56cd7bc4-3d81-4a81-a5e2-308c4678efc4",
                "45aa6695-a7e7-46b6-96bd-782e6aa9ac13",
                "2846a99b-daff-4f70-852a-091304ac49e9",
                "cb92bd0b-0338-4f93-9936-e857e12be830"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "f53a0422-0ae8-4975-b2bf-78648fa74693",
            "type": {
                "namespace": "ol",
                "name": "persondetailshealth"
            },
            "title": "Person details - health-related",
            "description": "Health-related person details",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ca62d878-f295-4c22-bb33-f9eba7a4b382",
                "39e13db7-a730-421a-a600-ae0674060140",
                "5874df92-75d1-4134-b3e7-aaad97c0dc17",
                "0bcd1bab-dd54-48f9-8b50-a3ec3cd85323",
                "894ba324-1fbe-4e5f-aead-eb2a22adbca2"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "c285edde-ca58-457c-a24c-2e8654b8c410",
            "type": {
                "namespace": "ol",
                "name": "phonecall"
            },
            "title": "Phone call",
            "description": "Details about a telephone call.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ccc4b8c4-7a48-4a8b-8599-e094bf11c755",
                "c33e55fa-6519-49fe-b683-655ef48ab2e4",
                "346c20d7-4a52-4276-a908-611bc49eb2a7",
                "c8a43c4e-fde7-459d-a475-65bd9d513ca7",
                "2290c1f5-c13d-476a-8727-688d4ede5d7e",
                "7aa37902-86fe-4b6a-8d2a-6c8690a027f0",
                "39e13db7-a730-421a-a600-ae0674060140",
                "7674c064-c8fb-42b0-a1ca-c7cab0e0829d",
                "469575e1-8440-4d2e-9ce7-22711ffe54d4"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "de99d249-ff20-474b-b080-f2a3a75bc39c",
            "type": {
                "namespace": "ol",
                "name": "physicalappearance"
            },
            "title": "Physical Appearance or Presentation",
            "description": "Text description of / characteristics related to an individual's physical appearance during an encounter",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "21d22ef1-37e1-4bdb-91ab-e91716581dea",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "b6e2d7ad-8f54-488b-ba56-0b5fe64696f3",
                "f6f98745-c2b0-468f-89a6-7b57a69f104b",
                "82f6ec6a-60ff-42d9-8abf-52086a2f1232",
                "658d4505-b295-4f4a-86aa-a9e50d086ee1",
                "e823bc68-f7b8-40e0-9c77-076414e46467",
                "d9c0caf4-afd6-43e7-9761-96aad916cd86",
                "065a9db9-6fcd-400e-ac26-a969521c386a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "95ae3462-8148-4ef1-949f-0681189c6f26",
            "type": {
                "namespace": "ol",
                "name": "physicalexam"
            },
            "title": "Physical Examination Observations",
            "description": "Observations generated by physical exam findings including direct observations made by a clinician and use of simple instruments and the result of simple maneuvers performed directly on the patient's body.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "b3562c95-33bc-4143-a970-0d173a3f35fc",
            "type": {
                "namespace": "ol",
                "name": "policecad"
            },
            "title": "Police CAD",
            "description": "A police CAD record/event.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "477db70c-ee49-41bf-97d2-c4eb0e1ffcc4",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "b94361f0-7172-4556-a4f3-99a183bff03c",
                "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                "1e5bc2c5-3320-4ae0-b4eb-38edf65a4942",
                "39e13db7-a730-421a-a600-ae0674060140",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "b9170d9b-8265-452c-b9e8-ebeab5f7556f",
                "cb92bd0b-0338-4f93-9936-e857e12be830",
                "0dde9277-25af-4c3d-980c-936ebb112c0d",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "8636d42e-170a-4561-b962-5466fbe7af5e"
            ],
            "propertyTags": {
                "b94361f0-7172-4556-a4f3-99a183bff03c": [
                    "timeline",
                    "eventdate"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "a86eff53-3558-4cce-88e9-403c509c157a",
            "type": {
                "namespace": "ol",
                "name": "postedby"
            },
            "title": "posted by",
            "description": "(Bail / bond /...) is posted by (Person).",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "331445f1-3cd7-46f1-a0fd-a6118319a15f",
            "type": {
                "namespace": "ol",
                "name": "pregnancy"
            },
            "title": "Pregnancy",
            "description": "",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "28d5e08f-0d92-4c25-9f78-191d0632a11d",
                "ca62d878-f295-4c22-bb33-f9eba7a4b382",
                "174abcbc-b2eb-4de3-b001-0e70054b807f",
                "ab5f6d19-e395-4379-984d-25ee7850a6b1",
                "ed3de637-df5d-47cf-bb91-9a8ee346a6ab",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "1c77a48e-1df1-4554-b695-7b5bc6fb5a68",
            "type": {
                "namespace": "ol",
                "name": "primaryactivity"
            },
            "title": "Primary Activity (Time Use)",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                "0dde9277-25af-4c3d-980c-936ebb112c0d",
                "39e13db7-a730-421a-a600-ae0674060140",
                "58a9d637-98e3-4727-b9c0-eb431c420936",
                "2ff485de-62e4-4e07-96eb-4bf2dfb3a7c1",
                "f71cefdf-2c4c-41ff-be9e-4658b5854836"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "993b3736-88e4-411a-bcba-2ef6605f8b22",
            "type": {
                "namespace": "ol",
                "name": "priormedicalencounter"
            },
            "title": "Prior Medical Encounter Details / Medical Treatment History / Summary",
            "description": "Medical Treatment History (e.g., history of specific treatments, screenings, diagnostics, etc. For example, a patient report of medical treatment, injury, hospitalization, etc.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ebb96ca5-5a0c-46e6-895c-390e9ce9f575",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "d9d04245-892d-4364-b3f0-e33b5eb3c28e",
                "323fb63a-171f-439d-8260-c67b22f45a37",
                "8e65eca6-a3d1-4c05-885f-cc3156257139",
                "6e21f4c9-13e9-452e-8f18-d116276aa58d",
                "93a23f2b-8528-4173-89d9-cb049bb036ee",
                "39e13db7-a730-421a-a600-ae0674060140",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "fae7f022-8043-4f97-b9fc-8a3d826db42d",
                "0afac6ec-8fbe-43c1-a93b-861dfe374596",
                "a57d8213-2b04-4004-b5b5-d2479e88429b",
                "da509f09-e38a-4745-9e8d-295e2f42cade"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "77469743-c1c2-450d-bb80-37517491b95e",
            "type": {
                "namespace": "ol",
                "name": "probation"
            },
            "title": "Probation",
            "description": "Details of a person's probation.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a",
                "0ec5a29a-23b4-4634-8e9a-047f345beea2",
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "39e13db7-a730-421a-a600-ae0674060140",
                "fcd7afb9-906b-486d-afb1-c2a3c0eccf35",
                "eac3c135-2819-408f-9134-c809c860e8f6"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "1fb0c52c-d236-4c31-a79a-b302ad8e8fa2",
            "type": {
                "namespace": "ol",
                "name": "problemslist"
            },
            "title": "Problems List",
            "description": "A  list of problems that the patient is known of have (or have had in the past).",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "af432ff4-3fe5-4bc7-a1b4-af1e584340c9",
            "type": {
                "namespace": "ol",
                "name": "procedure"
            },
            "title": "Observations generated by procedures (non-lab).",
            "description": "Observations generated by other procedures. This category includes observations resulting from interventional and non-interventional procedures excluding laboratory and imaging (e.g., cardiology catheterization, endoscopy, electrodiagnostics, etc.). Procedure results are typically generated by a clinician to provide more granular information about component observations made during a procedure. An example would be when a gastroenterologist reports the size of a polyp observed during a colonoscopy.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "58929d33-1c01-42f1-891c-f3e55c4d4fc4",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "d98f8cf4-4459-4923-b85e-ff35c62b4e9f",
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a",
                "96e27bda-2ee0-444a-b5ec-9c9bc761887f",
                "8e65eca6-a3d1-4c05-885f-cc3156257139"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "d5982da5-8f13-40d9-8b43-c4e2926e1395",
            "type": {
                "namespace": "ol",
                "name": "program"
            },
            "title": "Program",
            "description": "A program.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                "39e13db7-a730-421a-a600-ae0674060140",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "a323b0b9-a248-447c-87bc-29cfb2b78d58",
            "type": {
                "namespace": "ol",
                "name": "programoutcome"
            },
            "title": "Program outcome",
            "description": "A program's outcome.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "f2787ef1-8a9d-4297-9189-e78b12b76daf",
                "58929d33-1c01-42f1-891c-f3e55c4d4fc4",
                "6675a7e8-2159-41b1-9431-4053690fa3c9",
                "98ea0781-13fd-4bef-ab3d-893e1757dfe5",
                "52722320-b04e-41ae-95b3-ec670256e0b9",
                "39e13db7-a730-421a-a600-ae0674060140",
                "8be727f4-adcd-486c-b860-918595908c9f"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "697c12ec-fec3-4f6e-b603-89d48cbdf4fe",
            "type": {
                "namespace": "ol",
                "name": "provider"
            },
            "title": "Provider (Health Care)",
            "description": "Health Care Provider",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "70d2ff1c-2450-4a47-a954-a7641b7399ae",
                "a46f979e-250d-49ab-b974-f41b4796fd4f",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "dfe90a24-41ec-4b7d-8051-8bcbc81dc630",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "366eacb7-b3a9-464b-896e-0729baf97eb6",
                "a697458d-6060-46c8-a677-4972530a4d41",
                "54fa6acb-bd3e-4849-85b7-4eadaf33e112"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "4cd615be-157f-4950-b254-1ed1f62de765",
            "type": {
                "namespace": "ol",
                "name": "publickey"
            },
            "title": "Public Key",
            "description": "A cryptographic public key.",
            "schemas": [],
            "key": [
                "271d7c29-346e-45ca-a67f-d610392ff5ae"
            ],
            "properties": [
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "271d7c29-346e-45ca-a67f-d610392ff5ae",
                "e9264f06-9f0c-4196-b857-b4f8621f29f4",
                "4ceb2128-8bff-409e-9ae2-39714c81b252",
                "517d9dbd-d6cc-49d2-afed-21f6e86ff154"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "b79befd5-6140-48b7-9a2d-71e668ee6275",
            "type": {
                "namespace": "ol",
                "name": "qualitycontrol"
            },
            "title": "Quality Control",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "9302e564-6455-4f58-843c-b08e6c9e9daf"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "f9db7ff9-862a-4fdf-bda8-5d7b96670708",
            "type": {
                "namespace": "ol",
                "name": "qualityoflife"
            },
            "title": "Quality of Life Assessment",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "01a38115-3bb7-49a1-8003-a32ae02ad283",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "bb2b71ec-d8b7-465f-8f2c-b62c7aa8f1ba",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "bb657e91-0f3b-4a64-8527-e83883d7fcef",
            "type": {
                "namespace": "ol",
                "name": "reactionevent"
            },
            "title": "Adverse Reaction Event",
            "description": "Details about each adverse reaction event linked to an identified substance.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "b836ff20-b9b2-4b1d-a1a0-63ae293d8067",
                "3276057e-2230-4f3e-abf7-9a80d7be52b8",
                "15f017e2-cd87-4971-841e-92cf96af0c75",
                "83ec25f5-0389-4215-87a5-ba84d137b9d4",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "39e13db7-a730-421a-a600-ae0674060140",
                "c4ebb166-0d09-4499-beb3-627c3372168f",
                "dcb47b40-17ac-487f-8a99-0956157d2907",
                "621051c6-09fd-4982-8f96-07833f75aaa8"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "564b21e8-3132-4eb5-8124-65f54ceee5c2",
            "type": {
                "namespace": "ol",
                "name": "receivedby"
            },
            "title": "Received by",
            "description": "",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "5ef69814-cd40-4209-ba7a-04f966c2fd00"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "a2ffafb8-f6df-4b19-933e-02c35c54236d",
            "type": {
                "namespace": "ol",
                "name": "recoveryplan"
            },
            "title": "Recovery Plan",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "3c0320b0-93cf-4b16-8b16-3720feafff93",
            "type": {
                "namespace": "ol",
                "name": "referral"
            },
            "title": "Referral Information",
            "description": "",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "207f0ed8-2627-4c3d-84b0-8e3002d51e0b",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "f30b6660-800b-4ea4-bbaa-8e93871a2b27",
                "9ba6cd5e-a6d1-4e21-8065-e353de31855d",
                "4b30c32e-da3d-488b-ac52-d25484c8033e",
                "24cd6477-01c5-4f25-8453-904d8a5ce84d",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "9fe1654f-6b5f-43ea-be06-98c5e823b722",
            "type": {
                "namespace": "ol",
                "name": "referralrequest"
            },
            "title": "Referral / Request for Services",
            "description": "A request for services, or online referral information. ",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "39e13db7-a730-421a-a600-ae0674060140",
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a",
                "bf4f1c24-65f5-47c7-88d7-48aec1e4e591",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "07844126-651d-417f-9678-df3f909a7ef7",
                "e8f2b636-730c-44e1-b2ee-51e700397a16",
                "c8460593-7a12-450a-80ad-bc8e97018a0d",
                "b1e2bcd8-bd3d-42de-beed-d73d6bfaa09f",
                "35b4d146-4e7f-4806-b65b-0d790ba2efc7",
                "61592882-b700-42cd-95b7-715f312ece90",
                "6675a7e8-2159-41b1-9431-4053690fa3c9"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "503bc786-437c-4591-9e4e-64e7d4d1286a",
            "type": {
                "namespace": "ol",
                "name": "relative"
            },
            "title": "A relative (eg. brother, sister), to be used when the name is unknown.",
            "description": "",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "39e13db7-a730-421a-a600-ae0674060140",
                "dfe90a24-41ec-4b7d-8051-8bcbc81dc630"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "a094e89f-3b4f-4e98-9d2c-12e604ae9d6a",
            "type": {
                "namespace": "ol",
                "name": "releasedby"
            },
            "title": "Released by",
            "description": "Links together an officer/agency with someone they are releasing. (Person) released by (Authority).",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "c9739135-e5c7-4f0f-9967-f2312a2846d4",
            "type": {
                "namespace": "ol",
                "name": "reminder"
            },
            "title": "Reminders ",
            "description": "Building or facility reminders provided - unique, write-in format.",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "d94bc9ae-2017-4979-b297-09264cd1f0eb",
                "d9d04245-892d-4364-b3f0-e33b5eb3c28e",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "7756a017-d39d-4e05-80cc-9fdcfe100143",
            "type": {
                "namespace": "ol",
                "name": "remindersent"
            },
            "title": "Reminder Sent",
            "description": "Details about a reminder that has been sent",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "68c294ec-2b0c-449a-857c-397a92ca2a74",
                "39e13db7-a730-421a-a600-ae0674060140",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "2ff089c6-716d-44d9-8470-bfe9689eeacd",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "8ce0e7d0-8b57-4dba-8e96-664cb6d59f54",
            "type": {
                "namespace": "ol",
                "name": "rent"
            },
            "title": "Rent",
            "description": "Summary of housing rent and associated costs",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "0a4d8004-bbc9-4acd-af2e-6fd116b7e972",
                "4cdf2da9-088f-4b14-a391-00c06033817f",
                "074a66c3-e109-4a0f-b60a-05fe1200191e",
                "39e13db7-a730-421a-a600-ae0674060140",
                "dfce1de6-7968-450b-8523-4214509ccb31",
                "761568e8-7a18-4e96-8265-860d950e51d0",
                "cdf34be9-388b-4fd4-b329-7c33818205b3"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "93ef0f9d-1d75-47f1-b5a7-1ffbb5f482e7",
            "type": {
                "namespace": "ol",
                "name": "reproductivehistory"
            },
            "title": "Reproductive History / Overview",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "59832bb7-3e3a-4352-a155-ee806c6d21ff",
            "type": {
                "namespace": "ol",
                "name": "residence"
            },
            "title": "Residence",
            "description": "Residence details",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "14908e47-923a-4c87-8d94-5881bf871cc1",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "74fab868-c619-467c-aea1-0136a8eea20b",
            "type": {
                "namespace": "ol",
                "name": "residencelengthofstay"
            },
            "title": "Length of stay (residence)",
            "description": "The length of stay at a residence or housing situation.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "f9ac41fb-897e-4d0f-ac71-dac7eddc56fa",
                "0abf30c6-4da9-4ffa-9dbf-02ca1b2e0bb6",
                "4167e9dd-ae6f-49d6-a9ea-c38bddeb8901",
                "fee00dc4-6e57-421a-8414-18c956ee192f",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "cbc62d3d-4383-42df-b0df-2f9c6e392ffa",
            "type": {
                "namespace": "ol",
                "name": "resource"
            },
            "title": "Resource or supply information",
            "description": "Information related to material resources or supplies used",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "9b8f0010-d5e9-4ca0-9024-6d821d7075d6",
                "ae5bbe59-ab6d-43f9-8d69-386d8f85f818",
                "e274bded-fbce-46b9-b845-0a239c83956e",
                "39e13db7-a730-421a-a600-ae0674060140",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "aa29d6c3-1cb9-445f-b722-07f6a40efa31",
            "type": {
                "namespace": "ol",
                "name": "resultsin"
            },
            "title": "results in",
            "description": "An association which describes that one entity results in another. (Event) results in (Event).",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "5ef69814-cd40-4209-ba7a-04f966c2fd00"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "5911c3cb-2bd8-4aaa-bf16-9c024d5f32f9",
            "type": {
                "namespace": "ol",
                "name": "searchalert"
            },
            "title": "Search Alert",
            "description": "A saved search alert with an expiration date",
            "schemas": [],
            "key": [
                "6653a2e7-cb51-427a-bddb-dcae3cfb689c",
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65"
            ],
            "properties": [
                "08022a2a-9d50-461d-92b7-dc84b81106c4",
                "ba0b6825-154d-4142-a483-248169171eff",
                "4d5db4fe-a0c8-45f8-af6d-cd7cd4cab86c",
                "6653a2e7-cb51-427a-bddb-dcae3cfb689c",
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "507efa1b-0160-4df3-b6b0-f44514e2e7d6",
            "type": {
                "namespace": "ol",
                "name": "securityaccess"
            },
            "title": "Security Access",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "369051b0-1f54-4651-8c8c-4017f3882d0b",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "bf4f1c24-65f5-47c7-88d7-48aec1e4e591",
                "e274bded-fbce-46b9-b845-0a239c83956e",
                "970610a4-07b3-4600-b219-570978b5765c",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "dcb47b40-17ac-487f-8a99-0956157d2907",
                "39e13db7-a730-421a-a600-ae0674060140",
                "bda5e928-e9f3-4a8f-9e45-4c118d072b6a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "bb0191de-76c4-4756-bf85-142bb29bc274",
            "type": {
                "namespace": "ol",
                "name": "seizures"
            },
            "title": "Seizures",
            "description": "",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "ed3de637-df5d-47cf-bb91-9a8ee346a6ab",
                "28d5e08f-0d92-4c25-9f78-191d0632a11d",
                "174abcbc-b2eb-4de3-b001-0e70054b807f",
                "ab5f6d19-e395-4379-984d-25ee7850a6b1",
                "8dffa1f4-6ce4-4846-b704-a0ced7709a6b",
                "be3b91dc-f51e-4519-9a22-fc4092a700ae",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "782b8d93-af16-423c-ae6d-8841ac60d752",
            "type": {
                "namespace": "ol",
                "name": "sentence"
            },
            "title": "A sentence.",
            "description": "",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "0d240f48-9347-46f7-a79e-b11ffdece2a8",
                "55199d7d-b13e-4d7e-8e14-a50c7091942e",
                "6519f480-7aaf-496c-825b-3b325d12bb85",
                "8ae217a6-328c-40b9-8946-28c1d526748c",
                "e652629a-70e0-458a-ae9f-02ca600d0360",
                "0220af01-e45b-4d2c-b96f-bc16f058342d",
                "21f5b00c-284a-4b45-bc37-355649bbb4f0",
                "8538506a-3dba-4bb9-95b5-1e4ed9e00eb9",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "448c6ce4-d1db-4f21-9f5b-41f325fe4311",
                "2a45205e-703c-43eb-a060-921bf7245f6a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "c78c12ff-4c66-4ef6-8d57-74519cb15e72",
            "type": {
                "namespace": "ol",
                "name": "sentencecomponent"
            },
            "title": "Sentence component",
            "description": "One can be serving multiple sentences in a single jail term; the active sentence components are those which one is serving out at the moment. ",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "a2bfb6fb-c1ac-4343-9aff-87ad0f910a9e",
                "39e13db7-a730-421a-a600-ae0674060140",
                "3fa624b3-9e19-4a74-884f-882514c0dfc2"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "76677f67-c0bf-4db9-bc9c-c050828ba477",
            "type": {
                "namespace": "ol",
                "name": "sentencedwith"
            },
            "title": "Sentenced With",
            "description": "(Person) sentenced with (Sentence).",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "11725746-5ae7-49da-9ca0-f78afeb1f4be",
            "type": {
                "namespace": "ol",
                "name": "sentenceterm"
            },
            "title": "Sentence term",
            "description": "The details of a law enforcement sentence's term, including the minimum and maximum time.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "0abf30c6-4da9-4ffa-9dbf-02ca1b2e0bb6",
                "4167e9dd-ae6f-49d6-a9ea-c38bddeb8901",
                "fee00dc4-6e57-421a-8414-18c956ee192f",
                "621051c6-09fd-4982-8f96-07833f75aaa8",
                "39e13db7-a730-421a-a600-ae0674060140",
                "7b6b45e1-5df2-4fad-9041-bde85ebbb83c",
                "3703fbfc-42f7-4d82-9e3a-4d6bd0074e11",
                "70d2ff1c-2450-4a47-a954-a7641b7399ae",
                "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                "f9ac41fb-897e-4d0f-ac71-dac7eddc56fa"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "217df3df-1ff4-47fc-a01a-0d13e9aeb976",
            "type": {
                "namespace": "ol",
                "name": "shortnessofbreath"
            },
            "title": "Shortness of Breath",
            "description": "",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "ed3de637-df5d-47cf-bb91-9a8ee346a6ab",
                "28d5e08f-0d92-4c25-9f78-191d0632a11d",
                "174abcbc-b2eb-4de3-b001-0e70054b807f",
                "ab5f6d19-e395-4379-984d-25ee7850a6b1",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "2be328f3-58b0-4575-8fde-2d0f8e6aa8ee",
            "type": {
                "namespace": "ol",
                "name": "sleep"
            },
            "title": "Sleep / Sleep Habits",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "f105dd1b-1c71-4042-8ea8-53013070d9da",
                "39e13db7-a730-421a-a600-ae0674060140",
                "cf83fe38-1661-41b1-97e9-6f4f732b034c",
                "a2bfb6fb-c1ac-4343-9aff-87ad0f910a9e",
                "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "f12a9c1e-c81c-46fc-9974-7344fb6046d8",
                "2b6417e4-486b-4411-bd4f-0073ad68668c",
                "17407675-75d7-472b-82ba-c7d630d3bd22",
                "7ed19ef2-a1ed-48e3-b347-18a885914bee",
                "3e93de4e-8344-4d08-a9ef-f967d1e0094d",
                "860fed9c-f446-4492-926b-d87d9daffd50",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "275e71f9-15b2-4107-8a15-d28fcedfa7cf",
                "6436b8ba-a113-4fed-8cde-2e00c6a47253"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "4eafe435-e02e-42fc-ae9e-52581ab58037",
            "type": {
                "namespace": "ol",
                "name": "socialhistory"
            },
            "title": "Social History",
            "description": "Social History Observations define the patient's occupational, personal (e.g., lifestyle), social, familial, and environmental history and health risk factors that may impact the patient's health. https://www.hl7.org/fhir/terminologies-valuesets.html https://www.hl7.org/fhir/observation.html",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "751e502f-d42a-46c6-8a6a-30979f5c5709",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "58929d33-1c01-42f1-891c-f3e55c4d4fc4",
                "3cec8003-3a0d-4a14-af37-1a3e255c8cf7",
                "f56c7769-2d4a-4d50-8788-60d437b120d9",
                "bb2b71ec-d8b7-465f-8f2c-b62c7aa8f1ba",
                "bf4f1c24-65f5-47c7-88d7-48aec1e4e591",
                "c8460593-7a12-450a-80ad-bc8e97018a0d",
                "dcb47b40-17ac-487f-8a99-0956157d2907",
                "621051c6-09fd-4982-8f96-07833f75aaa8"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "94737ff0-0928-4f50-8f5c-bd0106aae838",
            "type": {
                "namespace": "ol",
                "name": "statushistory"
            },
            "title": "Status History",
            "description": "see status history in  http://hl7.org/fhir/episodeofcare-definitions.html  http://hl7.org/fhir/valueset-episode-of-care-status.html",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "96e27bda-2ee0-444a-b5ec-9c9bc761887f",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "bf4f1c24-65f5-47c7-88d7-48aec1e4e591",
                "c8460593-7a12-450a-80ad-bc8e97018a0d",
                "caf53ac1-30f2-492a-a284-65eef9ed7827"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "80c86a96-0e3f-46eb-9fbb-60d9174566a5",
            "type": {
                "namespace": "ol",
                "name": "study"
            },
            "title": "Study Data Collection Event",
            "description": "",
            "schemas": [
                {
                    "namespace": "cafe",
                    "name": "chronicle"
                }
            ],
            "key": [
                "ee3a7573-aa70-4afb-814d-3fad27cda988"
            ],
            "properties": [
                "70d2ff1c-2450-4a47-a954-a7641b7399ae",
                "0011bbfe-d5d4-4f88-97a8-cdeb821deb6f",
                "ee3a7573-aa70-4afb-814d-3fad27cda988",
                "6a1f7cf6-80eb-4fe9-a9f4-49cad15c6154",
                "c502df5b-ec63-4f15-b529-d38695366c75",
                "54f64f11-9c4d-4701-897b-630ffeb94a21",
                "06083695-aebe-4a56-9b98-da6013e93a5e",
                "e8f9026a-2494-4749-84bb-1499cb7f215c"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "34aeaca4-d424-43cd-a3b4-f2032d583280",
            "type": {
                "namespace": "ol",
                "name": "subjectof"
            },
            "title": " is subject of",
            "description": "(Person) is subject of ...",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "04186eb1-b728-4928-a714-f9c7022406e6",
            "type": {
                "namespace": "ol",
                "name": "subscription"
            },
            "title": "Subscription",
            "description": "An agreement to receive or participate in something",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "54fa6acb-bd3e-4849-85b7-4eadaf33e112",
                "52d3afc5-0ce1-4b76-91cb-f5f68e39b110",
                "7fa9418f-03dc-4fb2-acc0-826b927d902d"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "b1a52c96-17d5-495a-98b7-22128b97059f",
            "type": {
                "namespace": "ol",
                "name": "substance"
            },
            "title": "Substance use, drug abuse, and addiction entity",
            "description": "Substance use, drug abuse, and addiction entity. TYPE: options should be Options: (1) alcohol; (2) opioids; (3) cannabis; (4) sedatives, hypnotics, or anxiolytics; (5) cocaine; (6) other stimulants; (7) hallucinogens; (8) nicotine; (9) inhalants; (10) other psychoactive substances.                                                                         For subtypes, the following can be included: OPIOIDS: codeine, hydrocodone, morphine, oxycodone, hydromorphone, fentanyl, methadone, heroin, other. CANNABIS: pot, spice  SEDATIVES, HYPNOTICS, ANXIOLYTICS: benzos; COCAINE: cocaine, crack; STIMULANTS: crystal methamphetamine; amphetamine; prescription amphetamines (Adderall Dexedrine Vyvanse Generic ADHD medications) Methamphetamine Ecstasy Ritalin or Concerta Khat Strattera .  HALLUCINOGENS: ayahuasca, DMT, D-lysergic acid diethylamide (LSD), peyote (mescaline), and 4-phosphoryloxy-N,N-dimethyltryptamine (psilocybin). NICOTINE: cigarrettes, tobacco products, vape pens; INHALANTS:  solvents (liquids that become gas at room temperature) aerosol sprays gases nitrites (prescription medicines for chest pain).",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "dcb47b40-17ac-487f-8a99-0956157d2907",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "42e4ac4e-4634-45fa-a6d6-806d48b041be",
                "606c1d99-7240-4982-8f2f-62f71b99453b",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "b1fabec9-3fe9-4e09-92a1-e73582d6a2a3",
                "2d975f4a-a244-4651-909c-3f4eb7ec27cc",
                "f16be3da-1066-4702-9dd0-ccb3a887a4e2",
                "d3bd803c-9dd6-4cf2-b6f7-8a66017d1c97",
                "448c6ce4-d1db-4f21-9f5b-41f325fe4311",
                "a7ecc119-6f7f-4603-b9ec-68b9141ea114",
                "b836ff20-b9b2-4b1d-a1a0-63ae293d8067",
                "c1f22a8f-0019-4446-83a9-0917b1e838fd",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "ea9c6450-b985-4a82-b040-df539404737f",
                "d14c31a3-8313-486b-8db2-94bbf21fa362",
                "fa1cb70f-c5f4-481f-a9ad-561eb5d7a41a",
                "08022a2a-9d50-461d-92b7-dc84b81106c4",
                "03b5cd4e-2519-4da6-98d6-9e5c692739f5"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "c77f715a-85e3-4bb4-a25f-850e568dd068",
            "type": {
                "namespace": "ol",
                "name": "suicidalideation"
            },
            "title": "Suicidal Ideation",
            "description": "",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "ed3de637-df5d-47cf-bb91-9a8ee346a6ab",
                "28d5e08f-0d92-4c25-9f78-191d0632a11d",
                "174abcbc-b2eb-4de3-b001-0e70054b807f",
                "ab5f6d19-e395-4379-984d-25ee7850a6b1",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "d6ac78c5-220d-43a3-9c2e-97ac782cfc3e",
                "0ec5a29a-23b4-4634-8e9a-047f345beea2",
                "15eacd55-8f34-4af4-a464-9b9ea5420929",
                "d5dd02a7-d4c4-497a-8301-f95430defa52",
                "aa2bb9ea-8f1c-4a44-92bd-0358c9d3a4e1",
                "5f9b4152-3c4b-4201-a5db-e6c24504307a",
                "2f96922e-dcaf-42f1-953a-ad650f2282b1",
                "e671a273-d540-4f4e-a428-ce7f0b2f7129"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "4dde8705-d19f-49b8-bd24-9ad55af9df22",
            "type": {
                "namespace": "ol",
                "name": "suicideriskassessment"
            },
            "title": "Suicide Risk Assessment (NSPL)",
            "description": "Guidelines on questions for NSPL Centers as to the minimum requirements for the\ncore principles and subcomponents of each Center\u2019s suicide risk assessment instrument. An affirmative answer to suicidality triggers a full risk assessment.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "32b2d6fb-b291-4d8c-9787-a469a8ff2e6f",
                "745948ac-7d73-443e-9a27-a7c8753b8a44",
                "55d6b42d-ed96-4885-b955-999b9ffa61a6",
                "8e54bdc6-14f8-408e-9236-96864c0f776b",
                "72e3a73c-8702-444d-8eba-80c05e9842cd",
                "4b550eed-c818-42ee-88a0-14227367c113",
                "087d347d-e6e1-4132-9641-6dd351e812e6",
                "9d41391d-1082-43d6-9420-ea086effcfa2",
                "39e13db7-a730-421a-a600-ae0674060140",
                "ba8963e9-d8e6-4e7a-b10f-95119d64c33f",
                "0afc55e9-671e-480d-a85e-d80c09657a2f",
                "d352f2e9-f959-4c5d-9a30-588888204c5e",
                "f5fd993f-57f4-4d5b-832f-55dddd5b809e",
                "6906bf7c-0644-4686-9013-d20a804ddab4",
                "79003692-f147-4532-892d-25f18998f6a8",
                "6f92cdf1-3e5f-412d-ae44-ccaa4239344e",
                "32a444d0-954a-47fe-a76c-c4ca50590f73",
                "1d82cd84-d24e-4bec-a7c4-10bb6f387e49",
                "2f96922e-dcaf-42f1-953a-ad650f2282b1",
                "cf83fe38-1661-41b1-97e9-6f4f732b034c",
                "beb63b1e-f0c0-467b-9d2c-7a0d7e5eb138",
                "eb5e3bd2-8238-4434-81d0-ca3d6cbbafc7",
                "b79a48cd-1310-4d9f-8fd5-d84db146e930",
                "853aab80-fa07-4b4e-b322-7e005414fa06",
                "2e0555ab-6419-4309-ae66-2577bee94a8f",
                "272cb402-df13-433a-8d32-61bf763b2ff3"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "a5a5d8a0-4433-422c-b096-719b8c573f29",
            "type": {
                "namespace": "ol",
                "name": "survey"
            },
            "title": "Questionnaire / Survey",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "36cd21d7-4c91-4450-90e7-918df817e4d1",
            "type": {
                "namespace": "ol",
                "name": "surveymetadata"
            },
            "title": "Survey Metadata (Individual)",
            "description": "Metadata related to an individual taking a survey, assessment, or questionnaire.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "dcb47b40-17ac-487f-8a99-0956157d2907",
                "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                "8e65eca6-a3d1-4c05-885f-cc3156257139",
                "39e13db7-a730-421a-a600-ae0674060140",
                "369051b0-1f54-4651-8c8c-4017f3882d0b",
                "5bf7f587-c75c-46f1-9935-edb490e8b30e",
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                "9e8d3210-8fb6-4532-b94a-cd746c8c57d6",
                "f2787ef1-8a9d-4297-9189-e78b12b76daf",
                "2956a11f-b787-4fe9-b396-4f00b1bfecd8",
                "d6c150b5-fff6-410f-a090-0973950bbe24"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "dab7baf9-5d6f-477a-a70f-f3c8a45c38e6",
            "type": {
                "namespace": "ol",
                "name": "surveyresponse"
            },
            "title": "Survey Response",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "3e93de4e-8344-4d08-a9ef-f967d1e0094d",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "03c9d50f-c712-461f-83c1-7e5cbb09d1c8",
            "type": {
                "namespace": "ol",
                "name": "surveytoolmetadata"
            },
            "title": "Metadata on a questionnaire / survey tool / assessment",
            "description": "",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "d6c150b5-fff6-410f-a090-0973950bbe24"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "dc429aee-68fc-4ba2-b943-316ed83dee60",
            "type": {
                "namespace": "ol",
                "name": "symptom"
            },
            "title": "Symptom or Sign",
            "description": "Reported observation of a physical or mental disturbance in an individual. Use to record details about a single episode of a symptom or reported sign in an individual, as reported by the individual, parent, caregiver or other party. It may be recorded by a clinician as part of a clinical history record as reported to them, observed by the clinician or self-recorded as part of a clinical questionnaire or personal health record.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "caf53ac1-30f2-492a-a284-65eef9ed7827",
                "39e13db7-a730-421a-a600-ae0674060140",
                "c4ebb166-0d09-4499-beb3-627c3372168f",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "2a9c1cae-e3a8-437f-9fc3-ecfb3d43e3bf",
                "d3bd803c-9dd6-4cf2-b6f7-8a66017d1c97"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "00e752c4-b042-45ae-85c1-c5bed5c23e03",
            "type": {
                "namespace": "ol",
                "name": "temporaryrelease"
            },
            "title": "Temporary Release",
            "description": "A temporary release from jail or prison.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "92ecb196-23f1-4ab4-a8c3-084ccbcc151a",
                "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "9fffab21-b102-4d1f-8975-60bd2161d86e",
            "type": {
                "namespace": "ol",
                "name": "therapy"
            },
            "title": "Therapy observations (generated via non-interventional treatment protocols).",
            "description": "Observations generated by non-interventional treatment protocols (e.g. occupational, physical, radiation, nutritional and medication therapy)",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "c5d6243c-aefa-4c6d-8494-938d251a9af1",
            "type": {
                "namespace": "ol",
                "name": "timetohousingloss"
            },
            "title": "Time to housing loss",
            "description": "The time it has been since loss of housing or living arrangements, usually in days.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "f9ac41fb-897e-4d0f-ac71-dac7eddc56fa",
                "0abf30c6-4da9-4ffa-9dbf-02ca1b2e0bb6",
                "4167e9dd-ae6f-49d6-a9ea-c38bddeb8901",
                "fee00dc4-6e57-421a-8414-18c956ee192f",
                "621051c6-09fd-4982-8f96-07833f75aaa8",
                "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "da8043c0-5377-40b7-bc9e-a5306bfef909",
            "type": {
                "namespace": "ol",
                "name": "toremove"
            },
            "title": "toremove",
            "description": "",
            "schemas": [],
            "key": [
                "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
            ],
            "properties": [
                "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "4c6bca41-6660-45ab-ab8c-7f88cd9d6d70",
            "type": {
                "namespace": "ol",
                "name": "unit"
            },
            "title": "A unit",
            "description": "",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "3a98a633-3a0f-49db-9b5b-64508945f533",
            "type": {
                "namespace": "ol",
                "name": "urinalysis"
            },
            "title": "Urinalysis (test results)",
            "description": "Values and flags for abnormal results of urinalysis screening. Flags should be based on relevant value property and reference scales, when available. ",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "449da1bd-80a0-40a9-a7f6-03303bcd7a47",
                "23241e94-d7c0-4111-bea5-28600e45242f",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "e33b8a68-eaad-46be-9fc2-90b4cc871728",
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "56d54f9d-9d1a-49d4-a220-ea03955eb5a5",
                "b9e4901c-ae6c-4e6e-b456-9511f1e71934",
                "94a81a5b-450f-4e7d-8b43-09eeecad3e8e",
                "c1f1b235-6964-44c8-92af-bf55725db94e",
                "53a91fa5-4b98-4efa-b6bb-62537791eb23",
                "71bd7c15-6abe-49eb-be27-2997d8d02056",
                "d0c0240d-2452-4fbf-b4be-6efd306658aa",
                "5ed4db49-e880-48be-b432-b47ee11fec2d",
                "c443abc0-4b3d-4fde-a977-9de7d6c5ff0d",
                "f6d887dc-e843-46bb-b668-2bbc1158fa5d"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "3c6dad54-c4b4-4dfb-bd8b-d8dd56e342ec",
            "type": {
                "namespace": "ol",
                "name": "vehicle"
            },
            "title": "A vehicle.",
            "description": "The record of a vehicle.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "43a6df96-1cb8-4daa-9a82-f9361b8777c7",
                "ae27e6cd-701b-4952-b3ee-4ecbeeeb2eea",
                "8c798836-862f-4a84-af8b-0c982b11dfae",
                "93b8b60b-bcfc-4778-99b8-8c57ce6cb502",
                "f9398bdd-3f01-4628-9e3d-1c0bf7ed098e",
                "5470892c-00f4-4511-ab04-495b3061afa3",
                "39e13db7-a730-421a-a600-ae0674060140",
                "539d322d-41d0-4596-aceb-17551af9b0ae",
                "592062ad-d868-4bcf-8ee0-daa1331fc138",
                "9177cb91-4596-4efc-b9f2-2335528c3376",
                "686bb9d4-766d-4ff5-bf63-a0d43bd6e9fc",
                "afe0e263-adf3-4803-9053-2566f0220075",
                "0f95049c-b668-49b1-bf32-f26835471b0a",
                "881c2601-f3b9-40cd-bb9b-86e811182156",
                "28d661b8-a45a-41b6-aec4-ed9988fa28dc",
                "e90a306c-ee37-4cd1-8a0e-71ad5a180340",
                "b916c940-9e7f-434d-b502-05fbdc2845b2",
                "9b8f0010-d5e9-4ca0-9024-6d821d7075d6",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "f2dbdc90-bf80-43d4-b015-196864ac4045",
                "32409c03-12eb-4d11-89ea-bf445de05670"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "60f91c1e-a11a-49dd-ba35-4f386a657122",
            "type": {
                "namespace": "ol",
                "name": "violentbehavior"
            },
            "title": "Violent Behavior",
            "description": "Violent behavior (not self-directed or self-harming behavior)",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "01a38115-3bb7-49a1-8003-a32ae02ad283",
                "20ee1d1d-b513-4769-978d-f313571cd1f5",
                "15b7e438-b029-4953-a813-e26f7a6546d8",
                "13628582-3512-49b4-9db9-860e991f289c",
                "30ed2183-c972-4035-a3c7-11896e1adf71",
                "14c86462-c720-416b-b664-032c62cada16",
                "3817e465-4b2a-45e9-809b-df301a1d89eb",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "215f54f1-830e-4edb-bdc5-d4938f4a3e04",
            "type": {
                "namespace": "ol",
                "name": "vitalsigns"
            },
            "title": "Vital Signs",
            "description": "A set of clinical measurements that measure the body's basic functions, specifically pulse rate, temperature, respiration rate, and blood pressure, that indicate the state of a patient's essential body functions.",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "9a55818f-eb07-4590-9db2-3fcea2477da5",
                "dc8d46a2-fe1b-4066-8060-b31697f8897a",
                "39fb55ac-8741-4ace-b67a-1770a609be3b",
                "89168ef4-3251-4f80-a04a-040fe6cbd6f6",
                "542d4049-88bf-4755-856a-283d79a2b129",
                "fc8c40bc-2f17-42b7-998a-014dacbab8f3",
                "d1736890-922a-4408-acc0-beffaa47e272",
                "2e852b34-9b43-402b-800a-ad7178481fd2",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "8e65eca6-a3d1-4c05-885f-cc3156257139",
                "fa1cb70f-c5f4-481f-a9ad-561eb5d7a41a",
                "e671a273-d540-4f4e-a428-ce7f0b2f7129",
                "2a45205e-703c-43eb-a060-921bf7245f6a"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "47f30785-0826-4428-9809-ada44515f8e1",
            "type": {
                "namespace": "ol",
                "name": "vocabulary"
            },
            "title": "Vocabulary assessment",
            "description": "Vocabulary entity",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "80be96e6-58e5-4015-a851-312c9c2327bd",
                "39e13db7-a730-421a-a600-ae0674060140",
                "e83b128d-ca76-4eb7-b565-0d1637b31329",
                "64fba81a-2348-4ad8-9f21-58cb8778f858",
                "f9a48c32-6da6-4333-b6cc-aace2e8c5923"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "661a9417-99df-4231-b39e-2b172cd1593a",
            "type": {
                "namespace": "ol",
                "name": "warrant"
            },
            "title": "Warrant",
            "description": "A law enforcement warrant and its details.",
            "schemas": [],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140",
                "2a9c1cae-e3a8-437f-9fc3-ecfb3d43e3bf",
                "fc486634-adbf-4108-aa0b-65225cad5618",
                "f43dccfe-7dbe-425a-a2c0-eb104daba964",
                "2a45205e-703c-43eb-a060-921bf7245f6a",
                "ea0c61fa-3af6-433b-a27a-bc9da638182e",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "58929d33-1c01-42f1-891c-f3e55c4d4fc4"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "27d58f4f-0c0c-47c5-9d27-cb25e9a98bbf",
            "type": {
                "namespace": "ol",
                "name": "weapon"
            },
            "title": "Weapon",
            "description": "Description of weapons involved in various events.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "39e13db7-a730-421a-a600-ae0674060140",
                "c922e41e-8444-4cf2-82d1-99e62f94e479",
                "43ad7228-fc0e-4b59-99c4-20d5ffc17536",
                "2a9c1cae-e3a8-437f-9fc3-ecfb3d43e3bf"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "9912f936-b36c-458d-aa13-61c914df1ed2",
            "type": {
                "namespace": "ol",
                "name": "worksat"
            },
            "title": "(Person) works at (agency/organization/...).",
            "description": "",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                },
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "properties": [
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "05aa5c8b-7410-4316-8511-ec4ed7734e91",
            "type": {
                "namespace": "ol",
                "name": "zone"
            },
            "title": "Zone (location)",
            "description": "Zone (location)",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "criminaljustice"
                }
            ],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "58929d33-1c01-42f1-891c-f3e55c4d4fc4",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                "4c363a5f-9224-4857-b6b6-3289c6591898",
                "39e13db7-a730-421a-a600-ae0674060140"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "2150bad7-7c4f-47fc-9f9c-db6cbed102df",
            "type": {
                "namespace": "patient",
                "name": "visit"
            },
            "title": "Patient Visit",
            "description": "A patient visit",
            "schemas": [],
            "key": [
                "ee3a7573-aa70-4afb-814d-3fad27cda988"
            ],
            "properties": [
                "16e93eed-4aa4-43bd-810c-ac03e5006c1d",
                "36fafc9e-1320-4d16-b0f3-d592f4772f58",
                "cc80d2a2-d2ad-40c0-8c2d-f0a6566a0124",
                "f30b6660-800b-4ea4-bbaa-8e93871a2b27",
                "634319a4-8e26-46ae-9e73-68a9a5cf8753",
                "1ae3a121-f61b-43b4-8ca4-b95dd503fa9c",
                "f64e1a87-b9e0-4634-af59-30eddcc9c7b8",
                "f369dbc0-1939-4eb6-8a18-bd2c6ab4f03e",
                "ac1c6b8c-d2ea-417c-9625-e4d8ccb1fa11",
                "32eba813-7d20-4be1-bc1a-717f99917a5e",
                "16978972-0c8c-4d3d-83fc-6ba70840ed85",
                "c8a675e0-c45f-4343-a538-86d609223bd0",
                "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                "63c62fb4-aa1e-4393-bc7e-b8a53986ed0f",
                "ee3a7573-aa70-4afb-814d-3fad27cda988"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "ab43ae3f-e83a-45e3-9ba4-eace79b589ae",
            "type": {
                "namespace": "personnel",
                "name": "employer"
            },
            "title": "Employer Information",
            "description": "Collection of Employer Information",
            "schemas": [],
            "key": [
                "115a4e59-ce2b-4b7f-8d64-2a3b21ca11e5",
                "d6b6b2b3-794f-4d6d-9ce1-a03ca9712046"
            ],
            "properties": [
                "25431c60-6c26-4210-a422-569c5226ba7e",
                "e96f4905-e323-47b6-be43-2a356fd82e08",
                "d6b6b2b3-794f-4d6d-9ce1-a03ca9712046",
                "115a4e59-ce2b-4b7f-8d64-2a3b21ca11e5",
                "32eba813-7d20-4be1-bc1a-717f99917a5e",
                "6a85d1e1-fda5-4c9c-9e2e-2dda4ed8d3d1",
                "132820b9-6f20-40c8-945f-9ca2ec45e233",
                "314d2bfd-e50e-4965-b2eb-422742fa265c",
                "f21feaa5-f932-4a78-88af-b44365efefba"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "963b597b-b28d-4f59-b2e6-4d443499e464",
            "type": {
                "namespace": "publicsafety",
                "name": "callforservice"
            },
            "title": "Call For Service (CFS)",
            "description": "A dispatch Call For Service",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "2080c6bb-5c37-4eb2-b629-3fe09b665d42"
            ],
            "properties": [
                "2080c6bb-5c37-4eb2-b629-3fe09b665d42",
                "9f91239a-9614-4a70-b36d-e70c5da6fdaa",
                "6335ec93-dd81-4106-b44b-faafce66b209",
                "10cefc62-376a-48f3-b50d-8bad86bcf27a",
                "68199414-1903-4d4c-ae39-7609f9c997b4",
                "b9170d9b-8265-452c-b9e8-ebeab5f7556f",
                "919bfdc2-5da7-4e73-8418-081504e14309",
                "88626667-643d-4735-a2de-6471444f9b55",
                "21c3cfd0-db1c-4641-b248-b3fbd7142658",
                "cdad2fdb-5696-4676-8afa-144f09aa011e",
                "10839c42-2252-4630-ab22-a9752333a601",
                "323de7c8-a374-4e45-ab0d-ff8b7fabe094",
                "c730490e-8a36-481d-ae11-84aa76e97a38",
                "c938eb9b-15da-4b87-bf0a-006e290db4ec",
                "71fe0840-fb24-4867-a23c-47a96c517141",
                "88acd844-6aa1-4256-995c-8b67d2dd8201",
                "a9c96e5a-fb7c-44d3-ad32-44b25cdfdbd3",
                "c7cdf0a9-db29-4ffc-96f7-52bcb73750ab",
                "b4537358-a051-417a-832a-045d59c13b7f",
                "b8fcea6c-fb18-4050-bb54-2fa86ea4dae1",
                "496de432-d25e-45b8-b252-682a588bfc32",
                "e785d73d-5ae9-4880-988b-6ce6b364b814",
                "13c7f654-085d-4cd0-9db2-674df9c69dda",
                "b916c940-9e7f-434d-b502-05fbdc2845b2",
                "a773c790-6564-4e5a-8f83-fbb0f45bd7a9",
                "00e11d1a-5bd7-42bd-89a5-a452d4f6337e",
                "9d30c278-13cd-47c5-9e20-d677facced23",
                "c97555a0-ed79-4944-a000-ab961da3ab48",
                "2904c8ac-61d5-4075-a952-a761ae70242d",
                "8cf0d1a8-439a-402d-85c3-572a93e07ff8",
                "7008752d-b95f-4557-ac7a-17deb450bf74",
                "ccb90ce4-4343-4478-bfc5-d7167a45557f",
                "3f52e7f5-57fa-4a29-93bb-6fe5e7e3f327",
                "01c9ad01-1403-4d35-8764-e15c048a38e5",
                "0e1bdba4-7dc9-4c48-a147-996573fa6fcd",
                "c16ab352-3099-4579-b900-40d54fec44c6",
                "736818e8-0ad9-4c83-8b53-3e00005fed2b",
                "0d240f48-9347-46f7-a79e-b11ffdece2a8",
                "1256d3f4-2a83-44d0-8b1d-389803b28314",
                "0b68c2cd-4c03-43e6-b1c8-fe6187b0eae3",
                "6675a7e8-2159-41b1-9431-4053690fa3c9"
            ],
            "propertyTags": {
                "0b68c2cd-4c03-43e6-b1c8-fe6187b0eae3": [
                    "timeline",
                    "eventdate"
                ],
                "10839c42-2252-4630-ab22-a9752333a601": [
                    "breadcrumbs"
                ],
                "b4537358-a051-417a-832a-045d59c13b7f": [
                    "breadcrumbs"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "ed89706e-a4e4-44e4-983e-56035e2fd160",
            "type": {
                "namespace": "publicsafety",
                "name": "checkin"
            },
            "title": "Check-In",
            "description": "Details collected from a phone check-in.",
            "schemas": [],
            "key": [
                "6e21f4c9-13e9-452e-8f18-d116276aa58d",
                "233c15b4-8154-4969-9b9b-ec6028621bfa"
            ],
            "properties": [
                "6e21f4c9-13e9-452e-8f18-d116276aa58d",
                "233c15b4-8154-4969-9b9b-ec6028621bfa",
                "cebc61bf-9052-4e11-99af-3aa3113688a8",
                "6675a7e8-2159-41b1-9431-4053690fa3c9"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "20ae81b5-7574-460f-89be-a66e10ffa67e",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchzone"
            },
            "title": "Dispatch Zone",
            "description": "Details on a dispatch zone for a call for service.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "bce1d15e-25c6-414f-ba0f-74bf22d13028"
            ],
            "properties": [
                "16eae16e-b1f1-404c-94af-a644f5ca4cc2",
                "1e599c37-727e-45b8-a0be-310e095cab62",
                "458118b4-c6f9-4c48-84a5-388082e4edf8",
                "85806174-c305-483d-8e18-1bf8f6d5ca39",
                "bca0e150-9965-4e9f-9508-1efc4fdcf16e",
                "bce1d15e-25c6-414f-ba0f-74bf22d13028",
                "a81d9aa4-a664-4efc-ab19-87612a3cd198"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "1bbc14f8-06cf-4cb0-a103-68ba9df08867",
            "type": {
                "namespace": "publicsafety",
                "name": "personnel"
            },
            "title": "Justice-Involved/Public Safety Employees",
            "description": "Someone employed in criminal justice (i.e., officer, communications, jail guard) or public safety (i.e., fireman, EMT).",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "9f97811b-fef5-434d-b3b2-9e72171a66b8"
            ],
            "properties": [
                "9f97811b-fef5-434d-b3b2-9e72171a66b8",
                "a046320f-02a0-4443-b5a4-b6a9928c334b",
                "8ae3214e-7e4f-47e8-b22f-adc718e60a5c",
                "aa3f9865-e882-4363-9cef-5145f787b114",
                "9d2d4a0e-26af-46c8-b366-fd872dbc5506",
                "b916c940-9e7f-434d-b502-05fbdc2845b2",
                "a773c790-6564-4e5a-8f83-fbb0f45bd7a9",
                "bf828c73-2ea9-4d4e-be40-ae9702e64b21",
                "43a6df96-1cb8-4daa-9a82-f9361b8777c7",
                "5ea6e8d5-93bb-47cf-b054-9faaeb05fb27",
                "8293b7f3-d89d-44f5-bec2-6397a4c5af8b",
                "ac37e344-62da-4b50-b608-0618a923a92d",
                "f0a6a588-aee7-49a2-8f8e-e5209731da30",
                "9b55f541-416c-4ab2-8d6e-b30e547eecb4"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "9c3153bb-e5e2-495c-88c4-fa4185cca7f8",
            "type": {
                "namespace": "publicsafety",
                "name": "pretrialstatuscaseprocessings"
            },
            "title": "Pretrial Status Case Processings",
            "description": "Pre-trial cases",
            "schemas": [],
            "key": [
                "28bf3e65-3497-4fe3-a080-b758caf65053",
                "4cd3b524-8c33-4efe-8bbc-09738a06facf",
                "5189cd68-f067-409f-a1b1-6fb5e15450b1",
                "63814ef1-a61d-4a65-981b-9e9c1c1de138",
                "674aaa3e-dc89-4c58-abb1-d1f9fc15fa58",
                "7764c7fe-f2fc-40dc-86cc-866945b6a9af",
                "9a54d4e0-11a0-4edd-b5b1-25236de4f7e1",
                "9af790d1-d49d-425f-82e5-2a933a171bc1",
                "a4a4223f-f400-45ce-a093-9b6672ba4dc0",
                "f7c38fcd-e815-4f16-90ee-13932336265d"
            ],
            "properties": [
                "28bf3e65-3497-4fe3-a080-b758caf65053",
                "4cd3b524-8c33-4efe-8bbc-09738a06facf",
                "5189cd68-f067-409f-a1b1-6fb5e15450b1",
                "63814ef1-a61d-4a65-981b-9e9c1c1de138",
                "674aaa3e-dc89-4c58-abb1-d1f9fc15fa58",
                "7764c7fe-f2fc-40dc-86cc-866945b6a9af",
                "9a54d4e0-11a0-4edd-b5b1-25236de4f7e1",
                "9af790d1-d49d-425f-82e5-2a933a171bc1",
                "a4a4223f-f400-45ce-a093-9b6672ba4dc0",
                "f7c38fcd-e815-4f16-90ee-13932336265d",
                "cec17b62-2821-4701-ab0b-1bae728d52de",
                "2e12197d-d36f-49bd-890f-50acc04b6bdd",
                "f43dccfe-7dbe-425a-a2c0-eb104daba964",
                "88f6294a-8b73-45e3-a0ec-8ebfb75a930e",
                "5d37978a-b658-462a-8903-4a9a2d2d69e3",
                "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                "24c003bb-34cf-4fa8-899a-4bc8ec523296"
            ],
            "propertyTags": {
                "2e12197d-d36f-49bd-890f-50acc04b6bdd": [
                    "timeline",
                    "eventdate"
                ],
                "cec17b62-2821-4701-ab0b-1bae728d52de": [
                    "breadcrumbs"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "19bf1241-e6c0-4eee-af3d-9ef92756546c",
            "type": {
                "namespace": "publicsafety",
                "name": "releaserecommendation"
            },
            "title": "Release Recommendation",
            "description": "A person's pre-trial release recommendation",
            "schemas": [],
            "key": [
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "properties": [
                "3a3973a3-161d-4601-a064-ff9015cb29f6",
                "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
            ],
            "propertyTags": {
                "3a3973a3-161d-4601-a064-ff9015cb29f6": [
                    "breadcrumbs"
                ]
            },
            "category": "EntityType",
            "shards": 3
        },
        {
            "id": "e2089bf9-9472-4f5a-bc64-7f0ca3adf966",
            "type": {
                "namespace": "publicsafety",
                "name": "unit"
            },
            "title": "Unit",
            "description": "A police patrol, fire, or other type of unit.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "key": [
                "c2e168ac-ded5-4f00-b282-e2896e394ab1"
            ],
            "properties": [
                "56b657d7-22c1-4a69-911c-9d7bb915f11f",
                "b916c940-9e7f-434d-b502-05fbdc2845b2",
                "a773c790-6564-4e5a-8f83-fbb0f45bd7a9",
                "c2e168ac-ded5-4f00-b282-e2896e394ab1"
            ],
            "propertyTags": {},
            "category": "EntityType",
            "shards": 3
        }
    ],
    "namespacesOrder": null,
    "propertyTypes": [
        {
            "id": "ee619fe4-c2e8-4f30-8f37-90e3ba843ca4",
            "type": {
                "namespace": "OPENLATTICE_AUDIT",
                "name": "DETAILS"
            },
            "title": "Details",
            "description": "Any details about the event being logged.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a98b2c04-3f18-4d4e-aace-338145bd8416",
            "type": {
                "namespace": "OPENLATTICE_AUDIT",
                "name": "TYPE"
            },
            "title": "Type",
            "description": "The type of event being logged.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c9309ba8-a674-48c5-bfee-8bb797f9fe31",
            "type": {
                "namespace": "arrestedin",
                "name": "id"
            },
            "title": "Arrested In ID",
            "description": "Unique ID for arrested in association.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4b28408e-78e9-4d32-967e-e1ad8e26027f",
            "type": {
                "namespace": "bhr",
                "name": "accessToWeapons"
            },
            "title": "Access To Weapons (Y/N)",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "31ab7160-6a8b-46fa-aa9c-01d9b3f11806",
            "type": {
                "namespace": "bhr",
                "name": "accessibleWeaponType"
            },
            "title": "Accessible Weapon Type",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6b438142-adda-4720-85dc-5a069fe8f00f",
            "type": {
                "namespace": "bhr",
                "name": "address"
            },
            "title": "Address",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "df257768-2d79-4cfc-9f7b-2759f17daf35",
            "type": {
                "namespace": "bhr",
                "name": "age"
            },
            "title": "Age",
            "description": "",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3c05d4f1-3201-4117-8228-40ec6dd3e4b3",
            "type": {
                "namespace": "bhr",
                "name": "armedWeaponType"
            },
            "title": "Armed Weapon Type",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "227132f3-7802-43fd-b0fb-5950dcd6e21c",
            "type": {
                "namespace": "bhr",
                "name": "armedWithWeapon"
            },
            "title": "Armed With Weapon",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4ac907f3-3c2c-4a5b-9435-0c17f5d93e03",
            "type": {
                "namespace": "bhr",
                "name": "biologicallyinducedoptions"
            },
            "title": "Biologically induced (options)",
            "description": "Text options for the nature of crisis that is \"biologically induced\".",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "98bddd57-a75c-4779-a3a4-dd8a3c317e4f",
            "type": {
                "namespace": "bhr",
                "name": "cadNumber"
            },
            "title": "CAD Number",
            "description": "",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "df9d6c53-b52f-4455-9acd-a001beb57fea",
            "type": {
                "namespace": "bhr",
                "name": "chemicallyinducedoptions"
            },
            "title": "Chemically Induced (options)",
            "description": "Text options for the nature of crisis that is \"chemically induced\".",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9c82a2ce-0492-40ca-bfd8-7323f12e1e29",
            "type": {
                "namespace": "bhr",
                "name": "companionOffenseReport"
            },
            "title": "Companion Offense Report (Y/N)",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "11445207-4211-404e-89e5-5212a7314a84",
            "type": {
                "namespace": "bhr",
                "name": "complainantAddress"
            },
            "title": "Complainant Address",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9db70c46-fcf2-4020-a275-0a266cef2ea1",
            "type": {
                "namespace": "bhr",
                "name": "complainantConsumerRelationship"
            },
            "title": "Complainant-Consumer Relationship",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6194623f-c162-47e7-b49f-60089ad198d4",
            "type": {
                "namespace": "bhr",
                "name": "complainantName"
            },
            "title": "Complainant Name",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "29b8f8f4-9449-4605-8fe3-0d0b08d4c6fe",
            "type": {
                "namespace": "bhr",
                "name": "complainantPhone"
            },
            "title": "Complainant Phone",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "998bc748-4f40-4f5d-98ed-91ac4dab28a1",
            "type": {
                "namespace": "bhr",
                "name": "complaintNumber"
            },
            "title": "Complaint Number",
            "description": "Complaint Number",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8117d21a-c144-4114-8d7f-a420cd35114c",
            "type": {
                "namespace": "bhr",
                "name": "dateReported"
            },
            "title": "Date Reported (deprecated)",
            "description": "",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8bb0fb29-b210-4ace-a3d4-17a7b1af39fd",
            "type": {
                "namespace": "bhr",
                "name": "datetimeOccurred"
            },
            "title": "DateTime Occurred",
            "description": "A DateTime to represent when an event occurred.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7c1b100f-8ca2-4dfd-a751-0fce1339991b",
            "type": {
                "namespace": "bhr",
                "name": "datetimeReported"
            },
            "title": "DateTime Reported",
            "description": "A DateTime to represent when an event was reported.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0d3bac15-d2dd-4b7b-bd26-a8af62475a8e",
            "type": {
                "namespace": "bhr",
                "name": "deescalationTechniques"
            },
            "title": "De-escalation Techniques",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1c79ff6e-8b7b-482f-a408-0f22a20b130a",
            "type": {
                "namespace": "bhr",
                "name": "deescalationTechniquesOther"
            },
            "title": "De-escalation Techniques (Other)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0442724d-526e-4abb-a98c-49245ad7cfae",
            "type": {
                "namespace": "bhr",
                "name": "dispatchReason"
            },
            "title": "Dispatch Reason",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e325d17e-2793-47a0-be1d-631e4df7ceb7",
            "type": {
                "namespace": "bhr",
                "name": "disposition"
            },
            "title": "Disposition",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "993e327b-6fee-44e4-9d3a-937ff910b2ef",
            "type": {
                "namespace": "bhr",
                "name": "dob"
            },
            "title": "DOB",
            "description": "",
            "schemas": [],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "68023b1d-9025-466d-80e2-b548eddeca8b",
            "type": {
                "namespace": "bhr",
                "name": "drugType"
            },
            "title": "Drug Type",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "80c95ba4-5c9d-457c-b7b2-85f4702a82f6",
            "type": {
                "namespace": "bhr",
                "name": "drugsAlcohol"
            },
            "title": "Drugs or Alcohol",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4f99eb18-3f0b-492f-827c-7bdcf92fcff7",
            "type": {
                "namespace": "bhr",
                "name": "emotionalState"
            },
            "title": "Emotional State",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8f3d8e21-9424-4129-ba82-0d3c4e9667b8",
            "type": {
                "namespace": "bhr",
                "name": "emotionalStateOther"
            },
            "title": "Emotional State (Other)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "27313332-a7fb-4760-a143-8ccc8e81b64e",
            "type": {
                "namespace": "bhr",
                "name": "followupreason"
            },
            "title": "Reason for follow-up",
            "description": "BHR reason for follow-up",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "603c441d-0ba9-4554-a3db-32d671e9a875",
            "type": {
                "namespace": "bhr",
                "name": "gender"
            },
            "title": "Gender",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "702f3d3b-69c1-4069-87ba-6378f04ddc24",
            "type": {
                "namespace": "bhr",
                "name": "homeless"
            },
            "title": "Homeless",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "aa335fd9-5212-4b11-b6bb-cace9cf6cb56",
            "type": {
                "namespace": "bhr",
                "name": "homelessLocation"
            },
            "title": "Homeless Location",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d0eb7570-433f-4eb2-83c3-cd2a25ef4c1b",
            "type": {
                "namespace": "bhr",
                "name": "hospital"
            },
            "title": "Hospital",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "51bcc54d-2386-4f47-9a75-f11bd94f23dc",
            "type": {
                "namespace": "bhr",
                "name": "hospitalTransport"
            },
            "title": "Hospital Transport",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9ee60ae1-d4f1-4cd6-a242-0cd287e7cad8",
            "type": {
                "namespace": "bhr",
                "name": "incident"
            },
            "title": "Incident",
            "description": "Incident or crime type or category",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3321f380-4515-414d-be74-c7ad44bcc5a6",
            "type": {
                "namespace": "bhr",
                "name": "incidentNarrative"
            },
            "title": "Incident Narrative",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "112e96c7-9392-41be-aaf3-99c42bf2827f",
            "type": {
                "namespace": "bhr",
                "name": "injuries"
            },
            "title": "Injuries",
            "description": "Description of injuries - text field",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a3614c79-38c6-41bb-a09b-0f7abf95ab65",
            "type": {
                "namespace": "bhr",
                "name": "injuriesOther"
            },
            "title": "Injuries (Other)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1c1d84ba-40f6-46ec-aaaf-c681d2366c8e",
            "type": {
                "namespace": "bhr",
                "name": "locationOfIncident"
            },
            "title": "Location of Incident",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "05e8cb86-1975-4ca2-950a-3d37654543dd",
            "type": {
                "namespace": "bhr",
                "name": "militaryStatus"
            },
            "title": "Military Status",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "564e1b7a-5e25-4e58-b50c-5b1cfcb1c581",
            "type": {
                "namespace": "bhr",
                "name": "name"
            },
            "title": "Name",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "44d1f72b-9246-4d22-b5a7-d72ce0cf6db7",
            "type": {
                "namespace": "bhr",
                "name": "observedBehaviors"
            },
            "title": "Observed Behaviors",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "54b42b66-b45c-47d2-8759-ad73f482d331",
            "type": {
                "namespace": "bhr",
                "name": "observedBehaviorsOther"
            },
            "title": "Observed Behaviors (Other)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a21c1ba0-7eb0-40d4-b960-6b303459aa05",
            "type": {
                "namespace": "bhr",
                "name": "officerCertification"
            },
            "title": "Officer Certification",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "531f3f43-9531-4e31-af27-aa1feaa2cc88",
            "type": {
                "namespace": "bhr",
                "name": "officerInjuries"
            },
            "title": "Officer Injuries",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c39806a5-0c6d-4824-87f7-0fa3495a2236",
            "type": {
                "namespace": "bhr",
                "name": "officerName"
            },
            "title": "Officer Name",
            "description": "Officer Name",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "26140cbf-4492-4ac4-a94b-802515edf721",
            "type": {
                "namespace": "bhr",
                "name": "officerSeqID"
            },
            "title": "Officer Sequence ID",
            "description": "Officer Sequence ID",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "28e996a0-7df7-401c-a2b0-e336ea679804",
            "type": {
                "namespace": "bhr",
                "name": "onView"
            },
            "title": "On View",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "760b44e1-75ca-4806-9f8d-eb7c44e31acf",
            "type": {
                "namespace": "bhr",
                "name": "phone"
            },
            "title": "Phone",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "533f9b61-fe30-4c0c-befb-9e473a651993",
            "type": {
                "namespace": "bhr",
                "name": "photosTakenOf"
            },
            "title": "Photos Taken of Incident",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6668b209-7b41-4fef-8c76-b70998f02a35",
            "type": {
                "namespace": "bhr",
                "name": "postOfOccurrence"
            },
            "title": "Post/Police Beat Of Occurrence",
            "description": "Post, police beat, or map reference of an occurrence.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "bd4a3c16-cf71-4757-bc5a-b2c0eb32dcb8",
            "type": {
                "namespace": "bhr",
                "name": "prescribedMedication"
            },
            "title": "Prescribed Medication",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "977ee856-bcda-4d35-b8d6-3271c4b0a456",
            "type": {
                "namespace": "bhr",
                "name": "prevPsychAdmission"
            },
            "title": "Previous Psychiatric Admission",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "22c7191f-9816-41fc-ac6f-0e17e7aefd61",
            "type": {
                "namespace": "bhr",
                "name": "provider"
            },
            "title": "Provider details (BHR)",
            "description": "Provider details in BHR reports.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e5fdc012-6cf0-4e8a-9900-d37625f21ec1",
            "type": {
                "namespace": "bhr",
                "name": "race"
            },
            "title": "Race",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f6fe187a-e5c3-43d6-820c-386793394f83",
            "type": {
                "namespace": "bhr",
                "name": "selfDiagnosis"
            },
            "title": "Self Diagnosis",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "70916123-0a98-430d-81b5-8dca614728da",
            "type": {
                "namespace": "bhr",
                "name": "selfDiagnosisOther"
            },
            "title": "Self Diagnosis (Other)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "24ebdb0b-fe91-430c-bafd-b5b0d19d8918",
            "type": {
                "namespace": "bhr",
                "name": "specializedResourcesCalled"
            },
            "title": "Specialized Resources Called",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3a998043-7a38-4050-84c3-bef051e10714",
            "type": {
                "namespace": "bhr",
                "name": "suicidal"
            },
            "title": "Suicidal",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2f175283-543f-4e61-9835-cf925796a342",
            "type": {
                "namespace": "bhr",
                "name": "suicidalActions"
            },
            "title": "Suicidal Actions",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "dcc42fe8-0154-4188-97e6-6a6b1b92affc",
            "type": {
                "namespace": "bhr",
                "name": "suicideAttemptMethod"
            },
            "title": "Suicide Attempt Method",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "02c6ade8-4914-40b6-a711-dff9c3d9e64f",
            "type": {
                "namespace": "bhr",
                "name": "suicideAttemptMethodOther"
            },
            "title": "Suicide Attempt Method (Other)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2795a838-883d-4f5e-b3ae-1cd39733f1ba",
            "type": {
                "namespace": "bhr",
                "name": "supervisor"
            },
            "title": "Supervisor (BHR)",
            "description": "Supervisor in a BHR report.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "8172d32b-49a6-43f2-b973-6a4ef2cf495e",
            "type": {
                "namespace": "bhr",
                "name": "supervisorID"
            },
            "title": "Supervisor ID",
            "description": "Supervisor's ID # in a BHR report.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "10dc1a8d-a0b1-48b7-8383-e003fc521559",
            "type": {
                "namespace": "bhr",
                "name": "takingMedication"
            },
            "title": "Taking Medication",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7fe5141c-0263-4b98-90b8-6e90865103e2",
            "type": {
                "namespace": "bhr",
                "name": "timeOccurred"
            },
            "title": "Time Occurred (deprecated)",
            "description": "",
            "schemas": [],
            "datatype": "TimeOfDay",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2a7b3588-c3c4-49e2-9b4f-6b9fca771795",
            "type": {
                "namespace": "bhr",
                "name": "unit"
            },
            "title": "Unit",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "dc583559-550f-40a3-8c89-81a6170ab636",
            "type": {
                "namespace": "biomedical",
                "name": "id"
            },
            "title": "biomedical ID",
            "description": "Unique ID for a biomedical assessment.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ed577cc3-f627-43d8-b17a-39d34480570d",
            "type": {
                "namespace": "cardiovascular",
                "name": "chestpain"
            },
            "title": "Chest pain (Y/N)",
            "description": "Chest pain (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a9b8fbd1-7da0-43fc-8f87-47135cd9d4c0",
            "type": {
                "namespace": "cardiovascular",
                "name": "chestpaintext"
            },
            "title": "Chest Pain (description)",
            "description": "Additional text descriptions of chest pains.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e92aa355-8e6d-4253-9269-7f5d2a8a4ff1",
            "type": {
                "namespace": "cardiovascular",
                "name": "heartdisease"
            },
            "title": "Heart Disease (Y/N)",
            "description": "Heart Disease (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "fba8f114-981a-4e92-a483-0d2c25d3d4a4",
            "type": {
                "namespace": "cardiovascular",
                "name": "heartdiseasetext"
            },
            "title": "Heart Disease (description)",
            "description": "Additional text descriptions of heart disease.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "03f4bf0e-53e4-46a5-9a02-e13d4015abd3",
            "type": {
                "namespace": "cardiovascular",
                "name": "hypertension"
            },
            "title": "Hypertension (Y/N)",
            "description": "Hypertension (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4700bd91-44c3-43d8-9c57-a78d62ffa8b0",
            "type": {
                "namespace": "cardiovascular",
                "name": "hypertensiontext"
            },
            "title": "Hypertension (description)",
            "description": "Additional text descriptions of hypertension.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5c480eb6-f799-46d0-98ef-c5f43678a616",
            "type": {
                "namespace": "cardiovascular",
                "name": "id"
            },
            "title": "Cardiovascular ID",
            "description": "Unique ID for cardiovascular assessment",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5de22760-733b-4239-abf7-fa445e658e90",
            "type": {
                "namespace": "cardiovascular",
                "name": "myocardialinfarction"
            },
            "title": "Myocardial Infarction (Y/N)",
            "description": "MyocardialInfarction (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8f8416fc-4cbd-42e0-8a8e-11b2f946fe19",
            "type": {
                "namespace": "cardiovascular",
                "name": "myocardialinfarctiontext"
            },
            "title": "Myocardial Infarction (description)",
            "description": "Additional text descriptions of a myocardial infarction.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "70107d82-aa58-4098-87ef-914122fc14ff",
            "type": {
                "namespace": "cardiovascular",
                "name": "palpitations"
            },
            "title": "Palpitations (Y/N)",
            "description": "Palpitations (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5387dee7-1d50-4ffb-9a9e-b86ef1bc3b34",
            "type": {
                "namespace": "cardiovascular",
                "name": "palpitationstext"
            },
            "title": "Palpitations (description)",
            "description": "Additional text descriptions of any chest palpitations.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8bc5eb16-aa6d-4f97-bf5a-af55e9e938a2",
            "type": {
                "namespace": "cardiovascular",
                "name": "swellingofextremities"
            },
            "title": "Swelling of extremities (Y/N)",
            "description": "Swelling of extremities (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d08410b0-5e37-4fef-a29a-fbc30a7cd9db",
            "type": {
                "namespace": "cardiovascular",
                "name": "swellingofextremitiestext"
            },
            "title": "Swelling of Extremities (description)",
            "description": "Additional text descriptions of any swelling of extremities.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ba457ac1-37ec-4866-b273-a4d3a09e6992",
            "type": {
                "namespace": "cfs",
                "name": "class"
            },
            "title": "Class (-d)",
            "description": "CFS Type Class",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e455b024-72bc-4dfe-b362-3852aadb8496",
            "type": {
                "namespace": "cfsorigin",
                "name": "source"
            },
            "title": "CFS source of initiation",
            "description": "Source or initiation of a CFS; if an organization, org name.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "620b3e07-7f85-4629-a075-7e8c6f7eb3cb",
            "type": {
                "namespace": "contact",
                "name": "Active"
            },
            "title": "Active (-d)",
            "description": "Whether a contact is active, if known.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6a1f7cf6-80eb-4fe9-a9f4-49cad15c6154",
            "type": {
                "namespace": "contact",
                "name": "Email"
            },
            "title": "Email",
            "description": "Email address",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f21feaa5-f932-4a78-88af-b44365efefba",
            "type": {
                "namespace": "contact",
                "name": "WorkPhone"
            },
            "title": "Work Phone",
            "description": "Whether a work phone number.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ee34032c-9082-4535-af42-8d568683324f",
            "type": {
                "namespace": "contact",
                "name": "cellphone"
            },
            "title": "Cell/Mobile (Y/N)",
            "description": "Flag for whether a phone number corresponds to a mobile or cell.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4482aab2-3ec7-4a68-9d30-7b94b4569716",
            "type": {
                "namespace": "contact",
                "name": "emergencyname"
            },
            "title": "Emergency contact person",
            "description": "Person given for emergency contact.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cfd6591c-1565-47be-9bb6-f40cee2cd1a4",
            "type": {
                "namespace": "contact",
                "name": "emergencynumber"
            },
            "title": "Emergency contact number",
            "description": "Phone number given for emergency contact.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ff7c3f66-1904-481b-b7d7-56d8b331be00",
            "type": {
                "namespace": "contact",
                "name": "id"
            },
            "title": "Contact ID",
            "description": "Unique ID for use as contact info primary key. ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cebc61bf-9052-4e11-99af-3aa3113688a8",
            "type": {
                "namespace": "contact",
                "name": "phonenumber"
            },
            "title": "Phone Number",
            "description": "Phone number",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e8bbd3d5-fe0c-4046-8a1b-8319c196b18c",
            "type": {
                "namespace": "contact",
                "name": "uniqueID"
            },
            "title": "Contact ID",
            "description": "Contact ID",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5d37978a-b658-462a-8903-4a9a2d2d69e3",
            "type": {
                "namespace": "criminaljustice",
                "name": "arrestagency"
            },
            "title": "Arrest Agency",
            "description": "Arresting Agency",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7c2953f9-babd-4ecf-9adf-fc20ff1f9fa9",
            "type": {
                "namespace": "criminaljustice",
                "name": "bailbondamount"
            },
            "title": "Bond Amount",
            "description": "The dollar amount of a bond.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "62c82f33-295a-4437-8a3c-2d409c1e2224",
            "type": {
                "namespace": "criminaljustice",
                "name": "bailingperson"
            },
            "title": "Person Posting Bail",
            "description": "A person who posted bond for another person.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c2b18c7a-6625-4a31-8196-a8d3cb0e3309",
            "type": {
                "namespace": "criminaljustice",
                "name": "beatsector"
            },
            "title": "Police beat",
            "description": "Police beat",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8ab6e5e1-9ef7-4e83-94f1-2ad685c75915",
            "type": {
                "namespace": "criminaljustice",
                "name": "bookingnumber"
            },
            "title": "Booking number",
            "description": "",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5232cd9a-9f8a-4263-a7ae-503ca5c58de0",
            "type": {
                "namespace": "criminaljustice",
                "name": "bookingofficer"
            },
            "title": "Booking Officer",
            "description": "Booking Officer",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4d5db4fe-a0c8-45f8-af6d-cd7cd4cab86c",
            "type": {
                "namespace": "criminaljustice",
                "name": "casenumber"
            },
            "title": "Case number (v2)",
            "description": "Case number",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e71e3faa-fc19-45f8-87e7-c3e2449a1dac",
            "type": {
                "namespace": "criminaljustice",
                "name": "casestatus"
            },
            "title": "Case status",
            "description": "If incident is part of a case, the status of the case.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "656ded15-4503-4623-977f-b1188a64cafa",
            "type": {
                "namespace": "criminaljustice",
                "name": "cautioninformation"
            },
            "title": "Caution",
            "description": "A description of cautions about a person's potential for dangerous behavior when contacted.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0de9808a-d8e3-4f62-9413-e86e5ede304a",
            "type": {
                "namespace": "criminaljustice",
                "name": "cfsoriginid"
            },
            "title": "CFS Origination ID",
            "description": "Details on how a Call for Service is initiated or originated. Could be by a person, or an organization.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "18f2e4c6-86ce-4f5d-ad8f-0eb018947371",
            "type": {
                "namespace": "criminaljustice",
                "name": "commitnumber"
            },
            "title": "Commit number",
            "description": "Commit number",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "523de719-c894-4bed-91ec-3b1d2fa51f4c",
            "type": {
                "namespace": "criminaljustice",
                "name": "committedtoauthority"
            },
            "title": "Committed to Authority",
            "description": "An authority to which a person is remanded into custody as part of a judgment.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a67bcbdd-f9e1-4830-9730-d88a419a693d",
            "type": {
                "namespace": "criminaljustice",
                "name": "committingauthority"
            },
            "title": "Committing Authority",
            "description": "Committing authority.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b4537358-a051-417a-832a-045d59c13b7f",
            "type": {
                "namespace": "criminaljustice",
                "name": "disposition"
            },
            "title": "Disposition",
            "description": "Disposition, or means of clearing",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b8fcea6c-fb18-4050-bb54-2fa86ea4dae1",
            "type": {
                "namespace": "criminaljustice",
                "name": "disposition2"
            },
            "title": "Secondary Disposition",
            "description": "Secondary disposition. IA includes CIT designation.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e32ceae7-c00b-4e9f-bf98-0f03e94fb566",
            "type": {
                "namespace": "criminaljustice",
                "name": "heldat"
            },
            "title": "Held At",
            "description": "Authority, jail or institution a person is held at.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "13ad1d8a-24da-4c5d-9168-018d33979007",
            "type": {
                "namespace": "criminaljustice",
                "name": "incidentflag"
            },
            "title": "Incident flag",
            "description": "Generic field to accommodate PD-specific flags.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3ca03e79-6b50-4fc4-94a0-17b25eabae34",
            "type": {
                "namespace": "criminaljustice",
                "name": "incidentid"
            },
            "title": "Incident ID (v2)",
            "description": "Unique ID for a criminal justice incident",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "81b3073b-e01f-4b69-9b64-03fcea0ccab7",
            "type": {
                "namespace": "criminaljustice",
                "name": "inmateid"
            },
            "title": "Inmate ID",
            "description": "Inmate ID",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2216f875-9645-4786-b062-9ec3960e4630",
            "type": {
                "namespace": "criminaljustice",
                "name": "jailid"
            },
            "title": "Jail ID",
            "description": "Identifier for a jail.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6900fcb7-f44d-4b65-b392-40617dea5fed",
            "type": {
                "namespace": "criminaljustice",
                "name": "jailrecordid"
            },
            "title": "Jail record ID",
            "description": "Unique ID for a jail record or stay.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c228a9c8-e0f3-4bb0-8b09-78b2c6162caa",
            "type": {
                "namespace": "criminaljustice",
                "name": "localstatute"
            },
            "title": "Offense Local Statute",
            "description": "Offense Local Statute",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c97555a0-ed79-4944-a000-ab961da3ab48",
            "type": {
                "namespace": "criminaljustice",
                "name": "ncic"
            },
            "title": "Offense NCIC Code",
            "description": "Offense NCIC Code",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d673e32c-6e67-4885-8e30-47e98f6229f2",
            "type": {
                "namespace": "criminaljustice",
                "name": "nibrs"
            },
            "title": "NIBRS offense code",
            "description": "NIBRS offense code, if available.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9b2bd81e-51cc-44ce-9051-18d833762848",
            "type": {
                "namespace": "criminaljustice",
                "name": "offenseid"
            },
            "title": "Offense ID (v2)",
            "description": "",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7c0f56bb-e77c-4a2a-8e17-4542849aeeda",
            "type": {
                "namespace": "criminaljustice",
                "name": "personid"
            },
            "title": "Justice Involved Person ID",
            "description": "",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "fa00bfdb-98ec-487a-b62f-f6614e4c921b",
            "type": {
                "namespace": "criminaljustice",
                "name": "persontype"
            },
            "title": "Person Type",
            "description": "A person's role in an incident (i.e. arrestee, witness, reporter).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d5cd8ae6-f0de-48fe-9139-89108adedc19",
            "type": {
                "namespace": "criminaljustice",
                "name": "releasenotes"
            },
            "title": "Release Notes",
            "description": "Discharge/release reason, comments, or notes.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2a590340-a360-4456-af81-949f6d490a88",
            "type": {
                "namespace": "criminaljustice",
                "name": "releasetofacility"
            },
            "title": "Released to Facility",
            "description": "An institution from which an individual is to be released.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "92ecb196-23f1-4ab4-a8c3-084ccbcc151a",
            "type": {
                "namespace": "criminaljustice",
                "name": "releasetype"
            },
            "title": "Release Type",
            "description": "The type of release",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "477db70c-ee49-41bf-97d2-c4eb0e1ffcc4",
            "type": {
                "namespace": "criminaljustice",
                "name": "reportnumber"
            },
            "title": "Report number",
            "description": "Police reports generated from an incident",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "062fd4f6-30c0-4a4a-a221-18bb1da2cb88",
            "type": {
                "namespace": "criminaljustice",
                "name": "suspectalcohol"
            },
            "title": "Suspect alcohol level",
            "description": "Suspect alcohol aevel",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d146903f-9196-40b8-90ce-3a0e8e4557a5",
            "type": {
                "namespace": "criminaljustice",
                "name": "timeserveddays"
            },
            "title": "Time Served: Days",
            "description": "Time served: days",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cccdf498-4c90-4015-85c3-2a83536b705a",
            "type": {
                "namespace": "criminaljustice",
                "name": "treatasadult"
            },
            "title": "Treat as adult (Adult Juv Waive)",
            "description": "Juvenile individual should be treated as an adult in this specific enforcement encounter.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f7c87cb1-7ddd-4dec-b634-bef6f184a557",
            "type": {
                "namespace": "criminaljustice",
                "name": "victimalcohol"
            },
            "title": "Victim alcohol level",
            "description": "Victim alcohol level",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8388b7cc-19eb-411f-9af1-57999eeb27e0",
            "type": {
                "namespace": "criminaljustice",
                "name": "warranttype"
            },
            "title": "Warrant Type",
            "description": "Warrant type",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "adf443f7-eae6-4276-8f4b-55cc5b705880",
            "type": {
                "namespace": "date",
                "name": "CompletedDateTime"
            },
            "title": "Completed DateTime (-d)",
            "description": "Completed DateTime",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "67ebde8e-6963-4e43-a10a-a75075c54f14",
            "type": {
                "namespace": "date",
                "name": "DispatchArrivalDateTime"
            },
            "title": "Dispatch Arrival Date Time",
            "description": "Dispatch Arrival Date Time",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f8e167e7-3760-470f-a2aa-de3b41c8bf8e",
            "type": {
                "namespace": "date",
                "name": "IncidentDate"
            },
            "title": "Incident Date",
            "description": "Date an incident occurred",
            "schemas": [],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a988059c-4108-49a1-977c-44baf45c3dde",
            "type": {
                "namespace": "date",
                "name": "SentenceStartDate"
            },
            "title": "Sentence Start Date",
            "description": "Date on which individual began serving time for this offense",
            "schemas": [],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c8a675e0-c45f-4343-a538-86d609223bd0",
            "type": {
                "namespace": "date",
                "name": "admission"
            },
            "title": "Date of admission",
            "description": "Date of admission.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2652b3bf-7c8a-4f6a-a865-28522bc561c6",
            "type": {
                "namespace": "date",
                "name": "alertedDateTime"
            },
            "title": "Alerted DateTime_deprecated",
            "description": "A CFS Alerted DateTime",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e7ea04e3-5047-4d9c-9bbe-b0bffe2c9cd1",
            "type": {
                "namespace": "date",
                "name": "booking"
            },
            "title": "Booking Date",
            "description": "Date an individual was booked.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3cfead4f-09ce-4ef8-bd03-a70dce298ac5",
            "type": {
                "namespace": "date",
                "name": "commit"
            },
            "title": "Commit date (-d)",
            "description": "Commit date",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                },
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6675a7e8-2159-41b1-9431-4053690fa3c9",
            "type": {
                "namespace": "date",
                "name": "completeddatetime"
            },
            "title": "Completed / submitted datetime",
            "description": "Completed date & time of an occurrence, or datetime at which an entity (usually an association) was submitted.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b9170d9b-8265-452c-b9e8-ebeab5f7556f",
            "type": {
                "namespace": "date",
                "name": "dayofweek"
            },
            "title": "Day Of Week",
            "description": "Day of the week.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ac1c6b8c-d2ea-417c-9625-e4d8ccb1fa11",
            "type": {
                "namespace": "date",
                "name": "dr_appt_datetime"
            },
            "title": "DateTime of an upcoming doctor visit or screening appointment",
            "description": "DateTime of a screening or physician's visit (for tracking upcoming appointments)",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "484905d0-7b59-4087-ab47-7cc5473273bd",
            "type": {
                "namespace": "date",
                "name": "expiration"
            },
            "title": "Expiration Date",
            "description": "An expiration date",
            "schemas": [],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "10cefc62-376a-48f3-b50d-8bad86bcf27a",
            "type": {
                "namespace": "date",
                "name": "received"
            },
            "title": "Date received",
            "description": "Date a call for service (CFS) was received",
            "schemas": [],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d24888b1-cbbc-4557-b928-20c16ad744cf",
            "type": {
                "namespace": "date",
                "name": "timeOfDay"
            },
            "title": "Time Of Day (-d)",
            "description": "Time Of Day",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "TimeOfDay",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "736818e8-0ad9-4c83-8b53-3e00005fed2b",
            "type": {
                "namespace": "datetime",
                "name": "alerted"
            },
            "title": "Alerted date-time",
            "description": "A CFS Alerted DateTime",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0b68c2cd-4c03-43e6-b1c8-fe6187b0eae3",
            "type": {
                "namespace": "datetime",
                "name": "arrived"
            },
            "title": "Time arrived",
            "description": "Time arrived (i.e., from a dispatch call).",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "382bb6cf-d19f-48e5-bd7a-33599bbc910f",
            "type": {
                "namespace": "datetime",
                "name": "bailhearing"
            },
            "title": "Bond Court Time",
            "description": "Court date-time to establish bail.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1256d3f4-2a83-44d0-8b1d-389803b28314",
            "type": {
                "namespace": "datetime",
                "name": "enroute"
            },
            "title": "En-route date-time",
            "description": "EnRoute DateTime",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0d240f48-9347-46f7-a79e-b11ffdece2a8",
            "type": {
                "namespace": "datetime",
                "name": "received"
            },
            "title": "Received date-time",
            "description": "The date-time CFS a was received",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "61fd0192-9740-408d-a9b7-aba5d3c0f26b",
            "type": {
                "namespace": "datetime",
                "name": "totaldispatch"
            },
            "title": "Total time of dispatch",
            "description": "Total time taken for a dispatch call for service. ",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6606dbf5-3823-457e-a0bd-adad141e46e0",
            "type": {
                "namespace": "demographics",
                "name": "hhsize"
            },
            "title": "Household size (-d)",
            "description": "The size of a household (number of people).",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c22b7629-4323-4d69-94fd-dae4d64df69c",
            "type": {
                "namespace": "demographics",
                "name": "hhtype"
            },
            "title": "Household type",
            "description": "Categories of households (i.e., only adults, adults and children).",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "879f46a2-e432-4808-8829-98eeb2f9dcf6",
            "type": {
                "namespace": "detox",
                "name": "ScreeningID"
            },
            "title": "detox ScreeningID",
            "description": "detox ScreeningID",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c502df5b-ec63-4f15-b529-d38695366c75",
            "type": {
                "namespace": "diagnosis",
                "name": "Description"
            },
            "title": "Description",
            "description": "Description of entity (AKA of diagnosis, study, etc).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "938c538c-2f08-4074-afed-8a5ebc1f4990",
            "type": {
                "namespace": "dispatch",
                "name": "OSQ"
            },
            "title": "OSQ",
            "description": "OSQ",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "db105001-deb4-47fe-8de4-c61e64fa6d26",
            "type": {
                "namespace": "dispatch",
                "name": "esn"
            },
            "title": "ESN",
            "description": "ESN",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cd75e32f-8ca1-428d-9897-3c918746ca2e",
            "type": {
                "namespace": "dispatch",
                "name": "latitude"
            },
            "title": "Latitude (-d)",
            "description": "Latitude",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c892ad12-04ec-425f-99b3-08e894a8386c",
            "type": {
                "namespace": "dispatch",
                "name": "longitude"
            },
            "title": "Longitude (-d)",
            "description": "Longitude",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "dcf44f2e-3a75-457f-a6e4-fbeaaf1a3f43",
            "type": {
                "namespace": "dispatch",
                "name": "proQaType"
            },
            "title": "ProQA Type",
            "description": "ProQA Type",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "458118b4-c6f9-4c48-84a5-388082e4edf8",
            "type": {
                "namespace": "dispatch",
                "name": "zoneid_deprecated"
            },
            "title": "Zone ID",
            "description": "Dispatch Zone ID",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1db0650e-8a68-4c6c-8b3a-fd7b89aabedd",
            "type": {
                "namespace": "economy",
                "name": "anyincome"
            },
            "title": "Any income (Y/N)",
            "description": "Whether one receives income of any kind. ",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5a7afac3-471b-4b5a-8d58-d7748f0f2525",
            "type": {
                "namespace": "economy",
                "name": "anyincomeamount"
            },
            "title": "Any Income ($) (-d)",
            "description": "Specified income amount received from any source.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a962a8ba-2c4c-4110-92b5-dc37c0d02e22",
            "type": {
                "namespace": "economy",
                "name": "anyincomesources"
            },
            "title": "Income sources",
            "description": "The specified sources of any income received.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "27246bfa-7496-4b8b-a5d5-aaf2398108dc",
            "type": {
                "namespace": "economy",
                "name": "anyincometimeunit"
            },
            "title": "Any income (unit time)",
            "description": "The unit time (i.e., monthly,  weekly) that accompanies a specified amount of income from any source.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "10aa082b-7173-44ca-a00f-d629b874b598",
            "type": {
                "namespace": "economy",
                "name": "childsupport"
            },
            "title": "Child support (Y/N)",
            "description": "Whether one receives child support (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b996bdd3-1748-48a0-8348-a24feb4ea74f",
            "type": {
                "namespace": "economy",
                "name": "childsupportamount"
            },
            "title": "Amount of child support",
            "description": "Specific amount of child support received.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f8c070a6-6315-494d-b8b8-f413e2ace393",
            "type": {
                "namespace": "economy",
                "name": "earnedincome"
            },
            "title": "Earned income (Y/N)",
            "description": "Whether one has earned income (Y/N).",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "acdef6c8-348d-4c66-9ec2-2a082e838786",
            "type": {
                "namespace": "economy",
                "name": "earnedincomeamount"
            },
            "title": "Earned Income ($)",
            "description": "Amount of earned income for an individual.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a07b2d64-d1a4-4555-a57d-470490920d32",
            "type": {
                "namespace": "economy",
                "name": "earnedincometimeunit"
            },
            "title": "Earned income (unit time)",
            "description": "The unit time (i.e., monthly,  weekly) that accompanies a specified amount of earned income.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "78916b55-22fe-4ed8-bde6-b819f4114dc9",
            "type": {
                "namespace": "economy",
                "name": "employmentstatus"
            },
            "title": "Employment Status",
            "description": "One's employment status.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "126c3754-281f-4c88-83ef-3c8c78198d5b",
            "type": {
                "namespace": "economy",
                "name": "noncashbenefits"
            },
            "title": "Non-cash benefits (Y/N)",
            "description": "Whether one receives non-cash benefits (Y/N). ",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "fa6e9c4d-09bd-46bc-a7f8-c1ac7c5d820e",
            "type": {
                "namespace": "economy",
                "name": "noncashbenefittypes"
            },
            "title": "Types of non-cash benefits",
            "description": "The types of non-cash benefits one receives.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8e15cc71-c2b5-4f1f-ae42-eb572ad66aa6",
            "type": {
                "namespace": "economy",
                "name": "otherincome"
            },
            "title": "Other Income",
            "description": "Other income types.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "36864a7e-ba1f-487d-adca-4dc55ba82700",
            "type": {
                "namespace": "economy",
                "name": "publicassistance"
            },
            "title": "Public assistance (Y/N)",
            "description": "Whether one receives general public assistance (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1b959654-02fd-487b-adc3-eb6049a878ff",
            "type": {
                "namespace": "economy",
                "name": "publicassistanceamount"
            },
            "title": "Public assistance ($)",
            "description": "The amount of general public assistance received.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9dd6385b-50c9-43c2-bb86-9232cc187d1a",
            "type": {
                "namespace": "economy",
                "name": "spousalsupport"
            },
            "title": "Spousal Support (Y/N)",
            "description": "Alimony or other spousal support (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b8d807b2-6c7a-4d1b-add6-aac8e24f251b",
            "type": {
                "namespace": "economy",
                "name": "spousalsupportamount"
            },
            "title": "Spousal Support Amount",
            "description": "The amount of spousal support received.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4086d111-ab50-4da9-ac5a-a68b660548a4",
            "type": {
                "namespace": "emotionalbehavioral",
                "name": "id"
            },
            "title": "Emotional Behavioral Assessment ID",
            "description": "Unique identifier for the emotional and behavioral assessment ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "bf640c1d-bb84-4299-802d-338ee475fc32",
            "type": {
                "namespace": "endocrine",
                "name": "diabetic"
            },
            "title": "Diabetic (Y/N)",
            "description": "Diabetic (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "36bb6759-0cc1-4470-b0e8-c907d304b5c0",
            "type": {
                "namespace": "endocrine",
                "name": "diabeticmgmtcomments"
            },
            "title": "Comments on Diabetic Management ",
            "description": "Comments on Diabetic Management ",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f2357864-38c4-4d46-bbda-6f7abd2928b0",
            "type": {
                "namespace": "endocrine",
                "name": "haspersonalinsulin"
            },
            "title": "Has personal insulin (Y/N)",
            "description": "Check of whether a patient has personal insulin if diabetic. (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2b3c3c14-9e9f-4f0d-a6a6-72e0cb61e33b",
            "type": {
                "namespace": "endocrine",
                "name": "id"
            },
            "title": "endocrine ID",
            "description": "Unique ID for endocrine assessments",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c3a8ab49-bb93-4591-a1b4-b952cf9502bd",
            "type": {
                "namespace": "event",
                "name": "ArrestWarrantNumber"
            },
            "title": "Warrant Number (-d)",
            "description": "Warrant number",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c485e679-9893-4122-a81f-45aeff1b80b9",
            "type": {
                "namespace": "event",
                "name": "CaseStatus"
            },
            "title": "Case Status",
            "description": "The Case Status for an incident",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5ba4ac95-8532-4c2c-8747-71268f7c5898",
            "type": {
                "namespace": "event",
                "name": "ChargeLevel"
            },
            "title": "Charge Level",
            "description": "The severity of a charge (F,M,I,O)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "11ba7bf9-200e-4b04-b1e7-80b54359143f",
            "type": {
                "namespace": "event",
                "name": "ChargeLevelState"
            },
            "title": "Charge Level (State)",
            "description": "Detailed severity of a charge at state level (e.g. Felony Class A)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cab9ca6f-4247-4a8b-a72e-149ced90d64e",
            "type": {
                "namespace": "event",
                "name": "ChargeStatus"
            },
            "title": "Charge Status",
            "description": "The status of a charge",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5e99b5ce-3da4-47de-8bfd-d07f5fcc07c6",
            "type": {
                "namespace": "event",
                "name": "Disposition"
            },
            "title": "Disposition",
            "description": "The disposition of a charge",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4f9ac871-d668-4c28-bfc5-8d844bb9b0f7",
            "type": {
                "namespace": "event",
                "name": "HowReleaseCode"
            },
            "title": "How Release Code",
            "description": "How the individual was released code",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b26c8495-ab1b-48ad-a0db-27954747c4bd",
            "type": {
                "namespace": "event",
                "name": "JuvenileHoldingAuthorization"
            },
            "title": "Juvenile Holding Authorization",
            "description": "Juvenile Holding Authorization",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a4ab4782-87be-4387-8e77-096e51cd3269",
            "type": {
                "namespace": "event",
                "name": "OffenseLocalCodeSection"
            },
            "title": "Charge Local Code Section",
            "description": "Local code section for this charge",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8d86916c-af7e-46bd-9890-061643b6ea6f",
            "type": {
                "namespace": "event",
                "name": "OffenseLocalDescription"
            },
            "title": "Offense/Charge Description",
            "description": "Charge description of local offense statute.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d22dc4e4-df58-4bf6-a0dc-5d33b34c133b",
            "type": {
                "namespace": "event",
                "name": "OffenseStateCodeSection"
            },
            "title": "Charge State Code Section",
            "description": "State code section for this charge",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "992858a1-a8d4-47c6-9c26-c331905f5667",
            "type": {
                "namespace": "event",
                "name": "PortableBreathTest"
            },
            "title": "Portable Breath Test",
            "description": "Portable breath test.",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1eefc692-cf1d-48c4-a366-6f06e7bd88ba",
            "type": {
                "namespace": "event",
                "name": "SentenceTermDays"
            },
            "title": "Sentence Term: Days",
            "description": "Number of sentence days",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "68d11b3a-9918-4816-9bae-3e813c704fe0",
            "type": {
                "namespace": "event",
                "name": "SentenceTermHours"
            },
            "title": "Sentence Term: Hours",
            "description": "Number of sentence hours",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b3f06fb6-47e8-46d6-80ab-62f91733a99f",
            "type": {
                "namespace": "event",
                "name": "SentenceTermYears"
            },
            "title": "Sentence Term: Years",
            "description": "Number of sentence years, starts at 1. Below 1 year, is blank",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "609230de-277e-4d81-acc9-0150e9d86d77",
            "type": {
                "namespace": "event",
                "name": "SentencingConditionIndicator"
            },
            "title": "Sentencing Conditions Indicator",
            "description": "Indicates whether sentencing conditions were met or not.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "86834b9d-30db-45f5-8d1a-5ed1e787f413",
            "type": {
                "namespace": "event",
                "name": "ServeConcurrentOffense"
            },
            "title": "Serve Concurrent Sentence",
            "description": "Used if an offense sentence is being served concurrently to another offense",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "afc463ff-695d-470c-96ae-78f2e186b7f4",
            "type": {
                "namespace": "event",
                "name": "ServeConsecutiveWithOffenseID"
            },
            "title": "Serve Consecutive With Offense ID",
            "description": "This sentence is being served consecutive with one or more offense IDs",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c16ab352-3099-4579-b900-40d54fec44c6",
            "type": {
                "namespace": "event",
                "name": "comments"
            },
            "title": "Comments",
            "description": "Comments",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "532bb817-1f5a-4ea8-994e-258fbb7067b7",
            "type": {
                "namespace": "event",
                "name": "witnessid"
            },
            "title": "Witness ID",
            "description": "The ID of the witness recording a form submission",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2bf49a3d-36d9-4e02-a824-1757d4ebc61f",
            "type": {
                "namespace": "form",
                "name": "relationtoprimaryclient"
            },
            "title": "Relation to individual on a form",
            "description": "For form submission, one's relationship to the subject of a form.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f046b68a-cc58-4e81-a22a-177c3eb2f78f",
            "type": {
                "namespace": "gastrointestinal",
                "name": "bleeding"
            },
            "title": "GastroIntestinal bleeding (Y/N)",
            "description": "GastroIntestinal bleeding (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "fed877c8-eb2a-4714-92c8-3b586bd2c4e7",
            "type": {
                "namespace": "gastrointestinal",
                "name": "bleedingtext"
            },
            "title": "Gastrointestinal bleeding (description)",
            "description": "Additional text descriptions of gastrointestinal bleeding.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "29d50517-8c66-4e0b-bd45-86d9309defb5",
            "type": {
                "namespace": "gastrointestinal",
                "name": "constipation"
            },
            "title": "Constipation (Y/N)",
            "description": "Constipation (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7c101eeb-3fd3-448b-b606-16e2da4f6d18",
            "type": {
                "namespace": "gastrointestinal",
                "name": "constipationtext"
            },
            "title": "Constipation (text)",
            "description": "Additional text descriptions of any constipation.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ad4b2034-16f9-4394-89f7-5614f33e920c",
            "type": {
                "namespace": "gastrointestinal",
                "name": "diarrhea"
            },
            "title": "Diarrhea (Y/N)",
            "description": "Diarrhea (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "93cfb4a2-3911-4a64-8488-d07a0266e48f",
            "type": {
                "namespace": "gastrointestinal",
                "name": "diarrheatext"
            },
            "title": "Diarrhea (description)",
            "description": "Additional text descriptions of any diarrhea.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "733061ae-ea7a-4939-b423-03cfc7162c09",
            "type": {
                "namespace": "gastrointestinal",
                "name": "hepatitis"
            },
            "title": "Hepatitis (Y/N)",
            "description": "Hepatitis  (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a4952023-21ba-4670-bdcd-514b3d3c82fe",
            "type": {
                "namespace": "gastrointestinal",
                "name": "hepatitistext"
            },
            "title": "Hepatitis (description)",
            "description": "Additional text descriptions of hepatitis.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3149240c-7b95-4bbb-81ae-53b8c741cc2a",
            "type": {
                "namespace": "gastrointestinal",
                "name": "id"
            },
            "title": "gastrointestinal ID",
            "description": "Unique ID for gastrointestinal assessments",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c5190846-21c0-4819-8bcb-99be5674bcd9",
            "type": {
                "namespace": "gastrointestinal",
                "name": "lastbowelmovement"
            },
            "title": "Last Bowel Movement",
            "description": "Last bowel movement",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1e9937aa-be99-4c97-9d8f-286c4e7bae9b",
            "type": {
                "namespace": "gastrointestinal",
                "name": "liverdisease"
            },
            "title": "Liver disease (Y/N)",
            "description": "Liver disease (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c1eb6087-a4ec-441d-8c57-b1ac4fb2aebb",
            "type": {
                "namespace": "gastrointestinal",
                "name": "liverdiseasetext"
            },
            "title": "Liver Disease (description)",
            "description": "Additional text descriptions of any liver disease.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "858bf5b6-f771-4672-aaf5-8e4992350d1c",
            "type": {
                "namespace": "gastrointestinal",
                "name": "nauseavomiting"
            },
            "title": "Nausea/Vomiting (Y/N)",
            "description": "Nausea/Vomiting (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "66ff6445-bf61-44e9-a661-32810e4a8025",
            "type": {
                "namespace": "gastrointestinal",
                "name": "nauseavomitingtext"
            },
            "title": "Nausea/Vomiting (description)",
            "description": "Additional text descriptions of any nausea and/or vomiting.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2c82974e-1ea1-443e-af28-b879b0d138c9",
            "type": {
                "namespace": "gastrointestinal",
                "name": "normalbowelpattern"
            },
            "title": "Normal bowel pattern",
            "description": "Normal bowel pattern",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9aed27a9-c179-4dc3-b94a-b949979baa78",
            "type": {
                "namespace": "gastrointestinal",
                "name": "pancreatitis"
            },
            "title": "Pancreatitis  (Y/N)",
            "description": "Pancreatitis",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f6ad21f8-f7ad-43c9-a001-83fc7a616e9d",
            "type": {
                "namespace": "gastrointestinal",
                "name": "pancreatitistext"
            },
            "title": "Pancreatitis (description)",
            "description": "Additional text descriptions of pancreatitis.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "16d201e5-f74a-4102-b1f7-5e536a327a25",
            "type": {
                "namespace": "gastrointestinal",
                "name": "ulcers"
            },
            "title": "Ulcers (Y/N)",
            "description": "Ulcers (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1df87330-510d-421d-9731-b8412e68632c",
            "type": {
                "namespace": "gastrointestinal",
                "name": "ulcerstext"
            },
            "title": "Ulcers (description)",
            "description": "Additional text about any ulcers.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4ee740d5-1eda-4ace-a3b1-355245cc0063",
            "type": {
                "namespace": "general",
                "name": "ArrestSequenceID"
            },
            "title": "Arrest Sequence ID",
            "description": "A sequential identifier number assigned to the arrest of a subject.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c106ee75-f18e-48ed-bc85-b75702bfe802",
            "type": {
                "namespace": "general",
                "name": "Duration"
            },
            "title": "Duration (millisec)",
            "description": "A time duration specified in milliseconds.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "00e5c55f-f1ef-4538-8d48-c08d5bcfe4c7",
            "type": {
                "namespace": "general",
                "name": "EndTime"
            },
            "title": "End Time",
            "description": "Time that something ended at.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f5654d30-4231-4c6b-828a-fb373fb062c4",
            "type": {
                "namespace": "general",
                "name": "LastName"
            },
            "title": "LastName_deprecated",
            "description": "LastName",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "73224904-f769-47c6-85f0-d70c519b54cd",
            "type": {
                "namespace": "general",
                "name": "StringID"
            },
            "title": "Id (-d)",
            "description": "A string that uniquely identifies an instance of an entity or association.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d0d226d2-693b-49eb-acfe-2d2b7fe21c67",
            "type": {
                "namespace": "general",
                "name": "Title"
            },
            "title": "Title",
            "description": "Title",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c5a91ff2-31b4-4d87-b0f6-e16d5bd321e2",
            "type": {
                "namespace": "general",
                "name": "color"
            },
            "title": "Color",
            "description": "A color",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "233c15b4-8154-4969-9b9b-ec6028621bfa",
            "type": {
                "namespace": "general",
                "name": "confidence"
            },
            "title": "Confidence",
            "description": "A confidence level",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b05983fa-a6bb-4ac0-8aaf-f03d0771757c",
            "type": {
                "namespace": "general",
                "name": "context"
            },
            "title": "Context",
            "description": "A context",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "29e89dab-2d08-4d19-922f-18b611cd12f1",
            "type": {
                "namespace": "general",
                "name": "date"
            },
            "title": "Date",
            "description": "The date of an event or occurrance.",
            "schemas": [],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5ef69814-cd40-4209-ba7a-04f966c2fd00",
            "type": {
                "namespace": "general",
                "name": "datetime"
            },
            "title": "DateTime",
            "description": "A DateTime object to represent a full date and time, compatible with the ISO8601 standard.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7da04edf-d562-4f18-b1aa-16de48e10452",
            "type": {
                "namespace": "general",
                "name": "deliriumtremenscomments"
            },
            "title": "Delerium tremens (DTS) comments",
            "description": "Additional information on delirium tremens (DTS) can be entered here.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "f43dccfe-7dbe-425a-a2c0-eb104daba964",
            "type": {
                "namespace": "general",
                "name": "entryupdated"
            },
            "title": "Entry Updated",
            "description": "Date entry was last updated",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7bf46d1a-e7db-444f-a0b9-10d4d16e8841",
            "type": {
                "namespace": "general",
                "name": "fevercomments"
            },
            "title": "Fever - comments",
            "description": "Additional information on fever can be included here.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "c70e5c06-412d-4bba-b66e-843dbb980e6d",
            "type": {
                "namespace": "general",
                "name": "formname"
            },
            "title": "Form Name",
            "description": "The name of the form being submitted",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d5dd02a7-d4c4-497a-8301-f95430defa52",
            "type": {
                "namespace": "general",
                "name": "frequency"
            },
            "title": "Frequency",
            "description": "A frequency",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "70d2ff1c-2450-4a47-a954-a7641b7399ae",
            "type": {
                "namespace": "general",
                "name": "fullname"
            },
            "title": "Full Name",
            "description": "An entity's full name, e.g., name of a substance, insurance, or allergen.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5484553b-25f3-4555-b5d2-133f2e270239",
            "type": {
                "namespace": "general",
                "name": "gibleedcomments"
            },
            "title": "GI bleed - comments",
            "description": "Additional information on a GI bleed can be included here.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
            "type": {
                "namespace": "general",
                "name": "id"
            },
            "title": "ID (-d)",
            "description": "A uniquely identifying string, typically in the form of a UUID.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9ad2b9b7-64ab-4aad-88aa-2b153502ca81",
            "type": {
                "namespace": "general",
                "name": "medicallegalissuescomments"
            },
            "title": "Medical or legal issues - comments",
            "description": "Additional information about medical or legal issues can be included here.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "a7ecc119-6f7f-4603-b9ec-68b9141ea114",
            "type": {
                "namespace": "general",
                "name": "notes"
            },
            "title": "Notes",
            "description": "Notes",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e49d422a-62d2-4883-b5e2-ad60e0a603b0",
            "type": {
                "namespace": "general",
                "name": "pin"
            },
            "title": "PIN",
            "description": "A personal identification number",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6e21f4c9-13e9-452e-8f18-d116276aa58d",
            "type": {
                "namespace": "general",
                "name": "result"
            },
            "title": "Result - descriptive text field",
            "description": "A result -  descriptive text field",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "769d977b-7b15-4359-ac26-70746e9a7138",
            "type": {
                "namespace": "general",
                "name": "signaturedatetime"
            },
            "title": "Signature Date/Time",
            "description": "The date and time a signature was recorded",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6c29dee0-f4bf-4bd5-8034-7334f4a3074b",
            "type": {
                "namespace": "general",
                "name": "ssnlast4"
            },
            "title": "Last 4 Digits of SSN",
            "description": "The last four digits of a person's social security number.",
            "schemas": [],
            "datatype": "Int16",
            "piiField": true,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "14908e47-923a-4c87-8d94-5881bf871cc1",
            "type": {
                "namespace": "general",
                "name": "status"
            },
            "title": "Status",
            "description": "A status",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "fc2a3d34-cc9a-45b8-8b44-03932fef0904",
            "type": {
                "namespace": "general",
                "name": "statusnotes"
            },
            "title": "Status Notes",
            "description": "Details about a status",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ee3a7573-aa70-4afb-814d-3fad27cda988",
            "type": {
                "namespace": "general",
                "name": "stringid"
            },
            "title": "Id (-d)",
            "description": "A string that uniquely identifies an instance of an entity or association.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                },
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "54c6076e-bac4-47fe-a19e-3ebd9da28519",
            "type": {
                "namespace": "genitourinary",
                "name": "id"
            },
            "title": "genitourinary ID",
            "description": "Unique ID for genitourinary assessments ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d90d0690-1f09-4d6e-b19d-375f63a23608",
            "type": {
                "namespace": "genitourinary",
                "name": "other"
            },
            "title": "Genitourinary, other notes",
            "description": "Genitourinary, other notes",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "681874dd-ae93-470a-be20-5fa7a88f389b",
            "type": {
                "namespace": "genitourinary",
                "name": "painordifficultyurinating"
            },
            "title": "Pain or difficulty urinating (Y/N)",
            "description": "Pain or difficulty urinating (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3cd2facf-9ae4-4fff-8e97-c0fe6f435193",
            "type": {
                "namespace": "geo",
                "name": "facility_name"
            },
            "title": "Name of Location, Facility, Building, etc.",
            "description": "Name of Location - facility, Building (e.g., hospital) for address",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "63dd667e-566c-4851-9d19-f4bb5f1374e8",
            "type": {
                "namespace": "geo",
                "name": "facility_type"
            },
            "title": "Type of Facility",
            "description": "Type of facility, service setting, or other necessary details",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "7254650d-5267-41ca-ac5d-652ecec7b098",
            "type": {
                "namespace": "guardian",
                "name": "email"
            },
            "title": "Parent/Guardian Email",
            "description": "The email of a parent/guardian",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "23020a69-44a5-4c3f-be7e-02293b75ce52",
            "type": {
                "namespace": "guardian",
                "name": "firstname"
            },
            "title": "Parent/Guardian First Name",
            "description": "The first name of a parent/guardian",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "9a886f00-1060-4a07-ba53-9eeeb4f3216e",
            "type": {
                "namespace": "guardian",
                "name": "lastname"
            },
            "title": "Parent/Guardian Last Name",
            "description": "The last name of a parent/guardian",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "516d4c51-6757-45d8-961f-e3ad031736ad",
            "type": {
                "namespace": "guardian",
                "name": "signature"
            },
            "title": "Parent/Guardian Signature",
            "description": "The signature of a guardian",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5806c242-e634-45c0-97e9-19cac76d07a2",
            "type": {
                "namespace": "guardian",
                "name": "signaturedatetime"
            },
            "title": "Parent/Guardian Signature Date/Time",
            "description": "The date and time a guardian's signature was collected",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a4fb2a3a-3cbe-42e4-bfac-8fab2edbd46b",
            "type": {
                "namespace": "health",
                "name": "admissionage"
            },
            "title": "Age at admission (health)",
            "description": "Age at admission.",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "16978972-0c8c-4d3d-83fc-6ba70840ed85",
            "type": {
                "namespace": "health",
                "name": "admissiondate"
            },
            "title": "Admission date (health) (-d)",
            "description": "Date of admission - deprecated",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3e11f6cc-c8f5-4d3d-aea7-76a8e5269300",
            "type": {
                "namespace": "health",
                "name": "biopsychosocialid"
            },
            "title": "biopsychosocial ID",
            "description": "Unique ID for Biopsychosocial assessments",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "aa6b31ce-f283-426c-b0e9-8bc4e459d4c5",
            "type": {
                "namespace": "health",
                "name": "chroniccondition"
            },
            "title": "Chronic condition (Y/N)",
            "description": "Whether one has a chronic condition (Y/N). ",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3bdb9a7d-507c-4b7e-b728-cb3d4b96d837",
            "type": {
                "namespace": "health",
                "name": "chronicdisability"
            },
            "title": "Chronic disability (Y/N)",
            "description": "Whether one has a chronic disability (Y/N).",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a07f05f9-b19d-4e96-9851-c098bfed5050",
            "type": {
                "namespace": "health",
                "name": "developmentaldisability"
            },
            "title": "Developmental disability (Y/N)",
            "description": "Whether one has a developmental disability (Y/N).",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "dbf8c083-c8d7-47d3-bc4b-e91baaeef526",
            "type": {
                "namespace": "health",
                "name": "domesticviolenceoccurrence"
            },
            "title": "Time of domestic violence",
            "description": "The time period where domestic violence occurred.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "293be234-531d-4253-82bc-57498395138c",
            "type": {
                "namespace": "health",
                "name": "fleeingdomesticviolence"
            },
            "title": "Fleeing domestic violence (Y/N)",
            "description": "Whether one is fleeing domestic violence. ",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8cf711e4-5a75-4d02-84be-efc2611191eb",
            "type": {
                "namespace": "health",
                "name": "hivpositive"
            },
            "title": "HIV positive",
            "description": "Whether one is HIV positive (Y/N).",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4c4ebaa2-f15a-49a2-ad60-c9e67d00a4fb",
            "type": {
                "namespace": "health",
                "name": "hospitalname"
            },
            "title": "Hospital name",
            "description": "Name of a hospital",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "84bbabed-c6a2-4166-b743-92dcc743cae7",
            "type": {
                "namespace": "health",
                "name": "insurancecoverage"
            },
            "title": "Insurance coverage (Y/N)",
            "description": "Whether one is covered by insurance (Y/N).",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "19139922-3ff4-4c37-8d81-0bfe7cf10e28",
            "type": {
                "namespace": "health",
                "name": "insurancetype"
            },
            "title": "Type of Health Insurance",
            "description": "Private/HMO, none, Medicare, Medicaid, unknown, etc.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "543bfa76-a46d-4ec0-a00e-75678af4552c",
            "type": {
                "namespace": "health",
                "name": "mentalissue"
            },
            "title": "Mental health / psych issue flag",
            "description": "Whether one has a mental health issue (Y/N). Flags entity as having mental health information.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "672f4964-a91a-4cdd-adbc-58e24411b349",
            "type": {
                "namespace": "health",
                "name": "otherstressorcontributetorelapse"
            },
            "title": "Other stressors contributing to relapse",
            "description": "Other stressors contributing to relapse",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b8a5ac4e-a501-4186-9b64-908844fb8425",
            "type": {
                "namespace": "health",
                "name": "physicaldisability"
            },
            "title": "Physical disability (Y/N)",
            "description": "Whether one has a physical disability (Y/N).",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "04e9becf-0add-440b-b0da-f3cdf559c1d6",
            "type": {
                "namespace": "health",
                "name": "physicaldisabilitydescription"
            },
            "title": "Physical disability description",
            "description": "Details of a physical disability.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b1b546ed-d248-476a-b705-905838550413",
            "type": {
                "namespace": "health",
                "name": "staff"
            },
            "title": "Individual names of medical staff (i.e., doctors, nurses, counselors) ",
            "description": "Individual level names of medical staff (i.e., doctors, nurses, counselors) and clinicians in police departments, including prefixes if desired (i.e., Dr.)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2cb50324-4126-4ee4-9698-c9185e4bad92",
            "type": {
                "namespace": "household",
                "name": "id"
            },
            "title": "Household ID",
            "description": "A unique ID for a household.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5bdfae52-93c6-4b9d-8732-3815a866348a",
            "type": {
                "namespace": "housing",
                "name": "actionitems"
            },
            "title": "Action Items",
            "description": "Action Items for staff members related to client and client's next steps",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "047e196d-695b-4568-8932-ca6932156b1b",
            "type": {
                "namespace": "housing",
                "name": "admittedadults"
            },
            "title": "Admitted adults (#)",
            "description": "Number of adults admitted to a housing program.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "92fcd6e9-6839-42b4-83fa-47716b647ef6",
            "type": {
                "namespace": "housing",
                "name": "admittedchildren"
            },
            "title": "Admitted children (#)",
            "description": "Number of children admitted to a housing program.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b2ba8787-68b4-448a-84a7-04acaf6ad4d5",
            "type": {
                "namespace": "housing",
                "name": "assessmentid"
            },
            "title": "Housing Resident Assessment ID",
            "description": "",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "22d68e05-8579-42b1-a188-c05bfe0773b7",
            "type": {
                "namespace": "housing",
                "name": "chronicallyhomeless"
            },
            "title": "Chronically homeless (Y/N)",
            "description": "Whether chronically homeless (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6407f240-b1a3-48c2-94b1-f0250fa6a092",
            "type": {
                "namespace": "housing",
                "name": "contactdate"
            },
            "title": "Date of contact",
            "description": "Date of contact or interaction with client/advocate",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9ba6cd5e-a6d1-4e21-8065-e353de31855d",
            "type": {
                "namespace": "housing",
                "name": "contactdetails"
            },
            "title": "contact details",
            "description": "Any contact details that referrer can provide for individual that they are referring.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "ff610b7c-54e1-47e1-ba5e-4087b62f5164",
            "type": {
                "namespace": "housing",
                "name": "datehomelessbegan"
            },
            "title": "Date homelessness began (-d)",
            "description": "Approximate date that homelessness began.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e6cdba08-218f-427b-9aa8-ebfcbd5c148a",
            "type": {
                "namespace": "housing",
                "name": "dischargereason"
            },
            "title": "Discharge Reason",
            "description": "The reason a person was dicharged",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8f3d9dbd-6f2e-4f92-bf45-68809ab828d4",
            "type": {
                "namespace": "housing",
                "name": "employment"
            },
            "title": "Employment Status Indicator",
            "description": "Employment Status Indicator - employed, not employed, no longer employed, in good status, volunteer, on probation, etc.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "f369dbc0-1939-4eb6-8a18-bd2c6ab4f03e",
            "type": {
                "namespace": "housing",
                "name": "followupdate"
            },
            "title": "Date of Followup",
            "description": "Date for next follow-up or check-in",
            "schemas": [],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "13925c02-f0ff-4052-9c09-161f39ea5ec2",
            "type": {
                "namespace": "housing",
                "name": "hiredate"
            },
            "title": "Employee Hire Date",
            "description": "Date employee was hired or started working",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cb81457e-c49d-4cd2-9d00-d82a4d1a9028",
            "type": {
                "namespace": "housing",
                "name": "homelesscause"
            },
            "title": "Cause of homelessness",
            "description": "Cause of homelessness",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a6487f5b-5212-4726-a5cd-4ddbf8f8355b",
            "type": {
                "namespace": "housing",
                "name": "indivorfamilytype"
            },
            "title": "Individual/family type",
            "description": "Categories of individuals and families (i.e., adult couple without children, individual female, male household member).",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1ceaf4eb-dace-4b3a-961e-e3fe4beb7c7c",
            "type": {
                "namespace": "housing",
                "name": "lengthofstay"
            },
            "title": "Length of Stay (-d)",
            "description": "Length of a housing stay.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "41b6073c-5198-4465-8338-166f41fd1e54",
            "type": {
                "namespace": "housing",
                "name": "living_arrangements"
            },
            "title": "Living arrangements prior to program",
            "description": "For example: independent living arrangements, dependent, homeless, shelter, unknown (SAMHSA)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "23b2104b-83d1-48e0-b884-a149a7da7315",
            "type": {
                "namespace": "housing",
                "name": "mat"
            },
            "title": "MAT Pharmacological Treatment",
            "description": "Medication-Assisted Treatment (MAT) approach to treat substance use: buprenorphine, suboxone, methadone, naltrexone, etc.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "b470a3c9-016a-44ce-b855-8382ba53dca5",
            "type": {
                "namespace": "housing",
                "name": "matprovider"
            },
            "title": "MAT provider",
            "description": "Medication-Assisted Treatment (MAT) provider",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "c5397609-0124-4c54-8ec9-79f82341d19d",
            "type": {
                "namespace": "housing",
                "name": "monthshomelessorinshelterinpast3yrs"
            },
            "title": "Months homeless/in shelter in past 3 years (-d)",
            "description": "Total number of months homeless or in a shelter in the past 3 years.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "fb03ce47-10b5-4d39-8ccf-96e868a7f1e9",
            "type": {
                "namespace": "housing",
                "name": "nextsteps"
            },
            "title": "Next steps for client (housing)",
            "description": "Next steps for client",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "bca1d47b-abbb-4755-a06c-2e1c15bea118",
            "type": {
                "namespace": "housing",
                "name": "nightbeforeinstreetorshelter"
            },
            "title": "Previous night on street/in shelter",
            "description": "Whether one has spent the previous night on the streets or in a shelter.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "32eba813-7d20-4be1-bc1a-717f99917a5e",
            "type": {
                "namespace": "housing",
                "name": "notes"
            },
            "title": "Notes",
            "description": "Additional notes",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "1ec2ea70-eff1-46d1-a0c4-0e06a0c84bd4",
            "type": {
                "namespace": "housing",
                "name": "numberunstableepisodes"
            },
            "title": "No. unstable housing periods",
            "description": "Number of times one has been on the streets, in an emergency shelter, or supportive housing in the past three years.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7b5a9dac-7111-4825-baeb-13edf11d65b3",
            "type": {
                "namespace": "housing",
                "name": "permanentmoveindate"
            },
            "title": "Permanent Housing Move in Date",
            "description": "Permanent housing move-in date.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "06acbbb5-2c9d-4e6c-a440-a3efa4f4f00e",
            "type": {
                "namespace": "housing",
                "name": "previousresidencelengthofstay"
            },
            "title": "Length of stay at previous residence (-d)",
            "description": "The length of stay at one's previous residence.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e5c16bdb-bddb-4daa-9daf-89a99d227202",
            "type": {
                "namespace": "housing",
                "name": "program"
            },
            "title": "Housing program",
            "description": "A housing program.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "07dcc100-037d-4b6f-9062-35126b2f1318",
            "type": {
                "namespace": "housing",
                "name": "programtype"
            },
            "title": "Program type (housing)",
            "description": "A housing program category.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b63ac291-3a26-4d99-8677-1e1c0f5c44da",
            "type": {
                "namespace": "housing",
                "name": "projecttype"
            },
            "title": "Project type",
            "description": "A housing project type.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f63e82fe-5d2d-44fb-b7fa-d82ab6217d36",
            "type": {
                "namespace": "housing",
                "name": "recoverysupports"
            },
            "title": "Recovery Supports",
            "description": "Programs and organizations supporting client through recovery",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "ffaed27e-6724-42b6-bca6-8e4c7e61a466",
            "type": {
                "namespace": "housing",
                "name": "referraldestination"
            },
            "title": "Referral Destination (Referrals Out)",
            "description": "Organization or provider to which client is referred out for care or services ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "207f0ed8-2627-4c3d-84b0-8e3002d51e0b",
            "type": {
                "namespace": "housing",
                "name": "referralorganization"
            },
            "title": "Organization Providing Referral",
            "description": "Organization or agency providing referral in",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "ce275f55-a4e4-40a2-9825-0fa9ae032b9a",
            "type": {
                "namespace": "housing",
                "name": "referralrelationship"
            },
            "title": "Relationship of Referrer to Client",
            "description": "Self, friend, counselor, physician, probation officer, kin, etc. (note if house resident or member of organization)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "37ff5f8d-3747-4242-8365-f9a09e239ea6",
            "type": {
                "namespace": "housing",
                "name": "residencetype"
            },
            "title": "Residence type (housing)",
            "description": "Housing residence type.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c9937ae9-4602-4c28-b719-3575aad643f4",
            "type": {
                "namespace": "housing",
                "name": "residentid"
            },
            "title": "Resident ID",
            "description": "A unique resident ID.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0965a96a-9799-4093-9020-79b0fa8340a3",
            "type": {
                "namespace": "housing",
                "name": "screen"
            },
            "title": "Resident Screen and Relapse Information",
            "description": "Information on resident screening history, relapse substances and recovery options",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "02379201-8815-489d-a056-37e36d299aae",
            "type": {
                "namespace": "housing",
                "name": "timeintransitionalorpermanentlessthan7nights"
            },
            "title": "Less than 1 week in housing",
            "description": "Whether the time spent in transitional or permanent housing was less than 7 nights.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2a659e04-9a9b-43d7-9585-7bcf6d1cf25d",
            "type": {
                "namespace": "housing",
                "name": "timelessthan90days"
            },
            "title": "Time < 90 days in housing",
            "description": "Whether time spent in a housing program was less than 90 days. ",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e4578982-dac4-4ee3-b997-f8853a4204ee",
            "type": {
                "namespace": "housing",
                "name": "title"
            },
            "title": "Job Title of Employee",
            "description": "Job title of employee (housing)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "314d2bfd-e50e-4965-b2eb-422742fa265c",
            "type": {
                "namespace": "housing",
                "name": "updatedat"
            },
            "title": "Updated At",
            "description": "Date record was updated",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c270d705-3616-4abc-b16e-f891e264b784",
            "type": {
                "namespace": "im",
                "name": "PersonNickName"
            },
            "title": "Person Nickname / Preferred Name",
            "description": "A person's nickname, street name, or alias.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5f122ec5-f8cd-4618-8bfa-3f387141616c",
            "type": {
                "namespace": "incident",
                "name": "enddatetime"
            },
            "title": "End date-time",
            "description": "The  date and time an incident, jail stay, or other event was reported to end.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "19466bb0-eeba-4c69-9ab1-8999b3cb43bf",
            "type": {
                "namespace": "incident",
                "name": "narrative"
            },
            "title": "Incident Narrative",
            "description": "Incident Narrative",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "91106b89-5842-48e4-a21f-ef923557c1b8",
            "type": {
                "namespace": "incident",
                "name": "reporteddatetime"
            },
            "title": "Incident Reported Date-Time (deprecated)",
            "description": "Reported date and time of a criminal justice incident",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "eabab409-8ce7-499f-a4fb-d71356ada13b",
            "type": {
                "namespace": "incident",
                "name": "startdatetime"
            },
            "title": "Start date-time",
            "description": "The  date and time a  criminal justice incident was reported to start. If no separate end date is reported, this is simply the date the incident occurred.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "793dba6e-789c-40c6-afd0-167cf5e73fcf",
            "type": {
                "namespace": "insurance",
                "name": "GroupNumber"
            },
            "title": "Insurance Group Number",
            "description": "Insurance Group Number",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b2c765df-730e-4811-b2b8-e56cce120b5c",
            "type": {
                "namespace": "insurance",
                "name": "MemberIdentification"
            },
            "title": "Insured Member Identification",
            "description": "A person's Insurance member identification.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "461df09b-14fe-4201-abe7-85c7d298fe46",
            "type": {
                "namespace": "insurance",
                "name": "PlanType"
            },
            "title": "InsurancePlanType",
            "description": "InsurancePlanType",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b8ea6a66-2066-4f73-a8db-ae805c59251f",
            "type": {
                "namespace": "insurance",
                "name": "PrescriptionBIN"
            },
            "title": "InsurancePrescriptionBIN",
            "description": "InsurancePrescriptionBIN",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "272eaa42-a372-4202-8819-4718690503c4",
            "type": {
                "namespace": "insurance",
                "name": "PrescriptionGroup"
            },
            "title": "Insurance PrescriptionGroup",
            "description": "Insurance PrescriptionGroup",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9f5a37ed-27a2-46e5-aa20-0e58ff7751c7",
            "type": {
                "namespace": "insurance",
                "name": "PrescriptionPCN"
            },
            "title": "InsurancePrescriptionPCN",
            "description": "InsurancePrescriptionPCN",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3a886c9a-87d7-4d29-816e-72811bf420d9",
            "type": {
                "namespace": "insurance",
                "name": "SequenceID"
            },
            "title": "InsuranceSequenceID",
            "description": "InsuranceSequenceID",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0edd1b3b-ad08-4a7a-87ab-5e467c05d74f",
            "type": {
                "namespace": "insurance",
                "name": "Status"
            },
            "title": "InsuranceStatus",
            "description": "InsuranceStatus",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5892c3a0-4f3d-49dd-80f6-d8de856bb5ce",
            "type": {
                "namespace": "insurance",
                "name": "Type"
            },
            "title": "InsuranceType",
            "description": "Insurance Type HMO PPO etc",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "dc74e5d7-5fed-432c-b129-dcfa3e2c818b",
            "type": {
                "namespace": "j",
                "name": "ArrestAgency"
            },
            "title": "Arrest Agency (-d)",
            "description": "An agency which employs the arresting official.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2c030baf-6624-413a-b971-5dc8f6329108",
            "type": {
                "namespace": "j",
                "name": "ArrestCategory"
            },
            "title": "Arrest Category (-d)",
            "description": "The type of arrest that occurred.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e6eafc89-f9e7-436b-b267-054854c4d564",
            "type": {
                "namespace": "j",
                "name": "ArrestCharge"
            },
            "title": "Arrest Charge",
            "description": "Arrest charge",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "27b1570f-937c-4961-b429-3b21f06e120b",
            "type": {
                "namespace": "j",
                "name": "ArrestLocation"
            },
            "title": "Arrest Location (-d)",
            "description": "A location where a subject was arrested.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3b5c462d-af10-498f-bd12-5a9913754f29",
            "type": {
                "namespace": "j",
                "name": "ArrestSequenceID"
            },
            "title": "Arrest Sequence ID",
            "description": "A sequential identifier number assigned to the arrest of a subject.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f6748439-1049-400d-ac44-7803820289be",
            "type": {
                "namespace": "j",
                "name": "ArrestWarrant"
            },
            "title": "Warrant Number (-d)",
            "description": "Warrant number",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8b2028a3-ea0a-4776-815d-8ff4902a6bdb",
            "type": {
                "namespace": "j",
                "name": "BookingRelease"
            },
            "title": "How Released",
            "description": "A release of a subject from booking or from booking detention.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f9091990-47d5-43e1-a112-a38e181d8dcf",
            "type": {
                "namespace": "j",
                "name": "BookingTelephoneCall"
            },
            "title": "Call Attorney",
            "description": "True if subject called attorney.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cec17b62-2821-4701-ab0b-1bae728d52de",
            "type": {
                "namespace": "j",
                "name": "CaseNumberText"
            },
            "title": "Case Number",
            "description": "An identifying number for a case that this activity is a part of, where the case number belongs to the agency that owns the activity information.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7c804cb8-8b8d-4d8d-98d2-c1c0b38774cc",
            "type": {
                "namespace": "j",
                "name": "ChargeNCICText"
            },
            "title": "NCIC",
            "description": "NCIC Charge Text",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a3482196-c6b1-4cd6-a12e-aba8ba3803c1",
            "type": {
                "namespace": "j",
                "name": "ChargeNarrative"
            },
            "title": "Notes",
            "description": "Charge narrative",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "162a165a-ca23-4c29-bc43-aa65a0ba773e",
            "type": {
                "namespace": "j",
                "name": "ChargeSequenceID"
            },
            "title": "Charge ID",
            "description": "Charge ID",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c9141182-5bdf-4bf4-89d0-88b2191817b0",
            "type": {
                "namespace": "j",
                "name": "CourtEventCase"
            },
            "title": "Court Case ID",
            "description": "Court case ID",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2f8339d6-453b-4a22-a4ec-657d3d7e0b83",
            "type": {
                "namespace": "j",
                "name": "EnforcementOfficialBadgeIdentification"
            },
            "title": "Enforcement Official Badge Identification",
            "description": "An identification used to refer to an enforcement official.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8e410ffd-4ea5-4ea0-b475-e4c73ea9d0a7",
            "type": {
                "namespace": "j",
                "name": "EnforcementOfficialCategoryText"
            },
            "title": "Officer Category",
            "description": "A type of enforcement official.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8c80f4f6-7f6d-40da-97e8-b2330976d7e3",
            "type": {
                "namespace": "j",
                "name": "EnforcementOfficialUnit"
            },
            "title": "Agency (-d)",
            "description": "An enforcement unit to which an enforcement officer is assigned.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "43c61444-69a4-46e7-a334-fe823914e779",
            "type": {
                "namespace": "j",
                "name": "OffenseQualifierText"
            },
            "title": "Offense Qualifier Text",
            "description": "A set of details that further characterizes an offense.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6f7c3c65-0717-4c39-8a40-4152a94f1278",
            "type": {
                "namespace": "j",
                "name": "OffenseViolatedStatute"
            },
            "title": "Offense Violated Statute",
            "description": "A set of details about a statute, rule, or ordinance that was violated as a result of an offense.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "80aabcc7-aed2-499b-bef0-f4519c34155b",
            "type": {
                "namespace": "j",
                "name": "RegisteredOffenderEntryDate"
            },
            "title": "Entry Date",
            "description": "Entry date",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cf97bce4-3aea-4623-b744-2650e2c20348",
            "type": {
                "namespace": "j",
                "name": "Remark"
            },
            "title": "Remark",
            "description": "An informal comment or observation",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ad23db44-065a-4b5a-8433-dd529b57e221",
            "type": {
                "namespace": "j",
                "name": "SentenceModificationProbationIndicator"
            },
            "title": "Probation",
            "description": "Probation",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d9a90e01-9670-46e8-b142-6d0c4871f633",
            "type": {
                "namespace": "j",
                "name": "SentenceRegisterSexOffenderIndicator"
            },
            "title": "Sex Offender",
            "description": "Sex offender",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8ce79ba8-b498-460a-a1b3-325954bb6d4f",
            "type": {
                "namespace": "j",
                "name": "intoxicationlevel"
            },
            "title": "Intoxication Level",
            "description": "Intoxication level",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4fc03a33-2505-484e-9905-c002b249d3e1",
            "type": {
                "namespace": "justice",
                "name": "AgencyCaseNumber"
            },
            "title": "Agency Case #",
            "description": "The Agency Case # for an incident.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "24c003bb-34cf-4fa8-899a-4bc8ec523296",
            "type": {
                "namespace": "justice",
                "name": "ArrestTrackingNumber"
            },
            "title": "Arrest Tracking Number (ATN)",
            "description": "The tracking number of an arrest",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d26c23ae-7864-481a-9fe8-8121ec6a8670",
            "type": {
                "namespace": "justice",
                "name": "Bail"
            },
            "title": "Bail_deprecated",
            "description": "Bail Information",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f3b0f612-4434-4ef6-9ff2-2bf028bf4afd",
            "type": {
                "namespace": "justice",
                "name": "CaseStatus"
            },
            "title": "Case Status",
            "description": "The Case Status for an incident",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0597ec2a-9809-4f7a-b338-011a0a0d220f",
            "type": {
                "namespace": "justice",
                "name": "ChargeStatus"
            },
            "title": "Charge Status",
            "description": "The status of a charge",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c5d24216-6a34-4da2-a872-240006c1d398",
            "type": {
                "namespace": "justice",
                "name": "EventType"
            },
            "title": "Event Type",
            "description": "The type of a charge related event",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "01bbd1ee-edf1-4379-be0c-430eb9e84075",
            "type": {
                "namespace": "justice",
                "name": "OffenderAlcohol"
            },
            "title": "Offender Alcohol",
            "description": "Offender Alcohol",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c9c26fde-b5de-4c65-9456-4553532b0f39",
            "type": {
                "namespace": "justice",
                "name": "ReferralAgency"
            },
            "title": "Referral Agency",
            "description": "The agency that performed the referral.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "32003564-c9d7-482e-ae52-c3291d529a07",
            "type": {
                "namespace": "justice",
                "name": "ReferralDate"
            },
            "title": "Referral Date (-d)",
            "description": "The date when a charge was referred to the courts",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3a765400-e994-48d4-9622-f438b4be38bd",
            "type": {
                "namespace": "justice",
                "name": "ReferralType"
            },
            "title": "Referral Type",
            "description": "The type of referral from agency to another.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2cb2a17a-fcb2-46b6-8279-a33e1d863c35",
            "type": {
                "namespace": "justice",
                "name": "ReleaseComments"
            },
            "title": "Release Comments_deprecated",
            "description": "Release comments",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9b84989f-2e1f-42da-8833-65cf09c5b2d6",
            "type": {
                "namespace": "justice",
                "name": "ReportedDate"
            },
            "title": "Reported Date",
            "description": "The date when an incident was reported to law enforcement",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d76e670b-6342-409f-9235-d22e5abb158c",
            "type": {
                "namespace": "justice",
                "name": "SentencingConditionsMet"
            },
            "title": "Sentencing Conditions Met",
            "description": "Indicates whether sentencing conditions were met or not.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2d07e3f8-02ad-4c5c-87a2-0a80f8b37c89",
            "type": {
                "namespace": "justice",
                "name": "address"
            },
            "title": "Address String",
            "description": "Address of an event",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d7aa079f-a58d-4a61-bba1-df2ebd277498",
            "type": {
                "namespace": "justice",
                "name": "bondamount"
            },
            "title": "Bond Amount",
            "description": "The dollar amount of a bond",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "774a1ce8-1582-4fc4-bb87-6fb7055a4734",
            "type": {
                "namespace": "justice",
                "name": "bonddescription"
            },
            "title": "Bond Description",
            "description": "A description of a bond",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "90cde7b1-8126-43b5-8458-beed5c432661",
            "type": {
                "namespace": "justice",
                "name": "cadnumber"
            },
            "title": "CAD number",
            "description": "Police CAD call number.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4e897a5f-27e9-4fad-898b-35e367d2182a",
            "type": {
                "namespace": "justice",
                "name": "communityservice"
            },
            "title": "Community Service",
            "description": "Community service sentence details",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "72172d6b-6eba-487a-9269-81b0853892ba",
            "type": {
                "namespace": "justice",
                "name": "concurrentconsecutive"
            },
            "title": "Concurrent / Consecutive",
            "description": "Indicates whether a sentence is to be served concurrently or consecutively",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "180c4d7f-8e08-441b-a03e-dba008a12ad8",
            "type": {
                "namespace": "justice",
                "name": "condition1"
            },
            "title": "Condition 1",
            "description": "The first condition",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "24f3cbc3-78bf-4fc9-9bfd-9b6a49cc8355",
            "type": {
                "namespace": "justice",
                "name": "condition2"
            },
            "title": "Condition 2",
            "description": "The second condition",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8d82115a-e33f-4fda-b0cf-35d82145bb3d",
            "type": {
                "namespace": "justice",
                "name": "condition3"
            },
            "title": "Condition 3",
            "description": "The third condition",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8043ac35-1976-4c8e-a196-9a9dd739523e",
            "type": {
                "namespace": "justice",
                "name": "conditionslevel"
            },
            "title": "Conditions Level",
            "description": "The level of conditions",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "07753fee-5406-4409-8a7c-128a1c58c17f",
            "type": {
                "namespace": "justice",
                "name": "courtcasenumber"
            },
            "title": "Court Case #",
            "description": "The Court Case # for an incident.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4fd36933-02e0-4aaa-b291-959336b154cd",
            "type": {
                "namespace": "justice",
                "name": "courtcasetype"
            },
            "title": "Court Case Type",
            "description": "The Court Case Type for an incident.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c2e44ccc-1a2a-4cdb-944a-ba063e98714f",
            "type": {
                "namespace": "justice",
                "name": "courtroom"
            },
            "title": "Courtroom",
            "description": "A courtroom number",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0034d3e1-7ba5-4535-ba6b-3c832ddb73f5",
            "type": {
                "namespace": "justice",
                "name": "dacasenumber"
            },
            "title": "DA Case #",
            "description": "The DA Case # for an incident.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4cd0ab91-5ecf-4a9a-a295-742db7be6163",
            "type": {
                "namespace": "justice",
                "name": "disposition"
            },
            "title": "Disposition",
            "description": "The disposition of a charge",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d5f5843c-7102-4b28-9e65-cfe277f34de1",
            "type": {
                "namespace": "justice",
                "name": "dispositiondate"
            },
            "title": "Disposition Date",
            "description": "The date of a disposition",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "63bb0e5a-3b42-43f1-bd4c-5f9ab6ada66e",
            "type": {
                "namespace": "justice",
                "name": "dmfsecondaryholdcharges"
            },
            "title": "DMF Release Exception Charges Met (Y/N)",
            "description": "Indicates whether current charges qualify for a secondary hold.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "07acc554-ba50-4d42-b2ad-06ddfbab9636",
            "type": {
                "namespace": "justice",
                "name": "dmfsecondaryholdchargesnotes"
            },
            "title": "DMF Secondary Hold Charges - Notes",
            "description": "Notes on current charges that qualify for a secondary hold option.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "16a5c35b-7dd0-41a0-bec3-9561f30c7614",
            "type": {
                "namespace": "justice",
                "name": "dmfsecondaryreleasecharges"
            },
            "title": "DMF Exception Charges Met (Y/N)",
            "description": "Indicates whether current charges qualify for a secondary release.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7aec427d-92c8-467a-9be8-fc23f4847b91",
            "type": {
                "namespace": "justice",
                "name": "dmfsecondaryreleasechargesnotes"
            },
            "title": "DMF Secondary Release Charges - Notes",
            "description": "Notes on current charges that qualify for a secondary release option.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "969d9ce4-a455-4314-8da6-ad843ca09783",
            "type": {
                "namespace": "justice",
                "name": "dmfstep2"
            },
            "title": "DMF Step 2 Charges Met (Y/N)",
            "description": "Indicates whether any current charge matches one of the charges that triggers step 2 of a DMF.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "59c3c6f2-9309-4302-912d-902e6883793a",
            "type": {
                "namespace": "justice",
                "name": "dmfstep2notes"
            },
            "title": "DMF Step 2 Charges Met - Notes",
            "description": "Notes on any charges meeting the ones listed in step 2 of a DMF",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b70c96ea-4f8f-4650-8a2a-fee6ecea7aa8",
            "type": {
                "namespace": "justice",
                "name": "dmfstep4"
            },
            "title": "DMF Step 4 Charges Met (Y/N)",
            "description": "Indicates whether any current charge matches one of the charges that triggers step 4 of a DMF.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8f8aaa2d-68a5-4f4f-8931-f3f78eac3913",
            "type": {
                "namespace": "justice",
                "name": "dmfstep4notes"
            },
            "title": "DMF Step 4 Charges - Notes",
            "description": "Notes on any charges meeting the ones listed in step 4 of a DMF",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f37ce91f-cfd7-4190-839a-bfab3b5b82fd",
            "type": {
                "namespace": "justice",
                "name": "extradited"
            },
            "title": "Extradited (Y/N)",
            "description": "Indicates whether a person was extradited.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "fc8a6936-c47b-443d-aced-761d41399d79",
            "type": {
                "namespace": "justice",
                "name": "extraditednotes"
            },
            "title": "Extradited Notes",
            "description": "Notes about a person being extradited",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ec5656b3-c10a-481a-9dfb-989622b5d343",
            "type": {
                "namespace": "justice",
                "name": "failurereason"
            },
            "title": "Failure Reason",
            "description": "Reason for failure",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "33a587ce-ca9d-4e68-a878-b4c704947577",
            "type": {
                "namespace": "justice",
                "name": "incarcerationdays"
            },
            "title": "Incarceration Length (Days)",
            "description": "Length of incarceration in days",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "086bbcea-d443-452e-946c-f73108c16d85",
            "type": {
                "namespace": "justice",
                "name": "incarcerationlocation"
            },
            "title": "Incarceration Location",
            "description": "Location of an incarceration",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a5ca682a-3d5a-4b6a-86be-a541c33a2439",
            "type": {
                "namespace": "justice",
                "name": "incarcerationmonths"
            },
            "title": "Incarceration Length (Months)",
            "description": "Length of an incarceration in months",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "aeded0e9-cdec-428a-a90a-c62f0546ac08",
            "type": {
                "namespace": "justice",
                "name": "incarcerationstartdate"
            },
            "title": "Incarceration Start Date",
            "description": "Date on an incarceration start",
            "schemas": [],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2c7e8f24-d292-48a6-b0d0-c3c878be019d",
            "type": {
                "namespace": "justice",
                "name": "incarcerationsuspendeddays"
            },
            "title": "Incarceration Suspended (Days)",
            "description": "Length of an incarceration suspension in days",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "abe359a9-1508-47c2-a7bd-1a9ff7dd5d39",
            "type": {
                "namespace": "justice",
                "name": "incarcerationsuspendedmonths"
            },
            "title": "Incarceration Suspended (Months)",
            "description": "Length of an incarceration suspension in months",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ca4e7ec9-9609-492f-8657-cbc225df9e29",
            "type": {
                "namespace": "justice",
                "name": "incarcerationsuspendedyears"
            },
            "title": "Incarceration Suspended (Years)",
            "description": "Length of an incarceration suspension in years",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8fb52b9f-9491-47b8-805e-c6d077b34d8a",
            "type": {
                "namespace": "justice",
                "name": "incarcerationyears"
            },
            "title": "Incarceration Length (Years)",
            "description": "Length of an incarceration in years",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d4bf1bd6-92f2-4a7f-baff-d0182fd14d39",
            "type": {
                "namespace": "justice",
                "name": "judgeacceptedrecommendation"
            },
            "title": "Judge Accepted Recommendation",
            "description": "A boolean  value for whether or not the PSA recommendation was accepted by the judge",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c5ac112a-f797-439b-bb00-ad188ef87f21",
            "type": {
                "namespace": "justice",
                "name": "licensecomment"
            },
            "title": "License Comment",
            "description": "License comment",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6b8551c0-1999-4a6f-aa4e-3e745302a246",
            "type": {
                "namespace": "justice",
                "name": "licenseeffectivedate"
            },
            "title": "License Effective Date",
            "description": "Date a license is effective",
            "schemas": [],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5bed5489-98ea-4fc7-bf68-58d0e3c7d203",
            "type": {
                "namespace": "justice",
                "name": "licensepossessedbycourt"
            },
            "title": "License Possessed by Court",
            "description": "License was possessed by court",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d3781367-e327-4135-86e8-3259bcf7bae0",
            "type": {
                "namespace": "justice",
                "name": "licenserevoked"
            },
            "title": "License Revoked (Y/N)",
            "description": "License Revoked",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "279d099a-5561-4834-9567-99ab08540a47",
            "type": {
                "namespace": "justice",
                "name": "licensesuspended"
            },
            "title": "License Suspended (Y/N)",
            "description": "License suspended",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5ea92743-6c40-4eb3-a178-94b68896b195",
            "type": {
                "namespace": "justice",
                "name": "licensesuspendeddays"
            },
            "title": "License Suspended (Days)",
            "description": "Days a license is suspended",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ca840a75-3f8a-41f5-86ce-ff341ed01a0d",
            "type": {
                "namespace": "justice",
                "name": "licensesuspendedmonths"
            },
            "title": "License Suspended (Months)",
            "description": "Months a license is suspended",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1b70a3fa-1da5-46e3-b4b4-36f1aec0761f",
            "type": {
                "namespace": "justice",
                "name": "licensesuspendedyears"
            },
            "title": "License Suspended (Years)",
            "description": "Years a license is suspended",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1819ceea-97c5-450b-b5f1-91982d103e71",
            "type": {
                "namespace": "justice",
                "name": "licensetype"
            },
            "title": "License Type",
            "description": "Type of a license",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "dcec451c-8e42-4ca0-af1d-7273530b26f1",
            "type": {
                "namespace": "justice",
                "name": "licenseworkpermit"
            },
            "title": "License Work Permit",
            "description": "License work permit",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4bf71bea-8ea7-4acb-b91c-d10f2c1654eb",
            "type": {
                "namespace": "justice",
                "name": "offensereportid"
            },
            "title": "Offense Report Number",
            "description": "Local offense report number, if applicable. ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "42534a26-578b-4958-a7a8-3475e1597623",
            "type": {
                "namespace": "justice",
                "name": "plea"
            },
            "title": "Plea",
            "description": "A plea entered for a charge",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2850d352-48af-47d4-8cd1-bde20f134ecc",
            "type": {
                "namespace": "justice",
                "name": "pleadate"
            },
            "title": "Plea Date",
            "description": "The date of a plea",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7d396794-6c42-4c93-bcc5-df3ba2b967ad",
            "type": {
                "namespace": "justice",
                "name": "sbi"
            },
            "title": "SBI Number",
            "description": "SBI number",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0243a08b-f1ef-40f8-8162-e97d80d3119b",
            "type": {
                "namespace": "justice",
                "name": "sentenceconditions"
            },
            "title": "Sentence Conditions",
            "description": "Conditions of a sentence",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "213fb0dc-0ea2-4f7d-95dc-e0e937482eef",
            "type": {
                "namespace": "justice",
                "name": "severity"
            },
            "title": "Severity",
            "description": "The severity of a charge",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ce2d54c2-8d45-4e75-b924-b15ce48c0407",
            "type": {
                "namespace": "justice",
                "name": "suretyamount"
            },
            "title": "Surety Amount",
            "description": "The surety dollar amount for a bond.",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c7d2c503-651d-483f-8c17-72358bcfc5cc",
            "type": {
                "namespace": "justice",
                "name": "xref"
            },
            "title": "XREF",
            "description": "Cross-reference Identifier",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "34888d10-4c3b-4400-9426-23dfc3d0f8e5",
            "type": {
                "namespace": "location",
                "name": "Address"
            },
            "title": "FullAddress (-d)",
            "description": "Unique ID via concatenation of street address, city, state, zip.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                },
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1b01df3d-a9fe-4e89-bd2d-f33de19fb50a",
            "type": {
                "namespace": "location",
                "name": "Intersection"
            },
            "title": "AddressIntersection",
            "description": "Cross streets, if given.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "1dca539c-39a5-4cb2-b4d0-5e2c693c4947",
            "type": {
                "namespace": "location",
                "name": "Mailing"
            },
            "title": "MailingAddress",
            "description": "Whether a mailing address.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0f6418ca-4563-4c58-b272-faa8edd7e0ce",
            "type": {
                "namespace": "location",
                "name": "Street"
            },
            "title": "StreetAddress (-d)",
            "description": "Street address.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "25431c60-6c26-4210-a422-569c5226ba7e",
            "type": {
                "namespace": "location",
                "name": "address"
            },
            "title": "Unparsed location address",
            "description": "Location of an event",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "376f727c-5329-4c92-87c9-a3b4d177ee3c",
            "type": {
                "namespace": "location",
                "name": "addressline2"
            },
            "title": "Location/Address Line 2",
            "description": "Location or Address Line 2 - Apartment No, Suite Number, Business Name, etc",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "90203091-5efd-40c4-9372-9782746cd427",
            "type": {
                "namespace": "location",
                "name": "altitude"
            },
            "title": "Altitude",
            "description": "The altitude of a location",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4dfd7e4f-207a-4591-8cf3-2e5c9c7d0e53",
            "type": {
                "namespace": "location",
                "name": "apartment"
            },
            "title": "Apartment or dwelling unit information",
            "description": "Identifying information on apartment, room, or other dwelling unit",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6a85d1e1-fda5-4c9c-9e2e-2dda4ed8d3d1",
            "type": {
                "namespace": "location",
                "name": "city"
            },
            "title": "City",
            "description": "A city",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "64fb51c4-a1f1-4a52-aeda-73b7ff071c54",
            "type": {
                "namespace": "location",
                "name": "intersection"
            },
            "title": "Intersection",
            "description": "Intersection",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "06083695-aebe-4a56-9b98-da6013e93a5e",
            "type": {
                "namespace": "location",
                "name": "latitude"
            },
            "title": "Latitude (-d)",
            "description": "Latitude",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e8f9026a-2494-4749-84bb-1499cb7f215c",
            "type": {
                "namespace": "location",
                "name": "longitude"
            },
            "title": "Longitude (-d)",
            "description": "Longitude",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "90d8c6f6-385d-4064-a582-ad95a0ccc040",
            "type": {
                "namespace": "location",
                "name": "name"
            },
            "title": "Location String",
            "description": "Location of an event",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e96f4905-e323-47b6-be43-2a356fd82e08",
            "type": {
                "namespace": "location",
                "name": "state"
            },
            "title": "State",
            "description": "A state",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3677e8ea-5da9-41f3-8b56-006548564eac",
            "type": {
                "namespace": "location",
                "name": "street"
            },
            "title": "Street Address",
            "description": "Location or Address Line 1 - A Street Address ",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "132820b9-6f20-40c8-945f-9ca2ec45e233",
            "type": {
                "namespace": "location",
                "name": "zip"
            },
            "title": "Zip",
            "description": "A zip",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "90eaf97d-68e8-425b-b190-7caa9460b67f",
            "type": {
                "namespace": "media",
                "name": "audio"
            },
            "title": "Audio Sample",
            "description": "A clip of audio.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f2cb1874-3868-4917-94ce-5263b0357d8e",
            "type": {
                "namespace": "media",
                "name": "behavior_after"
            },
            "title": "Child's behavior after media activity",
            "description": "Categorical variable describing child's behavior just after media activity",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "0ee66bf8-7158-4b33-9cbf-63682291536c",
            "type": {
                "namespace": "medical",
                "name": "DiagnosisID"
            },
            "title": "DiagnosisID",
            "description": "DiagnosisID",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ef65c640-9aed-4faf-8c7e-5db1866efaca",
            "type": {
                "namespace": "medical",
                "name": "HistoryID"
            },
            "title": "Medical Condition ID",
            "description": "Medical Condition ID",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1c92fc4e-942a-4e1e-8373-7350dcda0344",
            "type": {
                "namespace": "medical",
                "name": "InitialAssessmentID"
            },
            "title": "InitialAssessmentID",
            "description": "InitialAssessmentID",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e391a565-cb3c-4076-abfb-6817ed2ff5b0",
            "type": {
                "namespace": "medical",
                "name": "SmokeCigarettes_deprecated"
            },
            "title": "Smoke Cigarettes",
            "description": "Smoke Cigarettes",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4c0f5721-64be-4c3c-856e-d6c86d55ba89",
            "type": {
                "namespace": "medical",
                "name": "TreatmentLength"
            },
            "title": "TreatmentLength",
            "description": "TreatmentLength",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c1b45114-dc5d-4989-877b-875e580cd25e",
            "type": {
                "namespace": "medical",
                "name": "TreatmentOrderDescription"
            },
            "title": "TreatmentOrderDescription",
            "description": "TreatmentOrderDescription",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5c96b76d-1a75-4d74-958b-3feccb75b17a",
            "type": {
                "namespace": "medical",
                "name": "TreatmentOrderID"
            },
            "title": "TreatmentOrderID",
            "description": "TreatmentOrderID",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2d975f4a-a244-4651-909c-3f4eb7ec27cc",
            "type": {
                "namespace": "medical",
                "name": "agefirstused"
            },
            "title": "Age of first use",
            "description": "Age of first use (e.g., cigarettes)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4f9a1ed5-377b-45d1-9014-2a7aafd76f74",
            "type": {
                "namespace": "medical",
                "name": "allergyreactionseverity"
            },
            "title": "Allergy severity",
            "description": "The severity level of an allergic reaction, e.g., mild, moderate, severe or moderate-to-severe.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "148f7999-db89-49c0-b847-12d4ac92803b",
            "type": {
                "namespace": "medical",
                "name": "allergyreactiontype"
            },
            "title": "Allergic reaction",
            "description": "Types of allergic reactions such as rhinitis (hay fever), eczema, hives, asthma or anaphylaxis.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "631c1f02-3991-4644-a9d5-28aa16103ab9",
            "type": {
                "namespace": "medical",
                "name": "cigarettesperday"
            },
            "title": "Cigarettes Per Day",
            "description": "Cigarettes Per Day",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8fa29b8e-0bc1-48d4-89d7-0048dffb2c9a",
            "type": {
                "namespace": "medical",
                "name": "hardofhearing"
            },
            "title": "Hard of Hearing (Y/N)",
            "description": "Whether someone is hard of hearing (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6b947ce1-fc08-4534-8189-1034f39ec2ac",
            "type": {
                "namespace": "medical",
                "name": "medicationtakenasprescribed"
            },
            "title": "Medication Taken As Prescribed",
            "description": "Whether medication is being taken as prescribed.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f64e1a87-b9e0-4634-af59-30eddcc9c7b8",
            "type": {
                "namespace": "medical",
                "name": "provider_firstname"
            },
            "title": "First name of provider",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "1ae3a121-f61b-43b4-8ca4-b95dd503fa9c",
            "type": {
                "namespace": "medical",
                "name": "provider_lastname"
            },
            "title": "Last name of provider",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "63c62fb4-aa1e-4393-bc7e-b8a53986ed0f",
            "type": {
                "namespace": "medical",
                "name": "servicesetting"
            },
            "title": "Service Setting",
            "description": "ER - Inpatient, ER - Outpatient, Detox, Amulatory, Outpatient, etc.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "502b0172-e6bf-42f1-a03f-ea9045909360",
            "type": {
                "namespace": "medical",
                "name": "smokecigarettes"
            },
            "title": "Smoke cigarettes (Y/N)",
            "description": "whether someone smokes cigarettes (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f2c3c58f-e643-4990-9297-e0f009a67f86",
            "type": {
                "namespace": "medical",
                "name": "suicidalideation"
            },
            "title": "Suicidal Ideation (Y/N)",
            "description": "Suicidal Ideation (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cf7a0bbe-db1e-4561-b5b1-c05d16c31091",
            "type": {
                "namespace": "medical",
                "name": "wearglasses"
            },
            "title": "Wear Glasses (Y/N)",
            "description": "Whether someone wears glasses (y/n)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "419348da-1353-47e6-921a-e5f92a71b18d",
            "type": {
                "namespace": "medication",
                "name": "Dosage"
            },
            "title": "medication Dosage",
            "description": "medication Dosage",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "18d5e463-4421-45cc-b499-2603596b079e",
            "type": {
                "namespace": "medication",
                "name": "Regimen"
            },
            "title": "medication Regimen",
            "description": "medication Regimen",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "dce69615-be50-48c2-8540-f2437784b872",
            "type": {
                "namespace": "medication",
                "name": "Type"
            },
            "title": "medication Type",
            "description": "medication Type",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "14395b33-f0b3-4d1c-a415-cbcfb2ce3965",
            "type": {
                "namespace": "medication",
                "name": "id"
            },
            "title": "medication ID",
            "description": "Unique ID for a medication.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "16e93eed-4aa4-43bd-810c-ac03e5006c1d",
            "type": {
                "namespace": "mock",
                "name": "drugpresent"
            },
            "title": "Drug present",
            "description": "Drug present",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "36fafc9e-1320-4d16-b0f3-d592f4772f58",
            "type": {
                "namespace": "mock",
                "name": "symptoms"
            },
            "title": "Mock symptoms",
            "description": "Mock symptoms",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cc80d2a2-d2ad-40c0-8c2d-f0a6566a0124",
            "type": {
                "namespace": "mock",
                "name": "temp"
            },
            "title": "mock.temp",
            "description": "Mock temp",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "71382fda-aa76-4fd0-97e8-d1b27a677df5",
            "type": {
                "namespace": "musculoskeletal",
                "name": "backproblemsdescription"
            },
            "title": "Back Problems Description",
            "description": "Back Problems Description",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8f992ecf-cf98-4768-8156-0a6c361de3f5",
            "type": {
                "namespace": "musculoskeletal",
                "name": "fractureinjury"
            },
            "title": "Fracture/Injury (Y/N)",
            "description": "Fracture/Injury (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f1f72490-acfe-4261-bdb7-5109d1cb1f6e",
            "type": {
                "namespace": "musculoskeletal",
                "name": "fractureinjurydescription"
            },
            "title": "Fracture/Injury Description",
            "description": "Fracture/Injury Description",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "aff55df1-9a46-4229-b17c-25e56c5ec3bc",
            "type": {
                "namespace": "musculoskeletal",
                "name": "id"
            },
            "title": "musculoskeletal ID",
            "description": "Unique ID for musculoskeletal assessments",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1e6ff0f0-0545-4368-b878-677823459e57",
            "type": {
                "namespace": "nc",
                "name": "PersonBirthDate"
            },
            "title": "Person Birth Date",
            "description": "A date a person was born.",
            "schemas": [],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cf4598e7-5bbe-49f7-8935-4b1a692f6111",
            "type": {
                "namespace": "nc",
                "name": "PersonBirthPlace"
            },
            "title": "Birth Place",
            "description": "The birth place of a person.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1407ac70-ea63-4879-aca4-6722034f0cda",
            "type": {
                "namespace": "nc",
                "name": "PersonEthnicity"
            },
            "title": "Person Ethnicity",
            "description": "A person's ethnicity",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ac37e344-62da-4b50-b608-0618a923a92d",
            "type": {
                "namespace": "nc",
                "name": "PersonEyeColorText"
            },
            "title": "Person Eye Color",
            "description": "The eye color of a person.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e9a0b4dc-5298-47c1-8837-20af172379a5",
            "type": {
                "namespace": "nc",
                "name": "PersonGivenName"
            },
            "title": "Given Name",
            "description": "A first name of a person.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "8293b7f3-d89d-44f5-bec2-6397a4c5af8b",
            "type": {
                "namespace": "nc",
                "name": "PersonHairColorText"
            },
            "title": "Person Hair Color",
            "description": "The hair color of a person.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f0a6a588-aee7-49a2-8f8e-e5209731da30",
            "type": {
                "namespace": "nc",
                "name": "PersonHeightMeasure"
            },
            "title": "Person Height Measure",
            "description": "A measurement of the height of a person.",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d0935a7e-efd3-4903-b673-0869ef527dea",
            "type": {
                "namespace": "nc",
                "name": "PersonMiddleName"
            },
            "title": "Middle Name",
            "description": "A middle name of a person.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "f950d05a-f4f2-451b-8c6d-56e78bba8b42",
            "type": {
                "namespace": "nc",
                "name": "PersonRace"
            },
            "title": "Person Race",
            "description": "The reported race of a person.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6ec154f8-a4a1-4df2-8c57-d98cbac1478e",
            "type": {
                "namespace": "nc",
                "name": "PersonSex"
            },
            "title": "Person Sex",
            "description": "A person's sex (i.e., sex at birth, M/F)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d3f3f3de-dc1b-40da-9076-683ddbfeb4d8",
            "type": {
                "namespace": "nc",
                "name": "PersonSuffix"
            },
            "title": "Suffix for person",
            "description": "Suffix for a person.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7b038634-a0b4-4ce1-a04f-85d1775937aa",
            "type": {
                "namespace": "nc",
                "name": "PersonSurName"
            },
            "title": "Surname",
            "description": "A last name or family name of a person.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "9b55f541-416c-4ab2-8d6e-b30e547eecb4",
            "type": {
                "namespace": "nc",
                "name": "PersonWeightMeasure"
            },
            "title": "Person Weight",
            "description": "A measurement of a person's weight.",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "481f59e4-e146-4963-a837-4f4e514df8b7",
            "type": {
                "namespace": "nc",
                "name": "SSN"
            },
            "title": "SocialSecurityNumber",
            "description": "The reported social security number of a subject.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
            "type": {
                "namespace": "nc",
                "name": "SubjectIdentification"
            },
            "title": "Person ID",
            "description": "A unique identification for every person.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "929bf616-8189-4550-9a41-6b1ba3c1ed50",
            "type": {
                "namespace": "nc",
                "name": "SystemUserName"
            },
            "title": "Release Officer Username",
            "description": "Release officer username.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e823bc68-f7b8-40e0-9c77-076414e46467",
            "type": {
                "namespace": "nc",
                "name": "complexion"
            },
            "title": "Person complexion",
            "description": "A person's complexion as recorded, if this information is recorded.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "fe48224c-751f-4dfb-afd5-d856c27705a3",
            "type": {
                "namespace": "neurological",
                "name": "DeliriumTremens"
            },
            "title": "DeliriumTremens",
            "description": "DeliriumTremens",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d36bce87-c279-422d-826d-ea9ca95397a5",
            "type": {
                "namespace": "neurological",
                "name": "extremitiesnumbnesstingling"
            },
            "title": "Numbness/Tingling in Extremities (Y/N)",
            "description": "Numbness/Tingling in Extremities (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a5fe6140-c95a-4867-8377-5edc90f74364",
            "type": {
                "namespace": "neurological",
                "name": "historyofdizziness"
            },
            "title": "History of dizziness (Y/N)",
            "description": "History of dizziness (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2f0460f8-b003-4e1f-a907-c6b47eceecfb",
            "type": {
                "namespace": "neurological",
                "name": "historyofdizzinessnotes"
            },
            "title": "Details on dizziness",
            "description": "Details on dizziness",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f61646db-35d0-4bd7-91e3-da3902e390d1",
            "type": {
                "namespace": "neurological",
                "name": "historyoffalls"
            },
            "title": "History of falls (Y/N)",
            "description": "History of falls (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "da502ae2-e5ad-4d93-8ad0-0ddf18979781",
            "type": {
                "namespace": "neurological",
                "name": "historyoffallsnotes"
            },
            "title": "History of falls (comments)",
            "description": "Details on patient history of falls",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c78650e9-8bbc-4d84-9f8f-a0555a1c928c",
            "type": {
                "namespace": "neurological",
                "name": "historyofheadaches"
            },
            "title": "History of headaches (Y/N)",
            "description": "History of headaches (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8ff8ae2c-5d1e-46ba-80c1-913fd5ee10c0",
            "type": {
                "namespace": "neurological",
                "name": "historyofheadachesnotes"
            },
            "title": "Details on history of headaches",
            "description": "Details on history of headaches",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5e01f5c0-73ee-42fc-8425-5ba7ab0fe846",
            "type": {
                "namespace": "neurological",
                "name": "historyofneuropathy"
            },
            "title": "History of neuropathy (Y/N)",
            "description": "History of neuropathy (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "49b25d0a-e874-4308-9013-db5d178638da",
            "type": {
                "namespace": "neurological",
                "name": "historyofseizures"
            },
            "title": "History of seizures (Y/N)",
            "description": "History of seizures (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "60067ff0-31bb-47d9-97f1-fd3b89e36045",
            "type": {
                "namespace": "neurological",
                "name": "id"
            },
            "title": "Neurological ID",
            "description": "Unique ID for neurological assessment",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cf83fe38-1661-41b1-97e9-6f4f732b034c",
            "type": {
                "namespace": "neurological",
                "name": "sleeppattern"
            },
            "title": "Sleep Patterns",
            "description": "Question on one's sleep patterns, from the NSPL Suicide Risk Assessment standards (Suicidal Capability component) Decreased sleep can be a symptom of extreme agitation or rage.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "60bcb7e1-297a-4631-bb69-11d54362fa6a",
            "type": {
                "namespace": "nutritional",
                "name": "id"
            },
            "title": "Nutritional ID",
            "description": "Unique identifier for a nutritional assessment",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cd901bfa-d785-4d96-8969-6df2fb69f04e",
            "type": {
                "namespace": "offense",
                "name": "reporteddate"
            },
            "title": "Offense reported date",
            "description": "Date-time and offense is reported.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "db5e822d-9255-43a8-83a3-0f178da477c9",
            "type": {
                "namespace": "ol",
                "name": "abbreviation"
            },
            "title": "Abbreviation",
            "description": "Abbreviation of name",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "c922e41e-8444-4cf2-82d1-99e62f94e479",
            "type": {
                "namespace": "ol",
                "name": "accessible"
            },
            "title": "Accessible (Y/N)",
            "description": "Flag for whether something (e.g., a weapon) is accessible.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "32409c03-12eb-4d11-89ea-bf445de05670",
            "type": {
                "namespace": "ol",
                "name": "accessories"
            },
            "title": "Accessories",
            "description": "Accessories, for a vehicle or other item.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "469e2316-e850-4636-a4b4-01d7bcd69655",
            "type": {
                "namespace": "ol",
                "name": "acokscore"
            },
            "title": "Total AC-OK questions (affirmative answers)",
            "description": "Total # of AC-OK screening questions:  questions to which a patient answers \u201cyes\u201d  (or more specifically, questions with at least one non-\u201cno\u201d answer, since answers can consist of strings) in an emotional and behavioral assessment.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5c58f7b1-83ec-4ddc-b501-25eb3b25c7f6",
            "type": {
                "namespace": "ol",
                "name": "action"
            },
            "title": "Action taken",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "54fa6acb-bd3e-4849-85b7-4eadaf33e112",
            "type": {
                "namespace": "ol",
                "name": "active"
            },
            "title": "Active or Up-to-Date (Y/N)",
            "description": "Active (e.g., whether policy is active)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7ec77a05-c779-407c-9c6d-8890860fcbcf",
            "type": {
                "namespace": "ol",
                "name": "activelydenies"
            },
            "title": "Actively Denies (Y/N)",
            "description": "Yes if the person actively denies any history or knowledge of the subject, no otherwise",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0dde9277-25af-4c3d-980c-936ebb112c0d",
            "type": {
                "namespace": "ol",
                "name": "activity"
            },
            "title": "Activity",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "8869e0e2-4516-453c-aadb-9c05a77d1f91",
            "type": {
                "namespace": "ol",
                "name": "activityenjoyment"
            },
            "title": "Activity Enjoyment",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "b22b41c1-be87-4392-8968-e5e8f5f29f68",
            "type": {
                "namespace": "ol",
                "name": "acuteintoxicationwithdrawalrisk"
            },
            "title": "Acute intoxication withdrawal risk",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b926d899-f3bb-485c-98f1-b5d4ade2d8ef",
            "type": {
                "namespace": "ol",
                "name": "addictionpotential"
            },
            "title": "Potential for addiction",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "40c9935f-7bee-4241-a921-edfe99ec64dc",
            "type": {
                "namespace": "ol",
                "name": "admissiondate"
            },
            "title": "Admission Date (Datetime)",
            "description": "Date of admission; date that begins an episode of care. Datetime property. May sometimes be PII (HIPAA).",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3728048d-b28f-4089-b441-569935339965",
            "type": {
                "namespace": "ol",
                "name": "admissionhistory"
            },
            "title": "Been to facility before / last admission",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d16ed792-851b-42cb-9e82-246869355651",
            "type": {
                "namespace": "ol",
                "name": "admissiontype"
            },
            "title": "Admission type",
            "description": "Admission type",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4974d4ed-a1a2-4c9f-ab1e-17e428a4eadb",
            "type": {
                "namespace": "ol",
                "name": "admitsource"
            },
            "title": "Admit Source",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "383f2d12-ca4f-4e81-9acb-07cd7f0927b1",
            "type": {
                "namespace": "ol",
                "name": "admittedmember"
            },
            "title": "Admitted member (Y/N)",
            "description": "Flag for whether one admits membership into a group, such as a criminal gang (i.e., self-reported).",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "34cf8330-bf25-4d2f-a019-8caf38643bb8",
            "type": {
                "namespace": "ol",
                "name": "admittedmembernotes"
            },
            "title": "Admitted member (description)",
            "description": "Description of how a person admits membership into a group, such as a criminal gang (i.e., self-reported).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c970b856-79e9-45d7-8c47-48e3bd5d0944",
            "type": {
                "namespace": "ol",
                "name": "advancenotice"
            },
            "title": "Advance Notice",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "0afac6ec-8fbe-43c1-a93b-861dfe374596",
            "type": {
                "namespace": "ol",
                "name": "adverseeffects"
            },
            "title": "Adverse Effects (e.g., of a treatment).",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "c2e01b3e-76a3-46ed-9617-0ab4cea5a883",
            "type": {
                "namespace": "ol",
                "name": "affect"
            },
            "title": "Affect (speech / emotional)",
            "description": "Text description of / characteristics of an individual's affect and speech",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "3f0bad2c-69d5-48c9-b066-9f7a3852baea",
            "type": {
                "namespace": "ol",
                "name": "aftercare"
            },
            "title": "Aftercare plans",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "e88f9630-eeb4-4866-98bb-925b6c285739",
            "type": {
                "namespace": "ol",
                "name": "aftercareflag"
            },
            "title": "Aftercare Plans Indicator (Y/N)",
            "description": "aftercare plans y/n",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f29222f7-635c-41d9-9ea0-c90ab182c1f2",
            "type": {
                "namespace": "ol",
                "name": "ageatonset"
            },
            "title": "Age at Onset / Age at Beginning of Time Frame",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "4bbaab0b-971d-498f-b647-612434ccbdc2",
            "type": {
                "namespace": "ol",
                "name": "agent"
            },
            "title": "Agent",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "0875e1ef-32be-4f17-93bb-88d95c5e5c49",
            "type": {
                "namespace": "ol",
                "name": "aggression"
            },
            "title": "Aggression (demeanor)",
            "description": "Open-ended question on one's demeanor and aggression/agitation/rage, from the NSPL Suicide Risk Assessment standards (Suicidal Capability component). ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e40c2fdd-0a40-4069-877d-4c030799943e",
            "type": {
                "namespace": "ol",
                "name": "agitationsedation"
            },
            "title": "Agitation / sedation (RASS scale)",
            "description": "Text description of / characteristics of an individual's level of sedation/agitation during an encounter (Combative+4 Very agitated+3 Agitated+2 Restless+1 Alert and calm0 Drowsy-1 Light sedation-2 Moderate sedation-3 Deep sedation-4 Unarousable sedation)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "bd96f0c8-dbc0-49cd-b3a2-bb3faa9d6860",
            "type": {
                "namespace": "ol",
                "name": "alcoholincrime"
            },
            "title": "Alcohol Present/Used in Crime (Y/N)",
            "description": "Alcohol was found/present during an arrest, in a police incident, or used in a crime. ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e9264f06-9f0c-4196-b857-b4f8621f29f4",
            "type": {
                "namespace": "ol",
                "name": "algorithmname"
            },
            "title": "Algorithm Name",
            "description": "The name of an algorithm used in cryptographic operations.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d45d5c98-ef15-4c28-bb59-7367c293db58",
            "type": {
                "namespace": "ol",
                "name": "alternatestartdate"
            },
            "title": "Alternate start date",
            "description": "An alternate start date (Often occuring with concurrent jailstays).",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1624fc2d-d221-48d2-a7b4-ee94f80a515b",
            "type": {
                "namespace": "ol",
                "name": "altitude"
            },
            "title": "Altitude",
            "description": "",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "853aab80-fa07-4b4e-b322-7e005414fa06",
            "type": {
                "namespace": "ol",
                "name": "ambivalenceforliving"
            },
            "title": "Ambivalence for living",
            "description": "Question on one's ambivalence for living, from the NSPL Suicide Risk Assessment standards (Buffers / Connectedness component). ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "08c84783-afc8-46d2-83ff-f682f65bd01a",
            "type": {
                "namespace": "ol",
                "name": "amipercent"
            },
            "title": "% AMI (-d)",
            "description": "The percent of annual median income (AMI) that a family earns, for whom a low-income housing unit is set aside. ",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "53960699-a9b0-4fbb-918f-f9460362914a",
            "type": {
                "namespace": "ol",
                "name": "amount"
            },
            "title": "Amount",
            "description": "An amount",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e87e1b03-8b82-4d1d-98e3-440304564d9d",
            "type": {
                "namespace": "ol",
                "name": "anhedonia"
            },
            "title": "Anhedonia",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "d352f2e9-f959-4c5d-9a30-588888204c5e",
            "type": {
                "namespace": "ol",
                "name": "anxiety"
            },
            "title": "Anxiety",
            "description": "Open-ended question on one's demeanor and increased anxiety, from the NSPL Suicide Risk Assessment standards (Suicidal Capability component). ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f012662e-45e5-45e6-90c1-85d757c95104",
            "type": {
                "namespace": "ol",
                "name": "anyincomeamount"
            },
            "title": "Any Income ($)",
            "description": "Specified income from any source",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "883dc719-2767-477b-9f81-6697b0dd08f5",
            "type": {
                "namespace": "ol",
                "name": "anythoughtofselfharm"
            },
            "title": "Have you experienced thoughts of harming yourself? (Y/N)  - AC-OK ",
            "description": "Have you ever experienced thoughts of harming yourself?   - AC-OK Screening",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6f1cf64a-0bac-47d3-a74d-289b6df50a1b",
            "type": {
                "namespace": "ol",
                "name": "appdetails"
            },
            "title": "App Details",
            "description": "A JSON object defining details of an app installation for a particular app config",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8005b1f5-0288-4e5a-a516-47467e54500d",
            "type": {
                "namespace": "ol",
                "name": "appeared"
            },
            "title": "Appeared (Y/N)",
            "description": "Indicates whether an appearance occurred",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "10f1516b-336f-4b67-9e1a-37b598001ae3",
            "type": {
                "namespace": "ol",
                "name": "approach"
            },
            "title": "Approach - description (e.g., for ICD-10)",
            "description": "For example, (0) Open; (3) Percutaneous",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "8d7eb104-8abc-4e08-964a-ad3fa84b3e28",
            "type": {
                "namespace": "ol",
                "name": "appropriateness"
            },
            "title": "Appropriateness for Program",
            "description": "Level of appropriateness/readiness for program",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "970610a4-07b3-4600-b219-570978b5765c",
            "type": {
                "namespace": "ol",
                "name": "approvals"
            },
            "title": "Approvals required for status change requests ",
            "description": "Information on status changes that require approvals (e.g., of a supervisor). ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "43ad7228-fc0e-4b59-99c4-20d5ffc17536",
            "type": {
                "namespace": "ol",
                "name": "armed"
            },
            "title": "Armed (Y/N)",
            "description": "Flag for whether someone is armed with a weapon (vs it being merely accessible).",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b5875c05-0bd5-4511-92a4-a33513e612d0",
            "type": {
                "namespace": "ol",
                "name": "arr"
            },
            "title": "Annual Recurring Revenue",
            "description": "ARR",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "275e71f9-15b2-4107-8a15-d28fcedfa7cf",
            "type": {
                "namespace": "ol",
                "name": "arrangement"
            },
            "title": "Arrangement (sleeping arrangement, special arrangements made)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "bd0354d9-e0c9-42ce-ad21-88a6a9450e57",
            "type": {
                "namespace": "ol",
                "name": "arrestableoffense"
            },
            "title": "Arrestable offense (Y/N)",
            "description": "Arrestable offense (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1fe28610-d4f6-4608-99d4-0c2b6e805703",
            "type": {
                "namespace": "ol",
                "name": "arrestcategory"
            },
            "title": "Arrest Category/Type",
            "description": "An arrest category or type",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "30273603-b5be-4277-8ef3-a5540447ca5f",
            "type": {
                "namespace": "ol",
                "name": "arrestdate"
            },
            "title": "Arrest date (-d)",
            "description": "The date and time of an arrest.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "88f6294a-8b73-45e3-a0ec-8ebfb75a930e",
            "type": {
                "namespace": "ol",
                "name": "arrestdatetime"
            },
            "title": "Arrest Date-Time",
            "description": "The date and time of an arrest.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "db6eb03a-2eb5-4eb2-abee-b97147e9778e",
            "type": {
                "namespace": "ol",
                "name": "arrestedindicator"
            },
            "title": "Arrested (Y/N)",
            "description": "Flag for whether someone was arrested or not. (typically for when there was an arrestable offense)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "eca2c6c4-edfb-4a1a-9b62-bf6569f820b3",
            "type": {
                "namespace": "ol",
                "name": "arrestedwithgangmembers"
            },
            "title": "Arrested with gang members (Y/N)",
            "description": "Flag for whether a person has been arrested with known gang members.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8531ffdd-1085-4281-afc4-43627e8fa9bc",
            "type": {
                "namespace": "ol",
                "name": "arrestedwithgangmembersnotes"
            },
            "title": "Arrested with gang members (description)",
            "description": "Description of how a person has been arrested with known gang members.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6cc66500-826b-458c-9d97-580b98b68991",
            "type": {
                "namespace": "ol",
                "name": "asserter"
            },
            "title": "Asserter",
            "description": "Person who asserts this condition (at the time the report is being made). http://hl7.org/fhir/condition-definitions.html#Condition.asserter ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "65ad46f4-fad4-4762-bd07-d4daa9878b67",
            "type": {
                "namespace": "ol",
                "name": "assessmentcheck"
            },
            "title": "Assessment Check / Confirmation",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b22d9428-a103-424f-8885-4f0c976d3b84",
            "type": {
                "namespace": "ol",
                "name": "assets"
            },
            "title": "Assets ($ amount)",
            "description": "Dollar amount of assets",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cf89d88b-138f-4533-94e8-880a6674541b",
            "type": {
                "namespace": "ol",
                "name": "atn"
            },
            "title": "Arrest Tracking Number (ATN)",
            "description": "The 9-digit Arrest Tracking Number (ATN) links defendants to arrests, used by the Department of Public Safety.  This is used by courts, police departments,.. The number is assigned by law enforcement (e.g. Offender Based Tracking Number,\nOffense tracking number, Offender Based Tracking System, Fingerprint Card Number)",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "12a03e63-d114-4593-90d1-bb8bdb68e14b",
            "type": {
                "namespace": "ol",
                "name": "attemptedcompleted"
            },
            "title": "Attempted/Completed",
            "description": "Law enforcement code for whether something was attempted or completed.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4374fb0e-5aab-4fc4-ac27-3d08f55a360f",
            "type": {
                "namespace": "ol",
                "name": "attemptedsuicide"
            },
            "title": "Attempted suicide (Y/N) ",
            "description": "Have you attempted suicide? (Y/N) - Part of AC-OK Screening",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e75d3b82-3d82-485d-b203-984c64b5dc5c",
            "type": {
                "namespace": "ol",
                "name": "attitude"
            },
            "title": "Attitude (description)",
            "description": "Text description of / characteristics of an individual's attitude during an encounter",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "44b84985-9849-4f8e-af7f-8f8e0c9557ff",
            "type": {
                "namespace": "ol",
                "name": "attitudeother"
            },
            "title": "Attitude (other)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d3cc7402-ac19-443b-b7a9-15840a55dcfa",
            "type": {
                "namespace": "ol",
                "name": "audio"
            },
            "title": "Audio Clip",
            "description": "An audio clip",
            "schemas": [],
            "datatype": "Binary",
            "piiField": false,
            "multiValued": true,
            "analyzer": "NOT_ANALYZED",
            "indexed": "NONE"
        },
        {
            "id": "1619fd58-3da5-478e-9e48-34368c2585b7",
            "type": {
                "namespace": "ol",
                "name": "author"
            },
            "title": "Author",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "e092d7b6-6788-46c3-8c0a-f7438745514e",
            "type": {
                "namespace": "ol",
                "name": "authorizing"
            },
            "title": "Authorized entity - Description of authorization or link to entity being authorized",
            "description": "Link to entity being authorized",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "13b5c5a1-8335-4798-ba53-fc855b8f00ec",
            "type": {
                "namespace": "ol",
                "name": "availability"
            },
            "title": "Availability",
            "description": "A period of time or a situation in which an entity is available to be contacted with the given contact information.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "4b550eed-c818-42ee-88a0-14227367c113",
            "type": {
                "namespace": "ol",
                "name": "availablemeans"
            },
            "title": "Available means (suicide)",
            "description": "Question on the availability of means for committing suicide, from the NSPL Suicide Risk Assessment standards (Suicidal Capability component). ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b0884db2-ae90-4a71-9219-e4748d239932",
            "type": {
                "namespace": "ol",
                "name": "axisI"
            },
            "title": "DSM Axis I (Axis 1)",
            "description": "axis I",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2e3ed8a0-0724-438e-89b3-a106e4d5c6f7",
            "type": {
                "namespace": "ol",
                "name": "axisII"
            },
            "title": "DSM Axis II (Axis 2)",
            "description": "axis II",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f989f7f6-45bb-4c95-9a24-a86fb2fdc8a4",
            "type": {
                "namespace": "ol",
                "name": "axisIII"
            },
            "title": "DSM Axis III (Axis 3)",
            "description": "axis III",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3c0b1425-9ce8-499c-ad76-6c7e55b1af40",
            "type": {
                "namespace": "ol",
                "name": "axisiv"
            },
            "title": "DSM Axis IV (Axis 4)",
            "description": "Axis 4V",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f7c5a55d-7c69-49f7-8da1-f9e078c5b95d",
            "type": {
                "namespace": "ol",
                "name": "axisv"
            },
            "title": "DSM Axis V (Axis 5)",
            "description": "",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0aa2e83a-99ec-40fe-b4b7-c07f428746a5",
            "type": {
                "namespace": "ol",
                "name": "badactions"
            },
            "title": "Bad / negative actions",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "f71cefdf-2c4c-41ff-be9e-4658b5854836",
            "type": {
                "namespace": "ol",
                "name": "behaviorafter"
            },
            "title": "Behavior after event / activity",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "04b94629-ea29-4c0d-9317-d985f21e30f4",
            "type": {
                "namespace": "ol",
                "name": "behavioralissue"
            },
            "title": "Behavioral Issue Present",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "2ff485de-62e4-4e07-96eb-4bf2dfb3a7c1",
            "type": {
                "namespace": "ol",
                "name": "behaviorbefore"
            },
            "title": "Behavior before event / activity",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "ef2ae2ee-67b7-412e-a633-e1ff5de51ca0",
            "type": {
                "namespace": "ol",
                "name": "behaviorchange"
            },
            "title": "Behavior Change",
            "description": "Description of any behavior changes.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e41f8c94-5c15-4368-bf1c-08bcd2cccd70",
            "type": {
                "namespace": "ol",
                "name": "bheindicator"
            },
            "title": "BHE Indicator (Y/N)",
            "description": "Indicates whether a charge should trigger a booking hold exception (i.e. automatic release)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "53a91fa5-4b98-4efa-b6bb-62537791eb23",
            "type": {
                "namespace": "ol",
                "name": "bilirubinflag"
            },
            "title": "Bilirubin - flag",
            "description": "Result of screening; based on bilirubin value property, when available. Flag for abnormal results of bilirubin test or screening. Based on bilirubin value property and relevant reference scales, when available. ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7a402be2-175d-473d-bdb7-4fcb8d3fc84d",
            "type": {
                "namespace": "ol",
                "name": "bilirubinvalue"
            },
            "title": "Bilirubin - value",
            "description": "Result of screening. Value measuring the amount of bilirubin in blood or urine. This measure is used to help find the cause of health conditions like jaundice, anemia, and liver disease. Bilirubin is an orange-yellow pigment that occurs normally when part of a red blood cell breaks down. ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f4581819-935c-46f6-b998-135a787601a9",
            "type": {
                "namespace": "ol",
                "name": "birthdate"
            },
            "title": "Person birth date",
            "description": "The birth date of a person",
            "schemas": [],
            "datatype": "Date",
            "piiField": true,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2efc1030-5b57-42eb-9de2-80c81469305d",
            "type": {
                "namespace": "ol",
                "name": "birthmonth"
            },
            "title": "Birth Month",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "fc026364-0bee-41fe-a079-ab6a04d6a6b4",
            "type": {
                "namespace": "ol",
                "name": "birthplace"
            },
            "title": "Person birth place",
            "description": "Person's place of birth.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "0bcd1bab-dd54-48f9-8b50-a3ec3cd85323",
            "type": {
                "namespace": "ol",
                "name": "birthweight"
            },
            "title": "Birth Weight",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6f61a510-98d6-4da3-9c40-a951dd6ddd39",
            "type": {
                "namespace": "ol",
                "name": "birthyear"
            },
            "title": "Birth Year",
            "description": "One's year of birth.",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9a55818f-eb07-4590-9db2-3fcea2477da5",
            "type": {
                "namespace": "ol",
                "name": "bloodpressure"
            },
            "title": "Blood Pressure",
            "description": "Blood pressure (combined systolic and diastolic)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "fc8c40bc-2f17-42b7-998a-014dacbab8f3",
            "type": {
                "namespace": "ol",
                "name": "bloodpressurecategory"
            },
            "title": "Blood pressure - category",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b6e2d7ad-8f54-488b-ba56-0b5fe64696f3",
            "type": {
                "namespace": "ol",
                "name": "bodydescription"
            },
            "title": "Body (description)",
            "description": "Body description",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a47ea847-55a1-4f09-8e84-dff67e1b8083",
            "type": {
                "namespace": "ol",
                "name": "bodypart"
            },
            "title": "Body Part name (e.g., ICD-10)",
            "description": "For example, (S) Subcutaneous Tissue and Fascia, Head and Neck; (V) Subcutaneous Tissue and Fascia, Upper Extremity(W) Subcutaneous Tissue and Fascia, Lower Extremity.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "87c18dcb-94e6-4690-97d5-0800754b79d4",
            "type": {
                "namespace": "ol",
                "name": "bodysystem"
            },
            "title": "Body System name (e.g., ICD-10)",
            "description": "Body system name (e.g., Subcutaneous Tissue and Fascia) - used in ICD-10 PCS coding",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "ff257ab5-ba17-43a6-8730-40351def981f",
            "type": {
                "namespace": "ol",
                "name": "botheredbyactions"
            },
            "title": "Bothered By Actions",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "636fe4de-a596-410c-a51f-10991209e4f8",
            "type": {
                "namespace": "ol",
                "name": "botheredbyperson"
            },
            "title": "Bothered by Person (e.g., Child)",
            "description": "Describes frustration/anger directed at a person (e.g., a child).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "ebe830b0-2ce9-4f84-9c11-3eaba875ee0d",
            "type": {
                "namespace": "ol",
                "name": "branch"
            },
            "title": "Branch or Depantment",
            "description": "Branch or Department",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "cc9ddead-9e6f-4b3b-88a9-8aab20726045",
            "type": {
                "namespace": "ol",
                "name": "breindicator"
            },
            "title": "BRE Indicator (Y/N)",
            "description": "Indicates whether a charge should trigger a booking release exception (i.e. automatic hold)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "09ebda14-780d-489d-89e2-640f1b67c85c",
            "type": {
                "namespace": "ol",
                "name": "buildinglocation"
            },
            "title": "Building and/or specific location in building.",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0ca15d80-442d-4b10-883b-bad40f534723",
            "type": {
                "namespace": "ol",
                "name": "candifferentiateleftfromright"
            },
            "title": "Can differentiate left from right",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7064b696-d3ac-4ca7-9340-8e9db996b36e",
            "type": {
                "namespace": "ol",
                "name": "caseid"
            },
            "title": "ID of case.",
            "description": "ID of case.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
            "type": {
                "namespace": "ol",
                "name": "category"
            },
            "title": "Category",
            "description": "A category. ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3458d8fc-edeb-4d81-951c-d7d4668f4449",
            "type": {
                "namespace": "ol",
                "name": "cause"
            },
            "title": "Cause",
            "description": "Cause of event, actions, or situation",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "3276057e-2230-4f3e-abf7-9a80d7be52b8",
            "type": {
                "namespace": "ol",
                "name": "certainty"
            },
            "title": "Clinical certainty",
            "description": "Statement about the degree of clinical certainty (e.g., that the identified substance was the cause of the manifestation in a reaction event).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "022ed2d2-f056-4076-9b56-624ea0297dfe",
            "type": {
                "namespace": "ol",
                "name": "childnarrative"
            },
            "title": "Child narrative",
            "description": "Narrative of events from the child's perspective.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2264eea3-9fb3-450a-83b7-481975917fd8",
            "type": {
                "namespace": "ol",
                "name": "childrelatedemergency"
            },
            "title": "Child-related Emergency",
            "description": "Flag for whether something is a child-related emergency, defined as when a perpetrator alleged to abuse a child is in possession of a firearm.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1023b3ee-f2d4-4eea-84a5-824ce6fa1bc0",
            "type": {
                "namespace": "ol",
                "name": "class"
            },
            "title": "Class",
            "description": "A class.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9f73b214-a7de-44c9-95c2-0cf35808cf8d",
            "type": {
                "namespace": "ol",
                "name": "clinicalstatus"
            },
            "title": "Clinical Status",
            "description": "Medical state or medical condition used to describe a patient's condition or the status of a problem/condition. Categories used: active | inactive | resolved",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "58929d33-1c01-42f1-891c-f3e55c4d4fc4",
            "type": {
                "namespace": "ol",
                "name": "code"
            },
            "title": "General code.",
            "description": "General code (e.g., diagnostic code).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "082583c3-08d9-4e6c-b8ac-52f5e74b54f3",
            "type": {
                "namespace": "ol",
                "name": "codingsystem"
            },
            "title": "Coding classification system (e.g., diagnostic coding system)",
            "description": "System of diagnostic codes (e.g., HCPCS, ICD-10, CPT, EMS, etc.)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "54566157-0be7-4e75-9e69-035d141c4499",
            "type": {
                "namespace": "ol",
                "name": "collecteddatetime"
            },
            "title": "DateTime Collected",
            "description": "",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3e6d3232-6469-46ee-b437-aa0d0458a88e",
            "type": {
                "namespace": "ol",
                "name": "commitdatetime"
            },
            "title": "Commit datetime",
            "description": "The date and time of a law enforcement commitment to jail or further hearing.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3fa624b3-9e19-4a74-884f-882514c0dfc2",
            "type": {
                "namespace": "ol",
                "name": "commitment"
            },
            "title": "Commitment",
            "description": "A commitment",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a9678fab-75d1-4b1c-bb24-7a5a75a97b2b",
            "type": {
                "namespace": "ol",
                "name": "commoninterest"
            },
            "title": "Common Interest",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "f2787ef1-8a9d-4297-9189-e78b12b76daf",
            "type": {
                "namespace": "ol",
                "name": "completed"
            },
            "title": "Completed (Y/N)",
            "description": "Flag for whether something was completed.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3cec8003-3a0d-4a14-af37-1a3e255c8cf7",
            "type": {
                "namespace": "ol",
                "name": "componentcode"
            },
            "title": "Component Code",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "8b9daa99-7d75-4ea8-b5da-921c9a57d963",
            "type": {
                "namespace": "ol",
                "name": "componentindicator"
            },
            "title": "Component Indicator (e.g., component of larger assessment? Y/N)",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d3bf6c2f-b222-45d5-aed6-458037fcea3b",
            "type": {
                "namespace": "ol",
                "name": "comprehension"
            },
            "title": "Vocabulary - comprehension",
            "description": "Comprehension",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "d7a0c31f-6bea-4818-a299-7378b5516df2",
            "type": {
                "namespace": "ol",
                "name": "computerincrime"
            },
            "title": "Computer Present/Used in Crime (Y/N)",
            "description": "Flag for whether a computer was used in a crime, or for a cybercrime.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6519f480-7aaf-496c-825b-3b325d12bb85",
            "type": {
                "namespace": "ol",
                "name": "concurrent"
            },
            "title": "Concurrent jailstay/sentence (#)",
            "description": "Number of concurrent sentences.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2a9c1cae-e3a8-437f-9fc3-ecfb3d43e3bf",
            "type": {
                "namespace": "ol",
                "name": "conditionindicator"
            },
            "title": "Condition present indicator",
            "description": "Yes if the condition exists, no otherwise",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ebb96ca5-5a0c-46e6-895c-390e9ce9f575",
            "type": {
                "namespace": "ol",
                "name": "conditionname"
            },
            "title": "Text name of condition.",
            "description": "Condition (e.g., medical condition). ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "96473ea4-3ff7-4df8-893a-8a433c6bd38f",
            "type": {
                "namespace": "ol",
                "name": "confidence"
            },
            "title": "Confidence",
            "description": "A confidence metric",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d9d04245-892d-4364-b3f0-e33b5eb3c28e",
            "type": {
                "namespace": "ol",
                "name": "confirmationindicator"
            },
            "title": "Confirmation indicator",
            "description": "Confirmation indicator",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "55199d7d-b13e-4d7e-8e14-a50c7091942e",
            "type": {
                "namespace": "ol",
                "name": "consecutive"
            },
            "title": "Consecutive jailstay (Y/N)",
            "description": "A boolean indicating whether the person is doing consecutive sentences.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ee8181ba-a5aa-4683-8f27-2debd75a6b0a",
            "type": {
                "namespace": "ol",
                "name": "consequences"
            },
            "title": "Consequences (e.g., List of Consequences) ",
            "description": "Consequence List - text  ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "c0dcbd19-09c3-4e44-b874-aeddb2aeb613",
            "type": {
                "namespace": "ol",
                "name": "consequencesofuse"
            },
            "title": "Have you experienced problems caused by drinking alcohol and/or using other drugs, and you kept using? (Y/N) - AC-OK Screening",
            "description": "Have you experienced problems caused by drinking alcohol and/or using other drugs, and you kept using? - AC-OK Screening ",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ba77fbf5-9f45-4def-b17f-4ddd2f757129",
            "type": {
                "namespace": "ol",
                "name": "contactdatetime"
            },
            "title": "Date and Time of Contact",
            "description": "",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2ff089c6-716d-44d9-8470-bfe9689eeacd",
            "type": {
                "namespace": "ol",
                "name": "contactmethod"
            },
            "title": "Method of Contact",
            "description": "Contact Method - ('phone', \u2018email,\u2019 'walk-in', \u2018shelter')",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "22782665-d7a2-4e72-b283-64e42b6a6108",
            "type": {
                "namespace": "ol",
                "name": "contemplative"
            },
            "title": "Considers possibilities / contemplative",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "8361c4e7-7163-469a-adab-2131f98a6b5f",
            "type": {
                "namespace": "ol",
                "name": "contentrestrictions"
            },
            "title": "Content restrictions (e.g., media content restrictions enforced)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "b1e2bcd8-bd3d-42de-beed-d73d6bfaa09f",
            "type": {
                "namespace": "ol",
                "name": "context"
            },
            "title": "Context (e.g., social context)",
            "description": "Housing: living arrangements, social context",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "21f5b00c-284a-4b45-bc37-355649bbb4f0",
            "type": {
                "namespace": "ol",
                "name": "convictionresults"
            },
            "title": "Conviction Results",
            "description": "Law enforcement conviction results.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cfcdabbd-ea4c-4981-9438-883e4111b473",
            "type": {
                "namespace": "ol",
                "name": "copayrequiredindicator"
            },
            "title": "Copay required (Y/N)",
            "description": "Reminder that a copay may be required ",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2e0555ab-6419-4309-ae66-2577bee94a8f",
            "type": {
                "namespace": "ol",
                "name": "corevalues"
            },
            "title": "Core values / Beliefs",
            "description": "Question on a person's core values and beliefs, from the NSPL Suicide Risk Assessment standards (Buffers / Connectedness component).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "afd4df97-11ee-4c9d-85e0-58d33ed4d840",
            "type": {
                "namespace": "ol",
                "name": "country"
            },
            "title": "Country",
            "description": "Country",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "7c2ddf7e-81da-4fe7-91d8-4d2e1f6c5e22",
            "type": {
                "namespace": "ol",
                "name": "county"
            },
            "title": "County",
            "description": "A county or county code.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0e9bef46-4062-4255-a23f-4affe0946a10",
            "type": {
                "namespace": "ol",
                "name": "createswords"
            },
            "title": "Creates words",
            "description": " creates words - development question",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "a697458d-6060-46c8-a677-4972530a4d41",
            "type": {
                "namespace": "ol",
                "name": "credentials"
            },
            "title": "Credentials - for example, a provider's relevant degree, certifications, qualifications, etc. ",
            "description": "Credentials (e.g., degree, certifications, etc.). For a health care provider, this might include  MD, DO, RN, CNA, etc.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "52f9d0c8-46c4-4d97-81c8-b153d9e825bb",
            "type": {
                "namespace": "ol",
                "name": "crimeagainstperson"
            },
            "title": "Crime against person (Y/N)",
            "description": "Flag for whether a crime was directed against a person (as opposed to property crime).",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1413453d-d5a8-4195-bb10-2f7acb9889b2",
            "type": {
                "namespace": "ol",
                "name": "crisislevelend"
            },
            "title": "Crisis level (end)",
            "description": "Crisis level (end)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "02c1d8f2-231d-4fa5-8c6f-5a18d36a470d",
            "type": {
                "namespace": "ol",
                "name": "crisislevelstart"
            },
            "title": "Crisis level (at start)",
            "description": "Crisis level (at start)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "aa2bb9ea-8f1c-4a44-92bd-0358c9d3a4e1",
            "type": {
                "namespace": "ol",
                "name": "criticality"
            },
            "title": "Criticality",
            "description": "An indication of the potential for critical system organ damage or life threatening consequence. Categories: low/high/indeterminate.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "271d7c29-346e-45ca-a67f-d610392ff5ae",
            "type": {
                "namespace": "ol",
                "name": "cryptokey"
            },
            "title": "Crypto Key",
            "description": "A cryptographic private / public key.",
            "schemas": [],
            "datatype": "Binary",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "36ffd722-1cd8-4714-ab95-4237bda9464b",
            "type": {
                "namespace": "ol",
                "name": "custodylevel"
            },
            "title": "Custody level",
            "description": "A level of custody assigned to a person.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "BTREE"
        },
        {
            "id": "ea9c6450-b985-4a82-b040-df539404737f",
            "type": {
                "namespace": "ol",
                "name": "dailyusemeasure"
            },
            "title": "Daily Use Measure",
            "description": "amount used per day",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d6c150b5-fff6-410f-a090-0973950bbe24",
            "type": {
                "namespace": "ol",
                "name": "datasource"
            },
            "title": "Datasource",
            "description": "An identifier for the datasource (which database/flight/app/...)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e3b223ce-4f91-4125-be4d-ec7371382823",
            "type": {
                "namespace": "ol",
                "name": "date_projectedrelease"
            },
            "title": "Projected Release Date",
            "description": "Date a person is anticipated to complete service of final sentence, automatically or manually calculated, based on current sentence information.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d3bd803c-9dd6-4cf2-b6f7-8a66017d1c97",
            "type": {
                "namespace": "ol",
                "name": "datelastreported"
            },
            "title": "Date last reported, date of last encounter",
            "description": "Most recent date, (e.g., date last reported, date of most recent use, etc)",
            "schemas": [],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e90a306c-ee37-4cd1-8a0e-71ad5a180340",
            "type": {
                "namespace": "ol",
                "name": "datelogged"
            },
            "title": "Date Logged",
            "description": "Date on which information was logged / entry was made",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "fe34a941-22ce-4beb-9479-b83d7831378a",
            "type": {
                "namespace": "ol",
                "name": "datescheduled"
            },
            "title": "Scheduled Date-time",
            "description": "The date-time scheduled.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "edc320e1-8344-4d68-827c-0a2117a9ff44",
            "type": {
                "namespace": "ol",
                "name": "datescheduledstring"
            },
            "title": "Datetime Scheduled (string variable)",
            "description": "String variable representing the datetime an event was scheduled to occur. Used to link scheduled and actual datetime information.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f3b41e19-d1e9-4004-8763-b514a93983d2",
            "type": {
                "namespace": "ol",
                "name": "datetime_release"
            },
            "title": "Date-Time Release (-d)",
            "description": "Date of release or discharge (i.e., from jail).",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b94361f0-7172-4556-a4f3-99a183bff03c",
            "type": {
                "namespace": "ol",
                "name": "datetime_reported"
            },
            "title": "Reported date-time",
            "description": "The reported date-time of an incident, dispatch call for service, or other event.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8e65eca6-a3d1-4c05-885f-cc3156257139",
            "type": {
                "namespace": "ol",
                "name": "datetimeadministered"
            },
            "title": "Date Test or Screening Was Administered",
            "description": "Date on which a test, assessment or screening was administered",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "98ea0781-13fd-4bef-ab3d-893e1757dfe5",
            "type": {
                "namespace": "ol",
                "name": "datetimecertified"
            },
            "title": "Datetime certified",
            "description": "Date-time certified",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5366c4ae-105b-47f9-80d8-2a6459a1d3fa",
            "type": {
                "namespace": "ol",
                "name": "datetimeeligible"
            },
            "title": "Datetime eligible",
            "description": "The date-time eligibility begins.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
            "type": {
                "namespace": "ol",
                "name": "datetimeend"
            },
            "title": "End Date-Time",
            "description": "End of date-time interval",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "08022a2a-9d50-461d-92b7-dc84b81106c4",
            "type": {
                "namespace": "ol",
                "name": "datetimelastreported"
            },
            "title": "Last Reported Date (datetime)",
            "description": "Last reported datetime at which an event occurred (e.g., last reported date of substance use).",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
            "type": {
                "namespace": "ol",
                "name": "datetimestart"
            },
            "title": "Start Date-Time",
            "description": "The date-time of the start of an incident, CAD call, jail stay, housing stay, or other event. If no separate end date is reported, this is simply the date the event occurred.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "52d3afc5-0ce1-4b76-91cb-f5f68e39b110",
            "type": {
                "namespace": "ol",
                "name": "dayinterval"
            },
            "title": "One Day Interval",
            "description": "Boolean value indicating a 24-hour time Interval",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d005e6e8-a3ff-42e9-b5c8-1be5cdea1b27",
            "type": {
                "namespace": "ol",
                "name": "deathdatetime"
            },
            "title": "Datetime of death",
            "description": "Datetime of a person's death.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f1e1af30-fb7c-4ca9-9a51-dc10b8e4e072",
            "type": {
                "namespace": "ol",
                "name": "deescalationscale"
            },
            "title": "De-escalation Scale (1-10)",
            "description": "De-escalation Scale (where 1 is calm and 10 is still escalated)",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "eece0de7-4ea7-47b2-81a3-1df1eeab8add",
            "type": {
                "namespace": "ol",
                "name": "definition"
            },
            "title": "Definition",
            "description": "Instantiates protocol or definition",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "c2629909-32d0-4a23-8bab-fcdf639ba19c",
            "type": {
                "namespace": "ol",
                "name": "degree"
            },
            "title": "Degree",
            "description": "Degree of a law enforcement charge.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b4343ae9-42d0-4ede-ae44-71736def4c11",
            "type": {
                "namespace": "ol",
                "name": "delayreason"
            },
            "title": "Delay Reason",
            "description": "Reason(s) for a delay.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7eb8e0ef-c1d4-4247-9ab7-98cb11db57b5",
            "type": {
                "namespace": "ol",
                "name": "deliriumtremensnotes"
            },
            "title": "Delirium Tremens Notes",
            "description": "Delirium Tremens - Notes and Details Field",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "02dee11b-d817-4ca9-8ba8-b21339d92923",
            "type": {
                "namespace": "ol",
                "name": "demanding"
            },
            "title": "Demanding (text)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "4f08f1e4-e7d9-41a5-b629-61de4c0ea983",
            "type": {
                "namespace": "ol",
                "name": "demeanorsaroundlawenforcement"
            },
            "title": "Demeanors around law enforcement",
            "description": "Demeanors observed around law enforcement",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "833c2bb7-d6fb-4e19-91fc-5bca5ed8628c",
            "type": {
                "namespace": "ol",
                "name": "demeanorsaroundlawenforcementother"
            },
            "title": "Demeanors around law enforcement (other)",
            "description": "Demeanors observed around law enforcement (other than those in a pre-formed list)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "80be96e6-58e5-4015-a851-312c9c2327bd",
            "type": {
                "namespace": "ol",
                "name": "description"
            },
            "title": "Description",
            "description": "Description",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "9c0466a6-a716-4efb-bbe5-3996c57f03cb",
            "type": {
                "namespace": "ol",
                "name": "descriptionofcare"
            },
            "title": "Description of Care",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "ec863827-74f3-4145-8686-5d6e406a9d16",
            "type": {
                "namespace": "ol",
                "name": "desiretoquit"
            },
            "title": "Wants to Quit",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "3df88d48-1fa1-43b4-8c0a-e1ea2434ddc7",
            "type": {
                "namespace": "ol",
                "name": "details"
            },
            "title": "Details",
            "description": "Details",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "92583a5d-0ff2-4408-9a06-5e7c04b59fcc",
            "type": {
                "namespace": "ol",
                "name": "diagnosisdate"
            },
            "title": "Diagnosis Datetime / Date Diagnosed",
            "description": "",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "39fb55ac-8741-4ace-b67a-1770a609be3b",
            "type": {
                "namespace": "ol",
                "name": "diastolicbloodpressure"
            },
            "title": "Diastolic blood pressure",
            "description": "The bottom number of a blood pressure reading is the amount of pressure in your arteries between beats (diastolic pressure).",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "20ee1d1d-b513-4769-978d-f313571cd1f5",
            "type": {
                "namespace": "ol",
                "name": "directedagainst"
            },
            "title": "Person against whom violent behavior is or was directed",
            "description": "Person(s) at whom violent behavior is or was directed",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "15b7e438-b029-4953-a813-e26f7a6546d8",
            "type": {
                "namespace": "ol",
                "name": "directedagainstother"
            },
            "title": "Directed violent behavior - other",
            "description": "Other person(s) at whom violent behavior is or was directed in the most recent incident",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "7472589d-4f1b-4d7b-bd84-470b3f324ab8",
            "type": {
                "namespace": "ol",
                "name": "directedrelation"
            },
            "title": "Relation (threatener/subject)",
            "description": "Relation between one threatening violence and the person the threat is aimed at.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "50b95693-1602-45ab-8846-98b3721ac208",
            "type": {
                "namespace": "ol",
                "name": "disabledheadofhousehold"
            },
            "title": "Disabled Head of Household",
            "description": "Flag for whether the Head of Household is disabled.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "281141de-e65f-46ec-9f2f-450974ed4d0d",
            "type": {
                "namespace": "ol",
                "name": "dischargedate"
            },
            "title": "Discharge Date / End date (Datetime)",
            "description": "Discharge date or date that ends an episode of care. Datetime property. May sometimes be PII (HIPAA).",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0eb09893-72c8-4f0f-99d8-0b906558a585",
            "type": {
                "namespace": "ol",
                "name": "dischargedisposition"
            },
            "title": "Discharge Disposition",
            "description": "This value set defines a set of codes that can be used to where the patient left the facility. https://www.hl7.org/fhir/valueset-encounter-discharge-disposition.html ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "064b0b89-588f-4f8c-af21-0b65d36fae97",
            "type": {
                "namespace": "ol",
                "name": "discipline"
            },
            "title": "Discipline",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "539d322d-41d0-4596-aceb-17551af9b0ae",
            "type": {
                "namespace": "ol",
                "name": "dispatchtransfer"
            },
            "title": "Boolean to indicate whether the vehicle was used for a dispatch transfer",
            "description": "Boolean to indicate whether the vehicle was used for a dispatch transfer",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e8fc910e-6135-4764-bc99-e5b498ea0dd4",
            "type": {
                "namespace": "ol",
                "name": "dissatisfiedwithcare"
            },
            "title": "Dissatisfied with Care / Treatment",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "7bfd7fac-6b12-40fa-ba9b-021bde9f12f2",
            "type": {
                "namespace": "ol",
                "name": "dissatisfiedwithlife"
            },
            "title": "Dissatisfied with Life",
            "description": "text field",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "e2d47187-085b-4783-85ff-7fc9fff89cc5",
            "type": {
                "namespace": "ol",
                "name": "dissatisfiedwithparenting"
            },
            "title": "Dissatisfied with Parenting",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "6d37a208-e8b3-42ef-bf85-ad18d70fa180",
            "type": {
                "namespace": "ol",
                "name": "dissatisfiedwithpurchase"
            },
            "title": "Dissatisfied with Purchase",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "8a8a4b3a-2530-40ab-afb4-55db1641f6c5",
            "type": {
                "namespace": "ol",
                "name": "district"
            },
            "title": "District",
            "description": "A district.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "29e7b1ab-9a63-4eaf-bd89-693d644be2e2",
            "type": {
                "namespace": "ol",
                "name": "distrustfamilyfriends"
            },
            "title": "Distrust of family and friends (Y/N) ",
            "description": "Have you had periods of time where you felt that you could not trust family or friends (Y/N)   - AC-OK Screening",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "90b70c3c-6acc-4c7e-949a-8ddea1909236",
            "type": {
                "namespace": "ol",
                "name": "distrustsfamilyorfriends"
            },
            "title": "Distrusts Family or Friends (Y/N) - AC-OK",
            "description": "Have you had periods of time where you felt that you could not trust family or friends?",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b8ec37cc-f27e-49d9-acb1-3e058e62f4e2",
            "type": {
                "namespace": "ol",
                "name": "dmfstep2indicator"
            },
            "title": "DMF Step 2 Indicator (Y/N)",
            "description": "Indicates whether a charge should trigger Step 2 of a decision making framework.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8404751e-014c-4202-ac10-ba7a9276e874",
            "type": {
                "namespace": "ol",
                "name": "dmfstep4indicator"
            },
            "title": "DMF Step 4 Indicator (Y/N)",
            "description": "Indicates whether a charge should trigger Step 4 of a decision making framework.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6f995298-c6b7-4f9c-b9a2-81d873a7c692",
            "type": {
                "namespace": "ol",
                "name": "domesticviolenceflag"
            },
            "title": "Domestic violence flag (Y/N)",
            "description": "Whether domestic violence or \"domestic dispute\" is involved in a law enforcement or other event.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "abaa98db-9265-42ca-a272-74d667c972e1",
            "type": {
                "namespace": "ol",
                "name": "dosage"
            },
            "title": "Medication Dose / Dosage",
            "description": "Dosage of medication (e.g., how much taken at a given time). If more than one active ingredient, list all.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1eea0dc5-bea2-4462-8de5-4b7c8f9ad0cf",
            "type": {
                "namespace": "ol",
                "name": "drugtypeother"
            },
            "title": "Drug type (other)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "dcb47b40-17ac-487f-8a99-0956157d2907",
            "type": {
                "namespace": "ol",
                "name": "duration"
            },
            "title": "Duration / time frame length (text)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "caf53ac1-30f2-492a-a284-65eef9ed7827",
            "type": {
                "namespace": "ol",
                "name": "durationdays"
            },
            "title": "Duration (days)",
            "description": "A time interval in days.",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e2fba0d0-4b1d-414f-bb30-89a49bb745b0",
            "type": {
                "namespace": "ol",
                "name": "durationfacetoface"
            },
            "title": "Face-to-face time",
            "description": "Duration, in terms of face-to-face time.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f105dd1b-1c71-4042-8ea8-53013070d9da",
            "type": {
                "namespace": "ol",
                "name": "durationhours"
            },
            "title": "Duration (hours)",
            "description": "A length of time in hours.",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7674c064-c8fb-42b0-a1ca-c7cab0e0829d",
            "type": {
                "namespace": "ol",
                "name": "durationinterval"
            },
            "title": "Duration interval (minutes)",
            "description": "Duration interval - numeric value (minutes).",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d15ace9d-fa1c-4db6-99fe-b009778cc781",
            "type": {
                "namespace": "ol",
                "name": "earnedtimecode"
            },
            "title": "Earned/Gain/Good time code",
            "description": "Code describing earned/good time  gained in the course of a jail term.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d2b300d8-3f54-4dbd-8800-4838f82f522f",
            "type": {
                "namespace": "ol",
                "name": "earnedtimerate"
            },
            "title": "Earned time rate",
            "description": "The rate at which earned/good time is  gained in the course of a jail term.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7b957683-ba64-4226-83a0-fc12de371278",
            "type": {
                "namespace": "ol",
                "name": "ears"
            },
            "title": "Ears (description)",
            "description": "Ears description.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f0d8174e-d805-45dc-b781-2e86af81511c",
            "type": {
                "namespace": "ol",
                "name": "easilyupset"
            },
            "title": "Easily Upset",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "bf4f1c24-65f5-47c7-88d7-48aec1e4e591",
            "type": {
                "namespace": "ol",
                "name": "effectivedate"
            },
            "title": "Effective date (datetime)",
            "description": "For example, date that a person's access or access restriction becomes effective",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2ef5eab0-95d8-4cce-9c79-b7665fc54dac",
            "type": {
                "namespace": "ol",
                "name": "effects"
            },
            "title": "Effects",
            "description": "Description of effects",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b18efe15-5b7c-4342-9eed-e8583fd22110",
            "type": {
                "namespace": "ol",
                "name": "ein"
            },
            "title": "Employer Identification Number (EIN)",
            "description": "",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4ceb2128-8bff-409e-9ae2-39714c81b252",
            "type": {
                "namespace": "ol",
                "name": "ellipticcurvename"
            },
            "title": "Elliptic Curve Name",
            "description": "The name of the elliptic curve used in elliptic-curve cryptography.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "02beaa57-ebb9-4349-918d-6bf3afa49c9a",
            "type": {
                "namespace": "ol",
                "name": "emotionallydistant"
            },
            "title": "Feels Emotionally Distant or Alone",
            "description": "Feeling alone or emotionally ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "8853b245-2845-413d-baf1-d9cc7491effd",
            "type": {
                "namespace": "ol",
                "name": "emotionalphysicalsexualabuse"
            },
            "title": "Any emotional, physical, sexual abuse? (Y/N) (AC-OK) ",
            "description": "Have you ever been hit, slapped, kicked, emotionally or sexually hurt, or threatened by someone?  (Y/N) - Part of AC-OK Screening",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "07c288b6-3425-4d83-bf38-60989de8f5e3",
            "type": {
                "namespace": "ol",
                "name": "emsminutes"
            },
            "title": "Time spent by EMS (Minutes)",
            "description": "Total time spent at an event by responding EMS units.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c8460593-7a12-450a-80ad-bc8e97018a0d",
            "type": {
                "namespace": "ol",
                "name": "enddate"
            },
            "title": "End date",
            "description": "",
            "schemas": [],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b79a48cd-1310-4d9f-8fd5-d84db146e930",
            "type": {
                "namespace": "ol",
                "name": "engagementwithhelper"
            },
            "title": "Engagement with Helper ",
            "description": "Question on a person's engagement with a helper (i.e. telephone worker), from the NSPL Suicide Risk Assessment standards (Buffers / Connectedness component). ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "bf031c3f-6e71-4002-b7d8-03395c97ada5",
            "type": {
                "namespace": "ol",
                "name": "episodeprogression"
            },
            "title": "Progression of episode (e.g., at time of reporting) - notes",
            "description": "Description of progression of the symptom or sign at the time of reporting. Suggested categories:  -Worsening [The severity of the symptom or sign has worsened overall during this episode.] \n-Unchanged [The severity of the symptom or sign has not changed overall during this episode.] -Improving [The severity of the symptom or sign has improved overall during this episode.]  -Resolved [The severity of the symptom or sign has resolved.]",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "d991694c-9c58-4476-b360-b3e5a57c9330",
            "type": {
                "namespace": "ol",
                "name": "episodicity"
            },
            "title": "Episodicity",
            "description": "Category of this episode for the identified symptom or sign. Suggested categories: \n-New [A new episode of the symptom or sign either the first ever occurrence or a reoccurrence where the previous episode had completely resolved.] \n-Ongoing [This symptom or sign is ongoing, effectively a single, continuous episode.] \n-Indeterminate [It is not possible to determine if the occurrence of the symptom or sign is new or ongoing.]\n",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "928ed54f-812e-4819-ab8d-ea333afcbc5f",
            "type": {
                "namespace": "ol",
                "name": "escapefromreality"
            },
            "title": "Uses (e.g., substance, device) as an escape from responsibilities and reality",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "3fa50b55-efa9-4839-9ba7-2b1dad263739",
            "type": {
                "namespace": "ol",
                "name": "escapehistory"
            },
            "title": "Escape History (Y/N)",
            "description": "Flag for whether one has one or more escape movement entries in a jail management system.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "50ece93c-a78e-4295-8f75-7888a55c6c97",
            "type": {
                "namespace": "ol",
                "name": "estimatedbirthdate"
            },
            "title": "Estimated Birthdate",
            "description": "The estimated birthdate of a person, made when reporting to agencies and actual birthdate or age is unknown.",
            "schemas": [],
            "datatype": "Date",
            "piiField": true,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "28c4efb8-55d9-45bc-9635-201d93cd43c4",
            "type": {
                "namespace": "ol",
                "name": "ethnicity"
            },
            "title": "Ethnicity",
            "description": "Hispanic, non-Hispanic, etc.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7ed19ef2-a1ed-48e3-b347-18a885914bee",
            "type": {
                "namespace": "ol",
                "name": "eventcount"
            },
            "title": "Count or number of events (integer)",
            "description": "Number of events (e.g., naps)",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "34a21e20-f180-4972-9ca1-066be52029ca",
            "type": {
                "namespace": "ol",
                "name": "excludemodifier"
            },
            "title": "Exclude modifier - items to exclude",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "0bc0c5ec-6b27-45df-a549-e0cf163ffc1b",
            "type": {
                "namespace": "ol",
                "name": "expectations"
            },
            "title": "Expectations",
            "description": " Expectations",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "e274bded-fbce-46b9-b845-0a239c83956e",
            "type": {
                "namespace": "ol",
                "name": "expirationdate"
            },
            "title": "Expiration Date",
            "description": "",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3f3c2716-e8b0-4d1a-9c17-7e3d6b98fb03",
            "type": {
                "namespace": "ol",
                "name": "explainmeaning"
            },
            "title": "Explain meaning",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "ec07c9c9-56ab-453b-8d70-6c2e51c2c6c4",
            "type": {
                "namespace": "ol",
                "name": "explainmotives"
            },
            "title": "Explain Motives",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "af69859e-1319-446c-9744-54e8a68c584b",
            "type": {
                "namespace": "ol",
                "name": "exposuretoradiation"
            },
            "title": "Exposure to Radiation",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "6906bf7c-0644-4686-9013-d20a804ddab4",
            "type": {
                "namespace": "ol",
                "name": "exposuretosuicide"
            },
            "title": "Exposure to Suicide",
            "description": "Question on one's exposure to  someone else's death by suicide, from the NSPL Suicide Risk Assessment standards (Suicidal capability subcomponent).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ea0c61fa-3af6-433b-a27a-bc9da638182e",
            "type": {
                "namespace": "ol",
                "name": "extraditionstatus"
            },
            "title": "Extradition status",
            "description": "Extradition status",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f6f98745-c2b0-468f-89a6-7b57a69f104b",
            "type": {
                "namespace": "ol",
                "name": "eyecolor"
            },
            "title": "Eye Color",
            "description": "Eye Color",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "db9aa49b-38a1-4852-bb90-dd077ac29495",
            "type": {
                "namespace": "ol",
                "name": "eyecontact"
            },
            "title": "Eye Contact (Quality of)",
            "description": "Characteristics and description related to an individual's eye contact",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "ac359796-a98e-43c3-bbcc-e53e03aa5186",
            "type": {
                "namespace": "ol",
                "name": "face"
            },
            "title": "Face (description)",
            "description": "Description of face",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5ebd81b0-ce0e-47f9-9ba1-423e3f177b39",
            "type": {
                "namespace": "ol",
                "name": "facialexpression"
            },
            "title": "Facial Expression",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "658d4505-b295-4f4a-86aa-a9e50d086ee1",
            "type": {
                "namespace": "ol",
                "name": "facialhair"
            },
            "title": "Facial hair (description)",
            "description": "Description of facial hair",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "521826ee-0050-4e2a-8840-f357fe9d41c3",
            "type": {
                "namespace": "ol",
                "name": "favoriteprogram"
            },
            "title": "Favorite Program",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "7d4dbc62-4335-4515-9629-052c904a0ec0",
            "type": {
                "namespace": "ol",
                "name": "faxnumber"
            },
            "title": "Fax Number",
            "description": "Fax number",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2a110ce7-1146-4be4-a64a-cbeeba4a89a8",
            "type": {
                "namespace": "ol",
                "name": "fearofhome"
            },
            "title": "Fear of Home",
            "description": "Description of whether a child reports fear of returning home (abuse allegation).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1d82cd84-d24e-4bec-a7c4-10bb6f387e49",
            "type": {
                "namespace": "ol",
                "name": "feelingtrapped"
            },
            "title": "Feeling trapped",
            "description": "Question on feeling trapped, from the NSPL Suicide Risk Assessment standards \n (Suicidal Desire component).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6b1168fc-140d-46a9-a6cf-d5be81a88dd8",
            "type": {
                "namespace": "ol",
                "name": "feelsaddicted"
            },
            "title": "Feels Addicted (e.g., to substance, media use, device)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "c3c5d959-e6e0-42f7-ac38-fcdbcbcde0f7",
            "type": {
                "namespace": "ol",
                "name": "felony"
            },
            "title": "Felony (Y/N)",
            "description": "Flag for whether an offense was a felony.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f393b40b-884b-45d6-a351-845cb31c46ba",
            "type": {
                "namespace": "ol",
                "name": "fingerprints"
            },
            "title": "Fingerprints (Y/N)",
            "description": "whether fingerprints exist.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5b7a2aba-9d5a-4026-8a9a-319f00a8e4ac",
            "type": {
                "namespace": "ol",
                "name": "firedeptminutes"
            },
            "title": "Time spent by fire dept (minutes)",
            "description": "Total time spent at an event by responding fire units.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "704471a5-ff6a-446d-89dc-11e9e2a446cc",
            "type": {
                "namespace": "ol",
                "name": "firstever"
            },
            "title": "First ever occurrence / incident / episode? ",
            "description": "Is this the first incident (e.g., first occurrence of this symptom / sign)?",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "79737758-c62b-4a81-9298-cc40540850da",
            "type": {
                "namespace": "ol",
                "name": "fixedlocation"
            },
            "title": "Fixed location (Y/N)",
            "description": "Fixed location (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b89258a2-d190-4367-b3bc-ab0278749f85",
            "type": {
                "namespace": "ol",
                "name": "formulation"
            },
            "title": "Form / Formulation",
            "description": "Form or formulation (e.g., of a medication - capsule, tablet, liquid, topical, etc).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "c4068de7-245b-462e-946e-b8452a02d1c9",
            "type": {
                "namespace": "ol",
                "name": "fundflag"
            },
            "title": "Fund (Y/N)",
            "description": "Flag for whether something was funded by a particular investment fund.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c217764b-612b-4950-8140-2b2479acc0e9",
            "type": {
                "namespace": "ol",
                "name": "fussy"
            },
            "title": "Fussy",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "429aafdb-7c80-4d8f-8944-12eee392c504",
            "type": {
                "namespace": "ol",
                "name": "gafscore"
            },
            "title": "Global Assessment of Functioning Score (0-100)",
            "description": "0-100",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cb92bd0b-0338-4f93-9936-e857e12be830",
            "type": {
                "namespace": "ol",
                "name": "gangactivity"
            },
            "title": "Gang Activity",
            "description": "Description of any gang activity present in an incident or law enforcement event.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "79caddc9-f064-464e-92e8-9c2ee581e278",
            "type": {
                "namespace": "ol",
                "name": "gangrelatedclothing"
            },
            "title": "Gang-related clothing (Y/N)",
            "description": "Flag for whether one is seen wearing gang-related clothing.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0ec3cae8-d002-4d66-af62-c3adb2b9bee3",
            "type": {
                "namespace": "ol",
                "name": "gangrelatedclothingnotes_temp"
            },
            "title": "Gang-related clothing (description, temp)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6c322506-8210-462f-9034-9a1d45fff3ad",
            "type": {
                "namespace": "ol",
                "name": "gangsigns"
            },
            "title": "Gang signs (Y/N)",
            "description": "Flag for whether one is seen engaging in hand signs typical of certain gangs and gang sets.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2c08b79a-e8fa-49b4-ba7d-2425d90bfcb8",
            "type": {
                "namespace": "ol",
                "name": "gangsignsnotes"
            },
            "title": "Gang signs (description)",
            "description": "Description of how a person is seen engaging in hand signs typical of certain gangs and gang sets.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2978f7b8-dfb7-4c3f-be0e-6d8b476fbb98",
            "type": {
                "namespace": "ol",
                "name": "gastrointesinalbleedingnotes"
            },
            "title": "Gastrointesinal Bleeding - Notes",
            "description": "gastrointesinal bleeding notes and details field",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "894ba324-1fbe-4e5f-aead-eb2a22adbca2",
            "type": {
                "namespace": "ol",
                "name": "gestationalage"
            },
            "title": "Gestational Age (Weeks)",
            "description": "",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1a851089-f932-4d2a-b35a-3af532f72fc8",
            "type": {
                "namespace": "ol",
                "name": "givenname"
            },
            "title": "Person's given name(s) or first name(s).",
            "description": "The first name(s) or given name(s) of a person. (Note: the order of family name and given name are culturally determined.)",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "2531472b-8f73-47d1-885b-1dd4018aff48",
            "type": {
                "namespace": "ol",
                "name": "glasses"
            },
            "title": "Glasses or corrective lenses (description)",
            "description": "Description of glasses / corrective lenses",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "56d54f9d-9d1a-49d4-a220-ea03955eb5a5",
            "type": {
                "namespace": "ol",
                "name": "glucoseflag"
            },
            "title": "Glucose - flag",
            "description": "Flag for abnormal results of test or screening for glucose (e.g., in urine). Based on glucose value property and relevant reference scales, when available. ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2d47ff8b-b723-4e20-8e70-c64cd8bbeb6f",
            "type": {
                "namespace": "ol",
                "name": "goal"
            },
            "title": "Goal",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "a866612a-2316-4b18-88c1-e19ce9a01f01",
            "type": {
                "namespace": "ol",
                "name": "goodtimePCT"
            },
            "title": "Good time percentage",
            "description": "Percentage of good time in a jailstay.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9bcfd1a5-804c-4bdd-a547-ad4494be4e1f",
            "type": {
                "namespace": "ol",
                "name": "goodtimedays"
            },
            "title": "Good time days",
            "description": "Number of good time/gain time days in a jailstay.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ffcf42d0-4134-4430-9f8f-d76cca10b9f2",
            "type": {
                "namespace": "ol",
                "name": "goodtimehours"
            },
            "title": "Good time hours",
            "description": "Number of good minutes in a jailstay (in addition to days).",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6557a4f5-1193-4a0f-a1d1-54f23c33722a",
            "type": {
                "namespace": "ol",
                "name": "goodtimeminutes"
            },
            "title": "Good time minutes",
            "description": "Number of good minutes in a jailstay (in addition to days/hours).",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "21d22ef1-37e1-4bdb-91ab-e91716581dea",
            "type": {
                "namespace": "ol",
                "name": "grooming"
            },
            "title": "Grooming / Dress / Presentation (description)",
            "description": "Text description of / characteristics of an individual's grooming, presentation, or dress during an encounter",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "2543aa27-0f71-4346-bf62-9049a49ea014",
            "type": {
                "namespace": "ol",
                "name": "groupid"
            },
            "title": "Group identifier or group name",
            "description": "Study group name or identifier",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "cb71e270-a273-4a72-9754-e022ea2a5fb0",
            "type": {
                "namespace": "ol",
                "name": "groupnumber"
            },
            "title": "Group Number or ID String",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "82f6ec6a-60ff-42d9-8abf-52086a2f1232",
            "type": {
                "namespace": "ol",
                "name": "haircolor"
            },
            "title": "Color of hair.",
            "description": "Color of hair.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "35fb8e9f-3e62-4f1e-93a8-98f7d97061e5",
            "type": {
                "namespace": "ol",
                "name": "hallucinations"
            },
            "title": "Have you experienced hallucinations (Y/N) - AC-OK",
            "description": "Have you experienced hallucinations (heard or seen things others do not hear or see? ",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "717c1496-451f-4f39-abf9-b64a8c8f85b7",
            "type": {
                "namespace": "ol",
                "name": "handedness"
            },
            "title": "Handedness",
            "description": "Description of handedness",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "346c20d7-4a52-4276-a908-611bc49eb2a7",
            "type": {
                "namespace": "ol",
                "name": "hangup"
            },
            "title": "Hangup (Y/N)",
            "description": "Flag for whether a call received was a hangup.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "517d9dbd-d6cc-49d2-afed-21f6e86ff154",
            "type": {
                "namespace": "ol",
                "name": "hashfunctionname"
            },
            "title": "Hash Function Name",
            "description": "The name of the hash function used in cryptographic operations.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8b477563-64e3-46fe-99e4-4e7b396ab7fa",
            "type": {
                "namespace": "ol",
                "name": "hastattoos_temp"
            },
            "title": "Scars, Marks, Tattoos (Y/N)",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "35b4d146-4e7f-4806-b65b-0d790ba2efc7",
            "type": {
                "namespace": "ol",
                "name": "healthcontextconcerns"
            },
            "title": "Health context and concerns - narrative text field",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "19ae591e-9fdb-4c43-9d36-3ebff1929293",
            "type": {
                "namespace": "ol",
                "name": "hearingaid"
            },
            "title": "Hearing Aid",
            "description": "yes/no/unknown (write in)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "43d335d3-4fd5-4b16-b7df-2494499b36fd",
            "type": {
                "namespace": "ol",
                "name": "hearingimpaired"
            },
            "title": "Hearing Impaired / Hard of Hearing",
            "description": "options: no; yes (impairment in left/right/both/unknown ears)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "d9c0caf4-afd6-43e7-9761-96aad916cd86",
            "type": {
                "namespace": "ol",
                "name": "height"
            },
            "title": "Height of a person.",
            "description": "Height of a person.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "745948ac-7d73-443e-9a27-a7c8753b8a44",
            "type": {
                "namespace": "ol",
                "name": "helplessness"
            },
            "title": "Helplessness",
            "description": "Question on helplessness, from the from the NSPL Suicide Risk Assessment standards (Suicidal Desire component). ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e33b8a68-eaad-46be-9fc2-90b4cc871728",
            "type": {
                "namespace": "ol",
                "name": "hemoglobinflag"
            },
            "title": "Hemoglobin (blood) - flag",
            "description": "Flag for abnormal results of test or screening for blood/hemoglobin (e.g., in urine). Based on blood/hemoglobin value property and relevant reference scales, when available. ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "811ccf93-5237-494f-acfc-069aa1a58836",
            "type": {
                "namespace": "ol",
                "name": "historicalconditionindicator"
            },
            "title": "Historical Condition Indicator (Y/N)",
            "description": "Yes if the condition exists in the individual's history; no otherwise",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "14c86462-c720-416b-b664-032c62cada16",
            "type": {
                "namespace": "ol",
                "name": "historicaldirectedagainst"
            },
            "title": "Person(s) against whom historical violent behavior was directed against",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "3817e465-4b2a-45e9-809b-df301a1d89eb",
            "type": {
                "namespace": "ol",
                "name": "historicaldirectedagainstother"
            },
            "title": "Historical directed violent behavior - other",
            "description": "Incident violence",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "13628582-3512-49b4-9db9-860e991f289c",
            "type": {
                "namespace": "ol",
                "name": "historyofviolence"
            },
            "title": "History of violent behavior (Y/N)",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "30ed2183-c972-4035-a3c7-11896e1adf71",
            "type": {
                "namespace": "ol",
                "name": "historyofviolencetext"
            },
            "title": "History of violence (text)",
            "description": "Narrative or text response",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "0afc55e9-671e-480d-a85e-d80c09657a2f",
            "type": {
                "namespace": "ol",
                "name": "hopelessness"
            },
            "title": "Hopelessness",
            "description": "Question on hopelessness, from the from the NSPL Suicide Risk Assessment standards (Suicidal Desire component). ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b66f28db-765e-426f-95bd-876a25b6bea4",
            "type": {
                "namespace": "ol",
                "name": "hoursofoperation"
            },
            "title": "Hours of Operation",
            "description": "The hours of operation of a facility or business. (array of timestamps for day of week and hours/day)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "35131aa1-8fe9-4786-9f60-d4849a87feb1",
            "type": {
                "namespace": "ol",
                "name": "householdami"
            },
            "title": "HH Annual AMI (%)",
            "description": "Household annual Average Median Income (AMI) (as a percent of HH income)",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "09108469-c88e-42e5-8dd3-491848405bb4",
            "type": {
                "namespace": "ol",
                "name": "householdsize"
            },
            "title": "Household size (#)",
            "description": "Number of people in a household",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7ac3c170-7088-4765-bd23-6ec1d02f2d5f",
            "type": {
                "namespace": "ol",
                "name": "howreported"
            },
            "title": "How reported",
            "description": "Description of how a certain event was reported.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c79cd283-bfa4-4393-aa82-efb0d0e63a17",
            "type": {
                "namespace": "ol",
                "name": "ibr"
            },
            "title": "IBR Code",
            "description": "Law enforcement IBR code.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1130598d-991c-43d5-911b-a824d9af0fb7",
            "type": {
                "namespace": "ol",
                "name": "ibrgroup"
            },
            "title": "IBR group",
            "description": "IBR crime reporting group",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e018dfc5-9b1d-4c1d-b79b-30b49b4e9f97",
            "type": {
                "namespace": "ol",
                "name": "icd10code"
            },
            "title": "ICD-10 Code",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "39e13db7-a730-421a-a600-ae0674060140",
            "type": {
                "namespace": "ol",
                "name": "id"
            },
            "title": "General Identifier",
            "description": "General Identifier",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "111fc894-0478-4ce5-923c-149f720442f7",
            "type": {
                "namespace": "ol",
                "name": "idjurisdiction"
            },
            "title": "Issuing jurisdiction, state, country, or other location of ID",
            "description": "Issuing authority / location of ID - i.e., to which state / country / jurisdiction / tribal authority does it belong",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "692a2108-7f5d-40fa-a376-2341acea88b0",
            "type": {
                "namespace": "ol",
                "name": "idnumber"
            },
            "title": "Identification number or string for an individual",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ae5bbe59-ab6d-43f9-8d69-386d8f85f818",
            "type": {
                "namespace": "ol",
                "name": "idtype"
            },
            "title": "Type or source of identification for an individual",
            "description": "Driver's license, State ID, Passport, National ID, etc.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b4755499-5920-4e52-8774-20d70e812504",
            "type": {
                "namespace": "ol",
                "name": "illiterate"
            },
            "title": "Illiterate / reduced literacy level - Person needs help reading or writing (Y/N) ",
            "description": "Person needs help reading or writing (Y/N) ",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e7c6fe49-1194-4119-bd0f-4ddb94c1b7d9",
            "type": {
                "namespace": "ol",
                "name": "imagedata"
            },
            "title": "Image Data",
            "description": "An image (binary)",
            "schemas": [],
            "datatype": "Binary",
            "piiField": true,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "087d347d-e6e1-4132-9641-6dd351e812e6",
            "type": {
                "namespace": "ol",
                "name": "immediatesupports"
            },
            "title": "Immediate Supports",
            "description": "Question on  one's immediate supports from the NSPL Suicide Risk Assessment standards Buffers / Connectedness component). ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "bdc1f760-1f87-45e4-a49e-c5a2dd0cdabf",
            "type": {
                "namespace": "ol",
                "name": "inactive"
            },
            "title": "Inactive (Y/N)",
            "description": "Flag for inactivity.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9149a1b9-2508-4484-ba90-f89f2cb271bf",
            "type": {
                "namespace": "ol",
                "name": "inappropriatecontent"
            },
            "title": "Inappropriate Content",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "c7edcd30-134f-4a68-b1f2-ab9f932c40d2",
            "type": {
                "namespace": "ol",
                "name": "inattention"
            },
            "title": "Inattention",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "c5e40bd2-df10-450f-beed-ac1f4f9d0b89",
            "type": {
                "namespace": "ol",
                "name": "incidenttypeother"
            },
            "title": "Incident type (other)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6a4cc0a9-de70-405b-9167-817d5a9201a0",
            "type": {
                "namespace": "ol",
                "name": "increasedtolerance"
            },
            "title": "Increased tolerance to drugs/alcohol (Y/N)",
            "description": "Increased tolerance to drugs/alcohol (Y/N)  - AC-OK Screening",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c0760479-aea9-4873-8047-6a063e0952fa",
            "type": {
                "namespace": "ol",
                "name": "index"
            },
            "title": "Index",
            "description": "A numerical identifier to indicate the index or ordering of an element / item / object.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ee5bf9b6-f8a8-4502-afec-8a96601d5431",
            "type": {
                "namespace": "ol",
                "name": "industrycode"
            },
            "title": "Industry code",
            "description": "Code attached to an industry",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "BTREE"
        },
        {
            "id": "4982860a-d82b-4b62-a636-0092a9a55707",
            "type": {
                "namespace": "ol",
                "name": "inmatecontrolstatus"
            },
            "title": "Inmate control status",
            "description": "A subcategory of an inmate custody level that can further restrict inmate freedoms and privileges. These statuses can relate to housing levels.\n",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9edeb131-f6a1-4ba1-b282-2fe3f0f6102c",
            "type": {
                "namespace": "ol",
                "name": "intent"
            },
            "title": "Intent",
            "description": "Care Plan Intent: proposal | plan | order | option",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "ba8963e9-d8e6-4e7a-b10f-95119d64c33f",
            "type": {
                "namespace": "ol",
                "name": "intenttodie"
            },
            "title": "Expressed intent to die",
            "description": "Question on one's expressed intent to die, from the NSPL Suicide Risk Assessment standards (Suicidal Capability component). ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "bb2b71ec-d8b7-465f-8f2c-b62c7aa8f1ba",
            "type": {
                "namespace": "ol",
                "name": "interpretation"
            },
            "title": "Interpretation (e.g., of observation, scores)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "17407675-75d7-472b-82ba-c7d630d3bd22",
            "type": {
                "namespace": "ol",
                "name": "interruptioncount"
            },
            "title": "Count of interruptions / interrupted events",
            "description": "Number of interrupted events (e.g., wakeups)",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6dba18ef-e26d-4059-9328-84b0189e1e88",
            "type": {
                "namespace": "ol",
                "name": "issuespreventingdetox"
            },
            "title": "Issue Preventing Detox (Y/N)",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b2e57899-8c93-422e-afd9-4d8e4ac497e2",
            "type": {
                "namespace": "ol",
                "name": "issuespreventingdetoxnotes"
            },
            "title": "Issues Preventing Detox - Notes",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "b1fabec9-3fe9-4e09-92a1-e73582d6a2a3",
            "type": {
                "namespace": "ol",
                "name": "ivadministration"
            },
            "title": "IV administration indicator (Y/N)",
            "description": "Yes if IV, no if not.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e6d790e8-f2aa-457f-9597-369cf7e0214a",
            "type": {
                "namespace": "ol",
                "name": "juvenilegang"
            },
            "title": "Juvenile Gang Activity",
            "description": "Description or flag of any juvenile gang activity.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "94a8a61c-93cb-4284-82dd-06d36fb3fc81",
            "type": {
                "namespace": "ol",
                "name": "juvenileholdauth"
            },
            "title": "Juvenile Holding Authority",
            "description": "Juvenile Holding Authority.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "351e51ad-9f7e-4bd5-a237-84b16e1e1ce8",
            "type": {
                "namespace": "ol",
                "name": "juveniles"
            },
            "title": "Involving juveniles (Y/N)",
            "description": "Flag for whether involving juveniles (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d0c0240d-2452-4fbf-b4be-6efd306658aa",
            "type": {
                "namespace": "ol",
                "name": "ketonesflag"
            },
            "title": "Ketones - flag",
            "description": "Flag for abnormal results of test or screening for ketones. Based on ketones value property and relevant reference scales, when available. ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4c235fb9-6ac7-455c-8c60-bcb2012e092b",
            "type": {
                "namespace": "ol",
                "name": "key"
            },
            "title": "Key",
            "description": "A key",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3e234667-0d2f-4fa7-8f56-407ff52bd7f4",
            "type": {
                "namespace": "ol",
                "name": "knownaliasbygangmembers"
            },
            "title": "Known alias (gang; Y/N)",
            "description": "Flag for whether one has a known alias or moniker with which other gang members use to identify them.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b86fade5-977a-4099-84ec-a6a54876d11a",
            "type": {
                "namespace": "ol",
                "name": "knownaliasbygangnotes_temp"
            },
            "title": "Known gang alias",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f2dbdc90-bf80-43d4-b015-196864ac4045",
            "type": {
                "namespace": "ol",
                "name": "label"
            },
            "title": "Label",
            "description": "A label",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5bf7f587-c75c-46f1-9935-edb490e8b30e",
            "type": {
                "namespace": "ol",
                "name": "language"
            },
            "title": "Language",
            "description": "Language spoken",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c8f208c0-bd39-45ee-9c0f-817477246613",
            "type": {
                "namespace": "ol",
                "name": "languagedevelopment"
            },
            "title": "Language Development",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "8dffa1f4-6ce4-4846-b704-a0ced7709a6b",
            "type": {
                "namespace": "ol",
                "name": "lastseizuredate"
            },
            "title": "Last seizure date",
            "description": "Date of last seizure",
            "schemas": [],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ceaa83b3-f2a8-49f5-8f4b-d3d08388387a",
            "type": {
                "namespace": "ol",
                "name": "laughter"
            },
            "title": "Laughter",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "94e6ce04-e6a6-4b03-bb92-d8c2f7dc3f46",
            "type": {
                "namespace": "ol",
                "name": "lawenforcementinvolvement"
            },
            "title": "Law Enforcement Involvement (Y/N)",
            "description": "Flag for whether law enforcement was involved.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9ea70964-4f2e-4cf8-80cf-f7b54656b7dd",
            "type": {
                "namespace": "ol",
                "name": "learnsmoreslowly"
            },
            "title": "Learns More Slowly Than Others",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "a57d8213-2b04-4004-b5b5-d2479e88429b",
            "type": {
                "namespace": "ol",
                "name": "lengthofstay"
            },
            "title": "Length of Stay / Episode Length (Days)",
            "description": "Length of stay in days. Double data type (supports partial-day decimal values). May sometimes be PII (HIPAA).",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c443abc0-4b3d-4fde-a977-9de7d6c5ff0d",
            "type": {
                "namespace": "ol",
                "name": "leukocyteflag"
            },
            "title": "Leukocytes - flag",
            "description": "Flag for abnormal results of test or screening for leukocytes (e.g., in urine). Based on leukocyte value property and relevant reference scales, when available. ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6e43eb85-276b-4855-b96c-24f701a58389",
            "type": {
                "namespace": "ol",
                "name": "level"
            },
            "title": "Level",
            "description": "Level",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "25609674-889c-42cb-84b3-299e0a80e7df",
            "type": {
                "namespace": "ol",
                "name": "levelofagreement"
            },
            "title": "Level of Agreement (With Statement)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "da509f09-e38a-4745-9e8d-295e2f42cade",
            "type": {
                "namespace": "ol",
                "name": "levelofcare"
            },
            "title": "Level of Care",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "f957cc01-1969-46b8-bd76-b8006142779b",
            "type": {
                "namespace": "ol",
                "name": "levelstate"
            },
            "title": "State level of charge",
            "description": "State level of charge.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "881c2601-f3b9-40cd-bb9b-86e811182156",
            "type": {
                "namespace": "ol",
                "name": "licenseplateimage"
            },
            "title": "License Plate Image",
            "description": "License Plate Image",
            "schemas": [],
            "datatype": "Binary",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "816e8faa-8740-4fcb-94ab-d0e9e7ae0576",
            "type": {
                "namespace": "ol",
                "name": "likelihood"
            },
            "title": "Likelihood",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "f319ce78-ba6a-495b-a681-b743c3d16cbc",
            "type": {
                "namespace": "ol",
                "name": "limitations"
            },
            "title": "Limitations",
            "description": "Lmitations",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c929ca9a-f03f-468d-9627-923f8571b177",
            "type": {
                "namespace": "ol",
                "name": "literacynotes"
            },
            "title": "Literacy Notes",
            "description": "Notes related to a person's language preference, literacy level, and/or reading disability.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "8e29f6bb-94a5-4c0b-8b32-af00e05af016",
            "type": {
                "namespace": "ol",
                "name": "locationcode"
            },
            "title": "Specific location code (e.g., within a building or facility)",
            "description": "Code identifying specific location of resources within a facility (e.g., building or department code, block identifier, etc.). Not to be confused with more general facility code.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "28d661b8-a45a-41b6-aec4-ed9988fa28dc",
            "type": {
                "namespace": "ol",
                "name": "locationcoordinates"
            },
            "title": "Lat/Lon Coordinates",
            "description": "Map location / geography point; latitude and longitude coordinates (datatype GeoPoint).",
            "schemas": [],
            "datatype": "GeographyPoint",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b0370f87-dcc0-4a99-8357-d93ad9dd4c9d",
            "type": {
                "namespace": "ol",
                "name": "locationstatus"
            },
            "title": "Location Status",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "7f9a6ef4-c75e-4c41-a7dd-1ce49c131040",
            "type": {
                "namespace": "ol",
                "name": "logo"
            },
            "title": "Logo (image)",
            "description": "Logo - image.",
            "schemas": [],
            "datatype": "Binary",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6f92cdf1-3e5f-412d-ae44-ccaa4239344e",
            "type": {
                "namespace": "ol",
                "name": "loneliness"
            },
            "title": "Feeling alone / Loneliness",
            "description": "Question on feeling alone, from the NSPL Suicide Risk Assessment standards \n (Suicidal Desire component).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cf0c7078-c2d3-4cba-ad3e-af5e613c983c",
            "type": {
                "namespace": "ol",
                "name": "mandatory"
            },
            "title": "Mandatory (Y/N)",
            "description": "Flag for whether something is mandatory, i.e., mandatory reporting.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "15f017e2-cd87-4971-841e-92cf96af0c75",
            "type": {
                "namespace": "ol",
                "name": "manifestation"
            },
            "title": "Manifestation",
            "description": "Clinical symptoms and/or signs that are observed or associated with the adverse reaction.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "8a16ce2a-85b5-485c-8a86-caf61f970a8e",
            "type": {
                "namespace": "ol",
                "name": "manuallyclassified"
            },
            "title": "Manually classified (Y/N)",
            "description": "Manually classified (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4cc82f90-fb84-426d-acb0-530c96008b1d",
            "type": {
                "namespace": "ol",
                "name": "mapreference"
            },
            "title": "Reference on a local map",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e5721ba0-f64e-4c19-8e7f-fbb016555a65",
            "type": {
                "namespace": "ol",
                "name": "masterbusinessnumber"
            },
            "title": "Phone number of master business.",
            "description": "Phone number of master business.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3703fbfc-42f7-4d82-9e3a-4d6bd0074e11",
            "type": {
                "namespace": "ol",
                "name": "maximumdatetime"
            },
            "title": "Maximum date (datetime)",
            "description": "",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4167e9dd-ae6f-49d6-a9ea-c38bddeb8901",
            "type": {
                "namespace": "ol",
                "name": "maximumvalue"
            },
            "title": "Maximum value (of a range)",
            "description": "Maximum value (of a range)",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "174abcbc-b2eb-4de3-b001-0e70054b807f",
            "type": {
                "namespace": "ol",
                "name": "medicalconditionhistory"
            },
            "title": "Condition in Medical History Indicator (Y/N)",
            "description": "Indicates whether a condition is present in or relevant to a person's medical history",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ab5f6d19-e395-4379-984d-25ee7850a6b1",
            "type": {
                "namespace": "ol",
                "name": "medicalconditionhistorynotes"
            },
            "title": "Condition in medical history - notes",
            "description": "Text field to describe person's medical history as pertains to specific condition",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "141a88a9-379c-475e-b612-a22e55d985a2",
            "type": {
                "namespace": "ol",
                "name": "medicalconditionmonitoring"
            },
            "title": "Medical Condition Monitoring Required (Y/N)",
            "description": "Medical Condition Monitoring Needed (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5233c803-f115-4696-ade9-770cc2b63949",
            "type": {
                "namespace": "ol",
                "name": "medicalconditionmonitoringnotes"
            },
            "title": "Medical Condition Monitoring Required - Details",
            "description": "Notes and details about medical conditions that need to be monitored",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "ed3de637-df5d-47cf-bb91-9a8ee346a6ab",
            "type": {
                "namespace": "ol",
                "name": "medicalconditionpresent"
            },
            "title": "Medical Condition Present Indicator (Y/N)",
            "description": "Describes patient's current status; indicates whether a medical condition is present (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "28d5e08f-0d92-4c25-9f78-191d0632a11d",
            "type": {
                "namespace": "ol",
                "name": "medicalconditionpresentnotes"
            },
            "title": "Medical Condition Present - Notes",
            "description": "Text field to describe patient as pertains to specific medical condition or illness",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "6e9b88d9-0d9c-4b56-9ebd-49cc344312d9",
            "type": {
                "namespace": "ol",
                "name": "medicaldevice"
            },
            "title": "Medical Device - name (e.g., for ICD-10)",
            "description": "Medical device name. For example,  (1) Radioactive Element (3) Infusion Device (V) Infusion Pump",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "36734862-3f0e-4c64-a5cd-c1b8a51482dd",
            "type": {
                "namespace": "ol",
                "name": "medicaloperation"
            },
            "title": "Medical operation name (e.g., for ICD-10)",
            "description": "For ICD-10 PCS, an example would be (H) Insertion -Putting in a nonbiological appliance that monitors, assists, performs, or prevents a physiological function but does not physically take the place of a body part",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "323fb63a-171f-439d-8260-c67b22f45a37",
            "type": {
                "namespace": "ol",
                "name": "medicaltreatmentindicator"
            },
            "title": "Medical treatment indicator",
            "description": "Indicates whether person has been treated for a condition",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a0656a8e-8364-435b-a6e8-a91551092462",
            "type": {
                "namespace": "ol",
                "name": "medicationpsychissues"
            },
            "title": "Medication for psychological issues (AC-OK) (Y/N)",
            "description": "Whether prescribed medications for psychological or emotional problems (Y/N) - Part of AC-OK Screening",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "76e4aedc-5342-4886-8612-0a831ec7b392",
            "type": {
                "namespace": "ol",
                "name": "memberidnumber"
            },
            "title": "Member ID Number",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cfa5c240-ca36-476f-9603-367ee40dfe6c",
            "type": {
                "namespace": "ol",
                "name": "mentalhealthnotes"
            },
            "title": "Mental Health Notes",
            "description": "An element that contains information about a person's mental health, potentially including social history and psychosocial information.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "3e93de4e-8344-4d08-a9ef-f967d1e0094d",
            "type": {
                "namespace": "ol",
                "name": "method"
            },
            "title": "Method",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "8636d42e-170a-4561-b962-5466fbe7af5e",
            "type": {
                "namespace": "ol",
                "name": "methodofentry"
            },
            "title": "Method of Entry",
            "description": "\"Method of entry\" listed in a law enforcement record.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9d978cb3-7cc4-456c-820a-a978ac81f5cf",
            "type": {
                "namespace": "ol",
                "name": "middlename"
            },
            "title": "Person middle name or names.",
            "description": "Middle name or names of a person.",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "7b6b45e1-5df2-4fad-9041-bde85ebbb83c",
            "type": {
                "namespace": "ol",
                "name": "minimumdatetime"
            },
            "title": "Minimum date (datetime)",
            "description": "",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0abf30c6-4da9-4ffa-9dbf-02ca1b2e0bb6",
            "type": {
                "namespace": "ol",
                "name": "minimumvalue"
            },
            "title": "Minimum value (of a range)",
            "description": "Minimum value (of a range)",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a8c6cfca-88df-485e-8bde-332e5e64ed61",
            "type": {
                "namespace": "ol",
                "name": "misclassified"
            },
            "title": "Misclassified (Y/N)",
            "description": "Misclassified (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "64fba81a-2348-4ad8-9f21-58cb8778f858",
            "type": {
                "namespace": "ol",
                "name": "missingresponse"
            },
            "title": "Missing Data / No Response (Y/N, boolean)",
            "description": "Missing Data / No Response (Y/N, boolean)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "32b2d6fb-b291-4d8c-9787-a469a8ff2e6f",
            "type": {
                "namespace": "ol",
                "name": "mood"
            },
            "title": "Mood (description)",
            "description": "Text description of / characteristics of an individual's mood during an encounter",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "d4394df6-4701-4811-a654-a0558ff4e5eb",
            "type": {
                "namespace": "ol",
                "name": "moreproblematic"
            },
            "title": "More Problematic",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "4f932869-0d81-4455-8de5-ce642a25c0f9",
            "type": {
                "namespace": "ol",
                "name": "morethanintended"
            },
            "title": "Use alcohol/ drugs more than intended? (Y/N) - AC-OK ",
            "description": "Do you, at times, drink alcohol and/or used other drugs more than you intended?  (Y/N)  - AC-OK Screening",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cdb38749-8e44-440b-87db-544ac510034c",
            "type": {
                "namespace": "ol",
                "name": "mostserious"
            },
            "title": "Most Serious (Y/N)",
            "description": "Flag for whether something is the most serious (i.e. offense, charge statute, etc.)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1ad27953-9038-4e64-95aa-08c02be60e44",
            "type": {
                "namespace": "ol",
                "name": "multitaskingtendency"
            },
            "title": "Likelihood of multitasking / tendency to split attention",
            "description": "EG, using device while watching child",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
            "type": {
                "namespace": "ol",
                "name": "name"
            },
            "title": "Name",
            "description": "Full name of entity at a more specific level than the type of a substance (i.e., beer or wine, as opposed to alcohol).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "df73ac08-6a4a-48d4-9847-77681794e0f7",
            "type": {
                "namespace": "ol",
                "name": "narcanadministered"
            },
            "title": "Narcan administered indicator",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cf068e11-5ed4-4aee-8363-f52e9969c486",
            "type": {
                "namespace": "ol",
                "name": "nationality"
            },
            "title": "Nationality",
            "description": "Nationality",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a46f979e-250d-49ab-b974-f41b4796fd4f",
            "type": {
                "namespace": "ol",
                "name": "nationalprovideridentification"
            },
            "title": "National Provider Identification",
            "description": "National Provider Identification Number that can refer to individuals or organizations. CAN BE PII SOMETIMES.",
            "schemas": [],
            "datatype": "Double",
            "piiField": true,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "55bd8483-ae7e-466f-88bd-84d67160bd3f",
            "type": {
                "namespace": "ol",
                "name": "nciccheck"
            },
            "title": "NCIC check (Y/N)",
            "description": "Whether a person or item has been checked against the FBI's NCIC databases.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a5753546-902d-4eb0-8914-e014487138e4",
            "type": {
                "namespace": "ol",
                "name": "ncicresult"
            },
            "title": "NCIC check result",
            "description": "The results from an NCIC search against a person or item.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1c3b3c2d-583b-40ab-b71b-6691bd93277b",
            "type": {
                "namespace": "ol",
                "name": "negated"
            },
            "title": "Negated / refuted / not asked / entered in error",
            "description": "Property to enable differentiation  between affirmatively stating, for example, that a patient has no known allergies versus either not including allergies in the record (for example an episodic document where the allergies are not considered relevant to the document); or asserting that allergies were not reviewed and are unknown. Categories can include  entered-in-error | negated | refuted |  not asked ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "1df921c4-9f92-4e6e-8b41-c6687930c00e",
            "type": {
                "namespace": "ol",
                "name": "negationrationale"
            },
            "title": "Negation rationale",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "e558a4e8-db25-478e-8f22-c5c230c27383",
            "type": {
                "namespace": "ol",
                "name": "neighborhood"
            },
            "title": "Neighborhood",
            "description": "A neighborhood.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "106d1292-d440-4859-ad36-8255e585a518",
            "type": {
                "namespace": "ol",
                "name": "nilsignificant"
            },
            "title": "Nil Significant",
            "description": "Nothing of importance or significance is noted. The identified symptom or sign was reported as not being present to any significant degree. ('True' if subject reports the symptom as not significant.) For example: if the individual has never experienced the symptom, or commonly experiences the symptom (no deviation from 'normal' baseline).",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c1f1b235-6964-44c8-92af-bf55725db94e",
            "type": {
                "namespace": "ol",
                "name": "nitritesflag"
            },
            "title": "Nitrites - flag",
            "description": "Flag for abnormal results of test or screening for nitrites. Based on nitrites value property and relevant reference scales, when available. ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "23241e94-d7c0-4111-bea5-28600e45242f",
            "type": {
                "namespace": "ol",
                "name": "nitritesvalue"
            },
            "title": "NItrites - value",
            "description": "Result of screening. Nitrites in urine may be a sign of a urinary tract infection (UTI).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e2a6b1bc-fcf9-4b7d-a7da-998e794c0583",
            "type": {
                "namespace": "ol",
                "name": "noactionpossible"
            },
            "title": "No action possible",
            "description": "Flag for whether no action was possible.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2aaffa14-e540-4d64-b087-56fe5bef0ba3",
            "type": {
                "namespace": "ol",
                "name": "noaddress"
            },
            "title": "No Address",
            "description": "No permanent address",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7adaf9de-8a4f-4f95-a8b4-9658d53a5173",
            "type": {
                "namespace": "ol",
                "name": "noadmitreasonother"
            },
            "title": "No Admit Reason - Other",
            "description": "Write-in field when 'other' reason is cited for refusing admission to individual",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "f56c7769-2d4a-4d50-8788-60d437b120d9",
            "type": {
                "namespace": "ol",
                "name": "nodatareason"
            },
            "title": "Reason Data Absent / Missing / No Data ",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "c2b1ba7a-86b1-432e-95c5-e7ae156193e1",
            "type": {
                "namespace": "ol",
                "name": "nohealthproblems"
            },
            "title": "No Health Problems or Medical Issues",
            "description": "Person has no health problems",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1d798a9e-3914-4fa9-b011-53459b198301",
            "type": {
                "namespace": "ol",
                "name": "nose"
            },
            "title": "Nose (description)",
            "description": "Description of nose",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
            "type": {
                "namespace": "ol",
                "name": "notes"
            },
            "title": "Notes",
            "description": "Field for notes and other data",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "622741a7-1332-4e6d-8ec5-6906c8abfd68",
            "type": {
                "namespace": "ol",
                "name": "notgiven"
            },
            "title": "Not given / not administered",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "68c294ec-2b0c-449a-857c-397a92ca2a74",
            "type": {
                "namespace": "ol",
                "name": "notified"
            },
            "title": "Notified (Y/N)",
            "description": "flag for whether someone was notified.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e961013c-5206-48ff-81dc-0971e579e4de",
            "type": {
                "namespace": "ol",
                "name": "nre"
            },
            "title": "Non-Recurring Revenue",
            "description": "NRE",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a2bfb6fb-c1ac-4343-9aff-87ad0f910a9e",
            "type": {
                "namespace": "ol",
                "name": "number"
            },
            "title": "Number",
            "description": "A number (integer).",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c23cf4b3-d0bf-4d3a-a507-396991a595ce",
            "type": {
                "namespace": "ol",
                "name": "numberadultstudents"
            },
            "title": "Number of Adult Students",
            "description": "Number of adult students.",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7acb8cda-34bc-4fbc-b320-7481debfa294",
            "type": {
                "namespace": "ol",
                "name": "numberarresteeselsewehere"
            },
            "title": "Number of arrestees elsewhere",
            "description": "Number of arrestees in records also found in records of outside organizations.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "84b850d8-4fb8-4507-b0f6-0b0466d39c0a",
            "type": {
                "namespace": "ol",
                "name": "numberinmateselsewhere"
            },
            "title": "Number of inmates elsewhere",
            "description": "Number of inmates in records also found in records of outside organizations.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cd940361-dc39-4486-be20-a1d43757c20d",
            "type": {
                "namespace": "ol",
                "name": "numberofadults"
            },
            "title": "Number of Adults (#)",
            "description": "The number of adults in a household. (integer)",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "802eac0c-19d4-473d-af60-1abd3dab4fc5",
            "type": {
                "namespace": "ol",
                "name": "numberofbedrooms"
            },
            "title": "No. of Bedrooms",
            "description": "Number of bedrooms in a housing unit.",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2ff968ee-1067-4027-af48-c26b0643a874",
            "type": {
                "namespace": "ol",
                "name": "numberofchecks"
            },
            "title": "Number of Checks (e.g. device pick-ups)",
            "description": "Number of Checks (e.g. device pick-ups) in some period of time",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f28cc0f3-1065-42df-b43f-d70b313a25de",
            "type": {
                "namespace": "ol",
                "name": "numberofchildren"
            },
            "title": "Number of children",
            "description": "The number of children someone has.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1956bf5b-a597-4ba4-bcef-5b286ac83339",
            "type": {
                "namespace": "ol",
                "name": "numberofcounts"
            },
            "title": "Number of Counts",
            "description": "The number of counts of an offense a person is charged with (e.g., charged with two counts of assault).",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4101ac47-9d56-4910-aace-a99f058324a0",
            "type": {
                "namespace": "ol",
                "name": "numberofemsunits"
            },
            "title": "Number of EMS units ",
            "description": "Number of EMS units responding to an event.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cc5dcf55-98e9-452f-955b-4139b165b772",
            "type": {
                "namespace": "ol",
                "name": "numberofemsunitsnoduration"
            },
            "title": "Number of EMS units without timestamps",
            "description": "The number of EMS units at an event with missing data on time spent there.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "fcb28385-93c7-48d8-86b6-f622ee670f1d",
            "type": {
                "namespace": "ol",
                "name": "numberoffireunits"
            },
            "title": "Number of fire units",
            "description": "Number of fire units responding to an event.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "035c5134-52ba-4682-8391-60939c9b79ef",
            "type": {
                "namespace": "ol",
                "name": "numberoffireunitsnoduration"
            },
            "title": "Number of fire units without tiemstamps",
            "description": "The number of fire units at an event with missing data on time spent there.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "12e40b86-c848-4f9e-bb5a-e9632835565b",
            "type": {
                "namespace": "ol",
                "name": "numberofpeople"
            },
            "title": "Number of people",
            "description": "The total number of people (members of the public) involved in a call for service, crime incident or other event. Excluding officers or agency personnel.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b6dec135-54d1-493e-9202-8d72070ddce8",
            "type": {
                "namespace": "ol",
                "name": "numberofpolice"
            },
            "title": "Number of police (officers)",
            "description": "Number of police officers responding to an event.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8c3baea2-1ab0-4eaf-be35-12d0ff7313da",
            "type": {
                "namespace": "ol",
                "name": "numberofpolicenoduration"
            },
            "title": "Number of police officers without timestamps",
            "description": "The number of police officers at an event with missing data on time spent there.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "300079e6-aaca-499d-8116-ae6812aaac44",
            "type": {
                "namespace": "ol",
                "name": "numberofpoliceunits"
            },
            "title": "Number of police (units)",
            "description": "Number of police units responding to an event.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d466fca6-1677-409b-98bd-01d96c519368",
            "type": {
                "namespace": "ol",
                "name": "numberofpoliceunitsnoduration"
            },
            "title": "Number of police units without timestamps",
            "description": "The number of police units at an event with missing data on time spent there.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f9010dd8-ce62-4d2f-a6a7-e4cf32ec6940",
            "type": {
                "namespace": "ol",
                "name": "numberpeopleelsewhere"
            },
            "title": "Number of people elsewhere",
            "description": "Number of people in records also found in records of outside organizations.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8237d146-bf3c-4652-a44a-5ecd9dabb2ad",
            "type": {
                "namespace": "ol",
                "name": "numsourcesfoundin"
            },
            "title": "Number of data sources",
            "description": "Number of data sources a person is found in (e.g., iIn how many police jurisdictions does a record of someone come up?) For aggregation and ranking of top utilizers.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "427ce7b2-02e9-44ff-b88b-8b2065bbe002",
            "type": {
                "namespace": "ol",
                "name": "objectid"
            },
            "title": "Object Identification",
            "description": "Object Identification",
            "schemas": [],
            "datatype": "Guid",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7d0c4111-85db-48d0-8465-708ed0269c31",
            "type": {
                "namespace": "ol",
                "name": "occupation"
            },
            "title": "Occupation",
            "description": "An occupation",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "BTREE"
        },
        {
            "id": "b9bccb61-e83c-4e7d-89fa-62c91ea7665b",
            "type": {
                "namespace": "ol",
                "name": "occupationcode"
            },
            "title": "Occupation Code",
            "description": "Code attached to an occupation",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "BTREE"
        },
        {
            "id": "8b455c6e-0c0e-478c-a291-7519f1b0c279",
            "type": {
                "namespace": "ol",
                "name": "offereddeclined"
            },
            "title": "Offered & Declined (Y/N)",
            "description": "Flag for when services were offered, and declined. ",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7d063dc6-71cd-4fad-9db6-bd388cc6d963",
            "type": {
                "namespace": "ol",
                "name": "ol.hastattoosnotes_temp"
            },
            "title": "Scars, Marks, Tattoos (description)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "83ec25f5-0389-4215-87a5-ba84d137b9d4",
            "type": {
                "namespace": "ol",
                "name": "onsetdatetime"
            },
            "title": "Date of most recent onset",
            "description": "Most recent onset date (datetime data type)",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "74e5effb-6a0f-4644-aad3-dd46a0063605",
            "type": {
                "namespace": "ol",
                "name": "operatingsystem"
            },
            "title": "Operating System",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "5afb4422-d23d-4e70-90ca-f9a9d4f9ebcc",
            "type": {
                "namespace": "ol",
                "name": "opportunitycost"
            },
            "title": "Opportunity Cost",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "24cd6477-01c5-4f25-8453-904d8a5ce84d",
            "type": {
                "namespace": "ol",
                "name": "organizationname"
            },
            "title": "Organization Name / Network Name",
            "description": "Name of larger organization or network",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "58b549ca-62af-4e09-8624-4989f776d4d2",
            "type": {
                "namespace": "ol",
                "name": "organizationtime"
            },
            "title": "Time spent by agency/organization/officer (minutes)",
            "description": "Time spent by an agency or organization at an event. (minutes)",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cfef5c27-4456-4a2b-abf6-119dd4b65fda",
            "type": {
                "namespace": "ol",
                "name": "orientation"
            },
            "title": "Orientation / disorientation status",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "47554181-5be7-4ae2-8373-0364e48ea2ac",
            "type": {
                "namespace": "ol",
                "name": "origin"
            },
            "title": "Origin",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "5a3b4a37-4675-410d-93cd-2f9262c23bef",
            "type": {
                "namespace": "ol",
                "name": "othernotified"
            },
            "title": "Notified (other)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "95c7b8b5-8a7b-41a3-8bdc-2a8f1df99cca",
            "type": {
                "namespace": "ol",
                "name": "otherpersoninjured"
            },
            "title": "Person injured (other)",
            "description": "Person injured, other than one of a set list of categories.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9a32aedd-6d65-4bde-b919-d6eb073a4273",
            "type": {
                "namespace": "ol",
                "name": "othertext"
            },
            "title": "Other - Notes and Comments Related to 'Other' Option",
            "description": "This text field can be used for supplementary information explaining an 'other' response.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "d98f8cf4-4459-4923-b85e-ff35c62b4e9f",
            "type": {
                "namespace": "ol",
                "name": "outcome"
            },
            "title": "Outcome",
            "description": "Outcome of an interaction or contact",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "8e54bdc6-14f8-408e-9236-96864c0f776b",
            "type": {
                "namespace": "ol",
                "name": "outoftouchwithreality"
            },
            "title": "Out of touch with Reality",
            "description": "Question on whether one is out of touch with reality, from the NSPL Suicide Risk Assessment standards (Suicidal Capability component) Being out of touch with reality can be a symptom of acute mental illness. ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "bfb2b4d3-6842-4602-b77b-61252dd86648",
            "type": {
                "namespace": "ol",
                "name": "overwhelmed"
            },
            "title": "Overwhelmed",
            "description": "Feels overwhelmed",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "d4c5b552-c52d-471a-99b5-8a09a6009bb2",
            "type": {
                "namespace": "ol",
                "name": "parentalcontrols"
            },
            "title": "Use of Parental Controls",
            "description": "frequency/agreement",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "514532d6-6756-4d8b-adbf-3d37e66287b4",
            "type": {
                "namespace": "ol",
                "name": "parentalcoviewing"
            },
            "title": "Parental Coviewing",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "057146e2-0f35-402f-ad68-34a003936f65",
            "type": {
                "namespace": "ol",
                "name": "parentalresponsibilities"
            },
            "title": "Parentalresponsibilities",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "dec3c2f3-b1b2-4674-933b-a41dc4b9525d",
            "type": {
                "namespace": "ol",
                "name": "parentingquality"
            },
            "title": "Parenting Quality ",
            "description": "categorical scale",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "24f9de48-5c58-4697-a68c-fe156bfa3c3c",
            "type": {
                "namespace": "ol",
                "name": "paroleviolation"
            },
            "title": "Parole violation (Y/N)",
            "description": "Flag for whether something is a parole violation. ",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "58a9d637-98e3-4727-b9c0-eb431c420936",
            "type": {
                "namespace": "ol",
                "name": "participant"
            },
            "title": "Participant type / role",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "8a0449c3-1f27-44ab-8c69-571aced1ccc9",
            "type": {
                "namespace": "ol",
                "name": "pcttime"
            },
            "title": "Percent time",
            "description": "",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7f47d8a0-18fc-47e3-8b5a-2044a0a237d2",
            "type": {
                "namespace": "ol",
                "name": "pendingreviews"
            },
            "title": "Pending reviews (Y/N)",
            "description": "Flag for whether one or more reviews is pending.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9d41391d-1082-43d6-9420-ea086effcfa2",
            "type": {
                "namespace": "ol",
                "name": "perceivedburden"
            },
            "title": "Perceived burden on others",
            "description": "Question on one's perceived burden on others, from the from the NSPL Suicide Risk Assessment standards (Suicidal Desire component). ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6a07d836-5613-4917-99af-9ed56eb4f44d",
            "type": {
                "namespace": "ol",
                "name": "percent"
            },
            "title": "Percent (pct, %)",
            "description": "pct",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "87bc2163-5c93-412e-972f-9ded4eb43437",
            "type": {
                "namespace": "ol",
                "name": "percentcompletion"
            },
            "title": "Percent (%) Completion",
            "description": "",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4e4d35e2-8dad-4af7-83f8-c28f983bffe2",
            "type": {
                "namespace": "ol",
                "name": "personemsminutes"
            },
            "title": "Time spent on person (EMS)",
            "description": "Total time spent on a person by responding EMS organizations.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "07488a0f-0096-4d4b-bdb2-fb50b3a03997",
            "type": {
                "namespace": "ol",
                "name": "personfireminutes"
            },
            "title": "Time spent on person (fire)",
            "description": "Total time spent on a person by fire departments, responding to dispatch calls for service or other events. (minutes)",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b02188e0-3001-4cef-9184-e31b1bba4cc0",
            "type": {
                "namespace": "ol",
                "name": "personinjured"
            },
            "title": "Person injured",
            "description": "The person who was injured.",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "1a99a9f7-c9fa-4cc9-9e29-1370c440f392",
            "type": {
                "namespace": "ol",
                "name": "personpoliceminutes"
            },
            "title": "Time spent on person (police)",
            "description": "Total time spent on a person by police responding to dispatch calls for service or other events. (minutes)",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "457b03d7-84b9-4028-a7f9-9836d7cd2658",
            "type": {
                "namespace": "ol",
                "name": "persontoassist"
            },
            "title": "Person to assist",
            "description": "People who were present to assist at a law enforcement or other scene (e.g., family, friend, neighbor, service provider).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9441199f-3c8f-4f4b-af15-3e9546bc2531",
            "type": {
                "namespace": "ol",
                "name": "persontoassistother"
            },
            "title": "Person to assist (other)",
            "description": "People who were present to assist at a law enforcement or other scene (other than those from a pre-formed list).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b9e4901c-ae6c-4e6e-b456-9511f1e71934",
            "type": {
                "namespace": "ol",
                "name": "phflag"
            },
            "title": "pH - flag ",
            "description": " Result of screening; based on pH value property, when available. ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e107ace7-8fad-40d0-9d2e-57cf47cbb839",
            "type": {
                "namespace": "ol",
                "name": "phonenumberdescription"
            },
            "title": "Phone number description",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "9bc02b4a-bc13-42a7-89a2-53c8500b2517",
            "type": {
                "namespace": "ol",
                "name": "photographs"
            },
            "title": "Photographs/Images (Y/N)",
            "description": "Whether photos/images exist or have been verified.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "71bd7c15-6abe-49eb-be27-2997d8d02056",
            "type": {
                "namespace": "ol",
                "name": "phvalue"
            },
            "title": "pH - value",
            "description": "pH - numeric value, result of screening ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6b3c1924-2dd5-448c-ba6d-320784f2a139",
            "type": {
                "namespace": "ol",
                "name": "physicalevidence"
            },
            "title": "Physical evidence (Y/N)",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c6be649e-39ec-4306-98ec-a9345c8814c6",
            "type": {
                "namespace": "ol",
                "name": "physicalevidencenotes"
            },
            "title": "Physical evidence (description)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "faf3c011-b386-4c51-a1bb-4bad27b4083f",
            "type": {
                "namespace": "ol",
                "name": "pictureback"
            },
            "title": "Picture of object back (e.g., card, ID)",
            "description": "Picture of object back (e.g., card, ID) - stored as binary",
            "schemas": [],
            "datatype": "Binary",
            "piiField": true,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e8174f66-4b80-4f8c-bcd3-2924d5ccd6d7",
            "type": {
                "namespace": "ol",
                "name": "picturefront"
            },
            "title": "Picture of object front (e.g., card, ID)",
            "description": "Picture of object front (e.g., card, ID) - stored as binary",
            "schemas": [],
            "datatype": "Binary",
            "piiField": true,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "eb5e3bd2-8238-4434-81d0-ca3d6cbbafc7",
            "type": {
                "namespace": "ol",
                "name": "planningforfuture"
            },
            "title": "Planning for the Future",
            "description": "Question on planning for the future, from the NSPL Suicide Risk Assessment standards (Buffers / Connectedness component). ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2f96922e-dcaf-42f1-953a-ad650f2282b1",
            "type": {
                "namespace": "ol",
                "name": "plantokill"
            },
            "title": "Plan/Intent to kill (self/others)",
            "description": "Question on one's intent or plans to kill oneself (suicide) or others.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "71075611-5217-409a-be98-e9e3ef21f44d",
            "type": {
                "namespace": "ol",
                "name": "plantype"
            },
            "title": "Plan Type",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "86b4bbbf-6006-4863-9f6b-7b1b2f707837",
            "type": {
                "namespace": "ol",
                "name": "policeminutes"
            },
            "title": "Time spent by police (minutes)",
            "description": "Total time spent on an incident, dispatch call for service, or other event by police officers.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "200a4b05-655f-419a-ba00-648747cb4b11",
            "type": {
                "namespace": "ol",
                "name": "policeunitminutes"
            },
            "title": "Time spent by police units (minutes)",
            "description": "Total time spent on an incident, dispatch call for service, or other event by police units.",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e030091b-4447-4bdc-804f-430fb664978b",
            "type": {
                "namespace": "ol",
                "name": "policynumber"
            },
            "title": "Policy Number or Policy Identification String",
            "description": "Policy number or Policy identifier",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6436b8ba-a113-4fed-8cde-2e00c6a47253",
            "type": {
                "namespace": "ol",
                "name": "position"
            },
            "title": "Position",
            "description": "E.g., sleeping position",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "fae7f022-8043-4f97-b9fc-8a3d826db42d",
            "type": {
                "namespace": "ol",
                "name": "positiveeffects"
            },
            "title": "Positive effects (e.g., of a treatment)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "181eed7e-a0bc-4913-a9f4-439f1d52d1bb",
            "type": {
                "namespace": "ol",
                "name": "postponementreason"
            },
            "title": "Postponement reason",
            "description": "A reason for postponement of an appointment",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "c8a43c4e-fde7-459d-a475-65bd9d513ca7",
            "type": {
                "namespace": "ol",
                "name": "prankcall"
            },
            "title": "Prank call (Y/N)",
            "description": "Flag for whether a call received was a prank call.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "705bfa28-7b10-47d5-931e-9f06aeb5644e",
            "type": {
                "namespace": "ol",
                "name": "preferred"
            },
            "title": "Preferred (Y/N)",
            "description": "Flag for whether a value (one out of many) is the preferred one.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1b4b3973-6465-4483-a455-30be30bdc912",
            "type": {
                "namespace": "ol",
                "name": "preferredmethod"
            },
            "title": "Preferred method of contact",
            "description": "Preferred method of contact",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "606c1d99-7240-4982-8f2f-62f71b99453b",
            "type": {
                "namespace": "ol",
                "name": "preferredname"
            },
            "title": "Preferred name ",
            "description": "Preferred name for person, item, or substance",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "ca62d878-f295-4c22-bb33-f9eba7a4b382",
            "type": {
                "namespace": "ol",
                "name": "pregnancyindicator"
            },
            "title": "Pregnancy Indicator (Y/N)",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5874df92-75d1-4134-b3e7-aaad97c0dc17",
            "type": {
                "namespace": "ol",
                "name": "prematurebirth"
            },
            "title": "Premature Birth",
            "description": "Earlier than 37 weeks",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "bba073c7-d4d0-4599-b958-09bf8a35e2a0",
            "type": {
                "namespace": "ol",
                "name": "preoccupiedwithalcoholdrugs"
            },
            "title": "Have you been preoccupied with drinking alcohol and/or using other drugs? (Y/N)  - AC-OK Screening",
            "description": "Have you been preoccupied with drinking alcohol and/or using other drugs? (Y/N)  - Part of AC-OK Screening",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "32a444d0-954a-47fe-a76c-c4ca50590f73",
            "type": {
                "namespace": "ol",
                "name": "preparatorybehaviors"
            },
            "title": "Preparatory behaviors (suicide)",
            "description": "Question on one's preparatory behaviors for suicide. From the NSPL Suicide Risk Assessment standards (Suicidal capability subcomponent).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "dc1fe921-ffd4-4d1b-a094-9fa3d25d4943",
            "type": {
                "namespace": "ol",
                "name": "prescriptionbin"
            },
            "title": "Prescription BIN",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "36bc33ef-1ae0-40f1-91f2-6e1c7a3eadbb",
            "type": {
                "namespace": "ol",
                "name": "prescriptiongroup"
            },
            "title": "Insurance Prescription Group",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e56f3d9d-7381-434a-998d-4d310f850cb0",
            "type": {
                "namespace": "ol",
                "name": "prescriptionpcn"
            },
            "title": "Prescription PCN",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "aef490ca-b0e5-455c-b831-0d04bdf1a5e2",
            "type": {
                "namespace": "ol",
                "name": "previousmoveindate"
            },
            "title": "Previous Move-in Date",
            "description": "Previous residential move-in date, in a housing history.",
            "schemas": [],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "dfe90a24-41ec-4b7d-8051-8bcbc81dc630",
            "type": {
                "namespace": "ol",
                "name": "primary"
            },
            "title": "Primary (Y/N)",
            "description": "Indicates whether condition / person / situation / item is the primary one (e.g., primary diagnosis, primary doctor, primary insurance, etc.)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c87cdbb7-c4bd-4c71-b0ec-70b1ed69e00d",
            "type": {
                "namespace": "ol",
                "name": "primarypolicyholder"
            },
            "title": "Primary Policy Holder / Primary Insured (Y/N)",
            "description": "Identifies whether the person presenting for services is the primary policy holder or primary insured individual (vs. a beneficiary/dependent)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f52ecac3-f1ab-46e4-8af8-3b8dcf68fe4d",
            "type": {
                "namespace": "ol",
                "name": "priority"
            },
            "title": "Priority",
            "description": "A description of the priority (e.g., of an appointment).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "8ae217a6-328c-40b9-8946-28c1d526748c",
            "type": {
                "namespace": "ol",
                "name": "probationeligible"
            },
            "title": "Probation eligible",
            "description": "Is the person eligable for probation?",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "56cd7bc4-3d81-4a81-a5e2-308c4678efc4",
            "type": {
                "namespace": "ol",
                "name": "probationnumber"
            },
            "title": "Probation #",
            "description": "A person's probation number.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "860fed9c-f446-4492-926b-d87d9daffd50",
            "type": {
                "namespace": "ol",
                "name": "problematic"
            },
            "title": "Problematic (Y/N)",
            "description": "Problematic (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6e22d468-4977-4bec-8b87-9a9a9b10963e",
            "type": {
                "namespace": "ol",
                "name": "projectedreleasedatetime"
            },
            "title": "Projected Release Datetime",
            "description": "Datetime for the projected release.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "39e3e0d1-d5c4-4422-a88d-e5e442e8a667",
            "type": {
                "namespace": "ol",
                "name": "protectivecustody"
            },
            "title": "Protective Custody (Y/N)",
            "description": "Flag for whether involving protective custody (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5ed4db49-e880-48be-b432-b47ee11fec2d",
            "type": {
                "namespace": "ol",
                "name": "proteinflag"
            },
            "title": "Protein - flag",
            "description": "Flag for abnormal results of test or screening for protein (e.g., in urine). Based on protein value property and relevant reference scales, when available. ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8ec3bc52-0b2a-40a2-8816-2430c6daf627",
            "type": {
                "namespace": "ol",
                "name": "psychdiagnosisindicator"
            },
            "title": "Psychiatric or mental health diagnosis indicator (Y/N) ",
            "description": "Person has psychiatric or mental health diagnosis / complications (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f5fd993f-57f4-4d5b-832f-55dddd5b809e",
            "type": {
                "namespace": "ol",
                "name": "psychologicalpain"
            },
            "title": "Psychological pain (description)",
            "description": "Question on psychological pain, from the NSPL Suicide Risk Assessment standards \n (Suicidal Desire component).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "72e3a73c-8702-444d-8eba-80c05e9842cd",
            "type": {
                "namespace": "ol",
                "name": "psychologicalpainrating"
            },
            "title": "Psychological pain (rating)",
            "description": "Numerical rating given to psychological pain, from the the NSPL Suicide Risk Assessment standards \n (Suicidal Desire component).",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "89168ef4-3251-4f80-a04a-040fe6cbd6f6",
            "type": {
                "namespace": "ol",
                "name": "pulserate"
            },
            "title": "Pulse rate (in bpm)",
            "description": "Pulse rate in beats per minute",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "542d4049-88bf-4755-856a-283d79a2b129",
            "type": {
                "namespace": "ol",
                "name": "pulseratecategory"
            },
            "title": "Pulse rate category",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "fee00dc4-6e57-421a-8414-18c956ee192f",
            "type": {
                "namespace": "ol",
                "name": "qualifier"
            },
            "title": "Qualifier (descriptive text or symbol)",
            "description": "For example, < or >.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4c5bb97b-8d42-497a-9600-9c53abb10870",
            "type": {
                "namespace": "ol",
                "name": "qualitycontrolquestion"
            },
            "title": "Quality Control Question",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c2d759b8-639a-414d-81b8-30caf3ab7df3",
            "type": {
                "namespace": "ol",
                "name": "qualityofcare"
            },
            "title": "Quality of Care",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "df0277b0-df7e-406f-8360-4a6ed6437fbe",
            "type": {
                "namespace": "ol",
                "name": "quantity"
            },
            "title": "Quantity (numeric value)",
            "description": "Quantity of an object (e.g., a medication)",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6bfdf8dc-6404-4537-9b51-26ab0b3a455e",
            "type": {
                "namespace": "ol",
                "name": "racingthoughts"
            },
            "title": "Racing Thoughts (Y/N)  AC-OK",
            "description": "Have you experienced a period of time when your thinking speeds up and you have trouble keeping up with your thoughts? (Text) - Part of AC-OK Screening",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0397b67c-870b-483a-84b9-d683de54ea3a",
            "type": {
                "namespace": "ol",
                "name": "reactionseverity"
            },
            "title": "Reactionseverity",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "e58e3c0c-d8e7-4650-9146-e6e67ce472d6",
            "type": {
                "namespace": "ol",
                "name": "reactiontype"
            },
            "title": "Reaction Type",
            "description": "Allergic Reaction Type",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "0ace727d-b397-48ba-82ab-2e6138fb31df",
            "type": {
                "namespace": "ol",
                "name": "readmissionflag"
            },
            "title": "Readmission Indicator",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c33e55fa-6519-49fe-b683-655ef48ab2e4",
            "type": {
                "namespace": "ol",
                "name": "realcall"
            },
            "title": "Real call (Y/N)",
            "description": "Flag for whether a call received was genuinely intended to ask for help/report an event.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "bda5e928-e9f3-4a8f-9e45-4c118d072b6a",
            "type": {
                "namespace": "ol",
                "name": "reason"
            },
            "title": "Reason",
            "description": "Presenting Problem / Reason for Encounter. Identification of the clinical or social problem motivating the subject of care to seeking the encounter (e.g., healthcare). ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "52722320-b04e-41ae-95b3-ec670256e0b9",
            "type": {
                "namespace": "ol",
                "name": "reasoncode"
            },
            "title": "Reason Code",
            "description": "Reason held code in a jail record.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8d7889be-f23c-42a9-811b-f72a3671d1a1",
            "type": {
                "namespace": "ol",
                "name": "reasonheld"
            },
            "title": "Reason held",
            "description": "Reason person is held.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b71a2186-e56a-4ade-b5a9-561d21db1331",
            "type": {
                "namespace": "ol",
                "name": "reasonother"
            },
            "title": "Reason (other)",
            "description": "Other reason.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8be727f4-adcd-486c-b860-918595908c9f",
            "type": {
                "namespace": "ol",
                "name": "receivedcertification"
            },
            "title": "Received certification (Y/N)",
            "description": "Flag for whether a person has received a certification.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9f3bc9a7-cb01-4cb5-9d62-628912e7e637",
            "type": {
                "namespace": "ol",
                "name": "receiveddatetime"
            },
            "title": "Datetime Received",
            "description": "Datetime to indicate reception of goods/call/...",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a74abb45-0912-47b6-8a7d-470af7ac42ef",
            "type": {
                "namespace": "ol",
                "name": "recentoverdoseindicator"
            },
            "title": "Recent Overdose Indicator (Y/N)",
            "description": "Yes if person reports a recent overdose, no otherwise",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "eac3c135-2819-408f-9134-c809c860e8f6",
            "type": {
                "namespace": "ol",
                "name": "recognizedenddate"
            },
            "title": "Recognized end datetime",
            "description": "The end of a recognized/relevant period.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "fcd7afb9-906b-486d-afb1-c2a3c0eccf35",
            "type": {
                "namespace": "ol",
                "name": "recognizedstartdate"
            },
            "title": "Recognized start datetime",
            "description": "The start of a recognized/relevant period.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1694fe54-4eb7-4a90-9875-d93acd20739c",
            "type": {
                "namespace": "ol",
                "name": "recommendations"
            },
            "title": "Recommendations (e.g., clinical)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "9e8d3210-8fb6-4532-b94a-cd746c8c57d6",
            "type": {
                "namespace": "ol",
                "name": "recordeddate"
            },
            "title": "Recorded Date (datetime)",
            "description": "Date observation or condition was first recorded. In a medical history, this is used to help establish if/when condition was formally diagnosed and/or verified by a medical professional.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7f311ad1-2972-4fb6-b273-cf9a04746494",
            "type": {
                "namespace": "ol",
                "name": "recorder"
            },
            "title": "Recorder - information source",
            "description": "Individual who recorded / reported the condition (at the time it occurred). (e.g., Practitioner, patient, related person). http://hl7.org/fhir/condition-definitions.html#Condition.recorder. In a medical history, this is used to help establish whether a condition is diagnosed and/or verified by a medical professional.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "285e6bfc-2a73-49ae-8cb2-b112244ed85d",
            "type": {
                "namespace": "ol",
                "name": "recordtype"
            },
            "title": "Record Type",
            "description": "A type of record.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ccc4b8c4-7a48-4a8b-8599-e094bf11c755",
            "type": {
                "namespace": "ol",
                "name": "recurrence"
            },
            "title": "Recurrence",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "906d1747-f118-48ef-839b-d1a53f64f2ca",
            "type": {
                "namespace": "ol",
                "name": "recurring"
            },
            "title": "Recurring (Y/N)",
            "description": "Flag for whether something recurs/recurred rather than happened once.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "96e27bda-2ee0-444a-b5ec-9c9bc761887f",
            "type": {
                "namespace": "ol",
                "name": "reference"
            },
            "title": "Reference ID /  reference link",
            "description": "Used to link to a specific umbrella entity (e.g., encounter, episode)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d750e74f-0829-439c-b6ef-1dfc3692a78f",
            "type": {
                "namespace": "ol",
                "name": "referenceid"
            },
            "title": "Authorization / Preauthorization / Referral Number / Unique Confirmation Code or ID",
            "description": "Authorization / Preauthorization / Referral Number or ID",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "15eacd55-8f34-4af4-a464-9b9ea5420929",
            "type": {
                "namespace": "ol",
                "name": "referfortreatment"
            },
            "title": "Refer for treatment (Y/N)",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "449179ea-4a8c-4d84-884b-13d13300cf21",
            "type": {
                "namespace": "ol",
                "name": "referralprovidedindicator"
            },
            "title": "Referral Provided (Y/N)",
            "description": "Referral information provided to individual for followup care after incident (Y/N) - indicator variable",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4b30c32e-da3d-488b-ac52-d25484c8033e",
            "type": {
                "namespace": "ol",
                "name": "referrername"
            },
            "title": "Name of referrer",
            "description": "Name of referrer",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "a0534dd8-0150-4d37-a41c-32d351c2fa22",
            "type": {
                "namespace": "ol",
                "name": "refills"
            },
            "title": "Refills",
            "description": "Number of refills allowed",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c15a4228-99cb-4439-8c5f-25fccb8ed781",
            "type": {
                "namespace": "ol",
                "name": "regimen"
            },
            "title": "Regimen",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "e5e31ef9-fc7e-4ee7-b5d8-f02ef2c0b485",
            "type": {
                "namespace": "ol",
                "name": "relatedproblems"
            },
            "title": "Related diagnoses / problems / conditions",
            "description": "Link to related diagnoses / problems",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "e8b01393-7594-4bf7-a6e8-6b1aaf70a298",
            "type": {
                "namespace": "ol",
                "name": "relatedsymptoms"
            },
            "title": "Related symptoms / signs",
            "description": "Link to related symptoms or signs",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "c5a388d7-f9ed-4eb6-8dd6-633a4afcae6a",
            "type": {
                "namespace": "ol",
                "name": "relationship"
            },
            "title": "Relationship",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "eaa64e54-fd63-4678-a589-680f5b9fb1da",
            "type": {
                "namespace": "ol",
                "name": "relationshipissues"
            },
            "title": "Relationship Issues",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "9fc2d920-470f-40d6-8dbd-6861a3e59685",
            "type": {
                "namespace": "ol",
                "name": "relativefrequency"
            },
            "title": "Relative Frequency (text)",
            "description": "Relative Frequency",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "c48d3c45-e9f2-4fbf-9824-9549b5199c87",
            "type": {
                "namespace": "ol",
                "name": "relativespeed"
            },
            "title": "Relative Speed (text)",
            "description": "Relative Speed (e.g., of learning)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "e5471522-9ec6-46e1-8b91-56b7e9291605",
            "type": {
                "namespace": "ol",
                "name": "releasedatetime"
            },
            "title": "Release DateTime",
            "description": "The exact release datetime (not projected) for a jailstay.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f12a9c1e-c81c-46fc-9974-7344fb6046d8",
            "type": {
                "namespace": "ol",
                "name": "relevantperiod"
            },
            "title": "Relevant Period (Text)",
            "description": "Relates to time frame of survey (or other) question ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "af4648ce-4ce9-476b-b1d4-068592a84bcf",
            "type": {
                "namespace": "ol",
                "name": "reportedmember"
            },
            "title": "Reported member (Y/N)",
            "description": "Flag for whether a person has been reported by a reliable source to be a member of a group, like a criminal gang. ",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d2a1e280-8ca5-4dc0-b1cf-0f071bc15d84",
            "type": {
                "namespace": "ol",
                "name": "reportedmembernotes"
            },
            "title": "Reported member (description)",
            "description": "Description of how a person has been reported by a reliable source to be a member of a group, like a criminal gang. ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "074a66c3-e109-4a0f-b60a-05fe1200191e",
            "type": {
                "namespace": "ol",
                "name": "requiredcharges"
            },
            "title": "Required/Non-optional charges ($)",
            "description": "Required or non-optional charges ($)",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9b8f0010-d5e9-4ca0-9024-6d821d7075d6",
            "type": {
                "namespace": "ol",
                "name": "resourceid"
            },
            "title": "Identifier of resource used",
            "description": "For example, serial number or lot ID.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2e852b34-9b43-402b-800a-ad7178481fd2",
            "type": {
                "namespace": "ol",
                "name": "respirationrate"
            },
            "title": "Respiration rate (in bpm)",
            "description": "Respiration rate in breaths per minute - numeric value",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4bae5b6e-3681-4e5f-b1e9-3429b482b2d9",
            "type": {
                "namespace": "ol",
                "name": "response"
            },
            "title": "Response (description)",
            "description": "A person's response to an intervention.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "88d822a6-495b-4d54-bfb1-4ee1c8a4979a",
            "type": {
                "namespace": "ol",
                "name": "restrictedactivities"
            },
            "title": "Restricted Activities",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "a845c7e8-de9d-4af8-b071-012074e84036",
            "type": {
                "namespace": "ol",
                "name": "restrictions"
            },
            "title": "Restrictions",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "5aaf8461-a64b-446c-9391-2bfc86e6538b",
            "type": {
                "namespace": "ol",
                "name": "restrictschildmediause"
            },
            "title": "Restricts Child Media Use",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "01496236-e059-48d3-a01e-847eaf436fe2",
            "type": {
                "namespace": "ol",
                "name": "reviewed"
            },
            "title": "Reviewed (Y/N)",
            "description": "Flag for whether something was reviewed.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c5909ed6-5c9d-4016-b5ae-eba0008f4b2e",
            "type": {
                "namespace": "ol",
                "name": "role"
            },
            "title": "Role of person",
            "description": "Role of person, in an event, organization, or program.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9e0ddd74-6881-44b3-a7d8-f98e9b45e02d",
            "type": {
                "namespace": "ol",
                "name": "roledescription"
            },
            "title": "Description of role",
            "description": "This propertytype represents a description of someone's role in an association or event. Usually more detailed than ol.role",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "91289250-d7aa-4cef-8069-02f0956a1ffa",
            "type": {
                "namespace": "ol",
                "name": "roomnumber"
            },
            "title": "Room number",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "fa1cb70f-c5f4-481f-a9ad-561eb5d7a41a",
            "type": {
                "namespace": "ol",
                "name": "routeofadministration"
            },
            "title": "Route of Administration",
            "description": "Route of Administration (e.g., Drug Usage Route, Method of Administration)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "61592882-b700-42cd-95b7-715f312ece90",
            "type": {
                "namespace": "ol",
                "name": "safetyconcerns"
            },
            "title": "Safety Concerns",
            "description": "Concerns voiced about various encounters.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "01a38115-3bb7-49a1-8003-a32ae02ad283",
            "type": {
                "namespace": "ol",
                "name": "scale1to10"
            },
            "title": "A scale with integer values 1-10",
            "description": "Scale 1-10",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e671a273-d540-4f4e-a428-ce7f0b2f7129",
            "type": {
                "namespace": "ol",
                "name": "scorecategory"
            },
            "title": "Assessment Score Categorization",
            "description": "Categorization of assessment score (e.g., Global Assessment of Functioning score categorization)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "418f4003-99ca-4c0c-a32b-ac9145be7209",
            "type": {
                "namespace": "ol",
                "name": "scoredescription"
            },
            "title": "Assessment Score Description",
            "description": "Text description, explanation, or notes associated with a numeric score",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "79f562d8-efe7-4780-9f8b-3e5bc5fa6733",
            "type": {
                "namespace": "ol",
                "name": "scorevalue"
            },
            "title": "Assessment Score - Numeric Value ",
            "description": "",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6653a2e7-cb51-427a-bddb-dcae3cfb689c",
            "type": {
                "namespace": "ol",
                "name": "searchquery"
            },
            "title": "Search Query",
            "description": "Saved search query for setting alerts",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ba0b6825-154d-4142-a483-248169171eff",
            "type": {
                "namespace": "ol",
                "name": "searchreason"
            },
            "title": "Search Reason",
            "description": "A reason for performing a search",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f2e27121-252e-41d0-8ba0-d3cd42768e97",
            "type": {
                "namespace": "ol",
                "name": "section"
            },
            "title": "Section name (e.g., for ICD-10)",
            "description": "For example, ICD-10 PCS seems to have the following sections: Medical and Surgical; Obstetrics; Administrative; New Technology.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "7da40450-5005-44e1-9ccd-cccadc2904a9",
            "type": {
                "namespace": "ol",
                "name": "securitylevel"
            },
            "title": "Security level",
            "description": "A level of security.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "BTREE"
        },
        {
            "id": "c687a37c-11e1-4e71-9b90-ff69467cfe2e",
            "type": {
                "namespace": "ol",
                "name": "seeningangareas"
            },
            "title": "Seen in gang areas (Y/N)",
            "description": "Flag for whether one has been \"seen frequenting gang areas\".",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d8ead474-4d65-4c80-92de-1b676de7bfaf",
            "type": {
                "namespace": "ol",
                "name": "seeningangareasnotes"
            },
            "title": "Seen in gang areas (description)",
            "description": "Description of how one has been \"seen frequenting gang areas\". ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "be3b91dc-f51e-4519-9a22-fc4092a700ae",
            "type": {
                "namespace": "ol",
                "name": "seizurehistorytext"
            },
            "title": "Seizure history",
            "description": "Approximate date(s) and/or frequency of last seizure.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9302e564-6455-4f58-843c-b08e6c9e9daf",
            "type": {
                "namespace": "ol",
                "name": "selection"
            },
            "title": "Selection",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "272cb402-df13-433a-8d32-61bf763b2ff3",
            "type": {
                "namespace": "ol",
                "name": "senseofpurpose"
            },
            "title": "Sense of Purpose",
            "description": "Question on one's sense of purpose, from the NSPL Suicide Risk Assessment standards (Buffers / Connectedness component). ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0220af01-e45b-4d2c-b96f-bc16f058342d",
            "type": {
                "namespace": "ol",
                "name": "sentencedays"
            },
            "title": "Sentence days",
            "description": "Number of days of sentence.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e652629a-70e0-458a-ae9f-02ca600d0360",
            "type": {
                "namespace": "ol",
                "name": "sentencehours"
            },
            "title": "Sentence hours",
            "description": "Number of hours of sentence.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8538506a-3dba-4bb9-95b5-1e4ed9e00eb9",
            "type": {
                "namespace": "ol",
                "name": "sentenceyears"
            },
            "title": "Sentence (years)",
            "description": "A sentence term  in years, in jail or prison.",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6cc6abfd-c9c6-4ba1-84b1-9719cd25d40c",
            "type": {
                "namespace": "ol",
                "name": "sequence"
            },
            "title": "Sequence",
            "description": "Sequence",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a3cc030f-bb53-4e77-b67f-430ca201bf85",
            "type": {
                "namespace": "ol",
                "name": "seriousdepression"
            },
            "title": "Experienced Serious Depression (AC-OK)",
            "description": "AC-OK Screening - Have you experienced serious depression (felt sadness, hopelessness, loss of interest, change of appetite or sleep pattern, difficulty going about your daily activities)?",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2956a11f-b787-4fe9-b396-4f00b1bfecd8",
            "type": {
                "namespace": "ol",
                "name": "servicesetting"
            },
            "title": "Service Setting",
            "description": "Specific service setting (e.g., for a health care interaction).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "07844126-651d-417f-9678-df3f909a7ef7",
            "type": {
                "namespace": "ol",
                "name": "servicetype"
            },
            "title": "Service Type",
            "description": "Specific type of service",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "d557fb41-1c2a-4b4d-ade9-ab25553e1d99",
            "type": {
                "namespace": "ol",
                "name": "setviewinghours"
            },
            "title": "Set Viewing Hours",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "c4ebb166-0d09-4499-beb3-627c3372168f",
            "type": {
                "namespace": "ol",
                "name": "severity"
            },
            "title": "Severity",
            "description": "Mild [The problem or diagnosis does not interfere with normal activity or may cause damage to health if left untreated.]\nModerate [The problem or diagnosis causes interference with normal activity or will damage health if left untreated.]\nSevere [The problem or diagnosis prevents normal activity or will seriously damage health if left untreated.]  Fatal.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "58958407-cb4a-4233-963d-f6a96b09b7a9",
            "type": {
                "namespace": "ol",
                "name": "severityscale"
            },
            "title": "Severity scale / numeric rating",
            "description": "Numerical rating scale representing the overall severity (e.g., of pain, or of a symptom / sign).",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0a4dac75-60ad-445b-9727-92bb572bc67a",
            "type": {
                "namespace": "ol",
                "name": "sex"
            },
            "title": "Sex",
            "description": "A person's sex: male, female, or non-binary.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2290c1f5-c13d-476a-8727-688d4ede5d7e",
            "type": {
                "namespace": "ol",
                "name": "sexcall"
            },
            "title": "Sex call (Y/N)",
            "description": "Flag for whether a call received was soliciting sex.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1e5bc2c5-3320-4ae0-b4eb-38edf65a4942",
            "type": {
                "namespace": "ol",
                "name": "sexcrime"
            },
            "title": "Sex crime (Y/N)",
            "description": "Flag for sex crime (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "31854afe-a16e-4d64-99cd-6bf21efe468b",
            "type": {
                "namespace": "ol",
                "name": "sexoffender"
            },
            "title": "Sex offender (Y/N)",
            "description": "Boolean indicator for sex offender.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "bd6698da-f2d5-4066-8b42-605b7f6f1144",
            "type": {
                "namespace": "ol",
                "name": "shape"
            },
            "title": "Shape",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "d41be97c-15aa-4c3d-9720-55acb7d11ad6",
            "type": {
                "namespace": "ol",
                "name": "signaturedata"
            },
            "title": "Signature Data",
            "description": "A \"raw\" signature, represented as binary data. A signature can be \"electronic\" or \"digital\".",
            "schemas": [],
            "datatype": "Binary",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7aa37902-86fe-4b6a-8d2a-6c8690a027f0",
            "type": {
                "namespace": "ol",
                "name": "silentcall"
            },
            "title": "Silent call (Y/N)",
            "description": "Flag for whether a call received was simply silent.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "309318f4-6453-4fb2-b1eb-0d04eded9cb6",
            "type": {
                "namespace": "ol",
                "name": "sizecomparison"
            },
            "title": "Size comparison (text)",
            "description": "E.g., Could your child tell you which of two objects is larger if they were not present? For example \"which is bigger, a horse or a dog\"?",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "34755720-6444-456f-a626-a3609f692336",
            "type": {
                "namespace": "ol",
                "name": "snowmedcode"
            },
            "title": "SNOWMED code",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c625583f-585a-45a5-9d18-24eb5849cd6a",
            "type": {
                "namespace": "ol",
                "name": "sobersupport"
            },
            "title": "Sober support / sobriety maintenance support system ",
            "description": "Description of sobriety support system / plans to maintain sobriety",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "bb618179-cfd1-4e70-89f8-82599641722b",
            "type": {
                "namespace": "ol",
                "name": "sobersupportflag"
            },
            "title": "Sober Support Indicator (Y/N)",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d4e1a365-46c5-4c33-a3e1-6aa9e7b0c407",
            "type": {
                "namespace": "ol",
                "name": "socialdisinterest"
            },
            "title": "Social Disinterest",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "28aeef32-a2c1-4c3b-b683-f01616c48e20",
            "type": {
                "namespace": "ol",
                "name": "socialsupportflag"
            },
            "title": "Social Support Indicator (Y/N)",
            "description": "Indicates person reports social support",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "beb63b1e-f0c0-467b-9d2c-7a0d7e5eb138",
            "type": {
                "namespace": "ol",
                "name": "socialsupports"
            },
            "title": "Social Supports",
            "description": "Question on one's social supports from the NSPL Suicide Risk Assessment standards (Buffers / Connectedness component). ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "94a81a5b-450f-4e7d-8b43-09eeecad3e8e",
            "type": {
                "namespace": "ol",
                "name": "specificgravityflag"
            },
            "title": "Specific gravity - flag",
            "description": "Flag for abnormal results of specific gravity test or screening. Based on specific gravity value property and relevant reference scales, when available. ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "449da1bd-80a0-40a9-a7f6-03303bcd7a47",
            "type": {
                "namespace": "ol",
                "name": "specificgravityvalue"
            },
            "title": "Specific gravity - value",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4cd0f372-8bed-417d-8941-e815d22a18f3",
            "type": {
                "namespace": "ol",
                "name": "speechpattern"
            },
            "title": "Speech pattern or communication habits",
            "description": "Text description of / characteristics of an individual's speech or communication patterns",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "5bfededf-4570-448e-9175-3ded749b3eb3",
            "type": {
                "namespace": "ol",
                "name": "sqft"
            },
            "title": "Square feet",
            "description": "Square feet or footage of a housing unit or other building.",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e6024b83-75b4-43ae-9f05-22d05cd183ed",
            "type": {
                "namespace": "ol",
                "name": "ssn"
            },
            "title": "Social Security Number (SSN)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "81c9961e-7ac8-4a12-9b8b-c6403bd5ce49",
            "type": {
                "namespace": "ol",
                "name": "stabilizedindicator"
            },
            "title": "Stabilized (Y/N)",
            "description": "Stabilized on-scene",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e8f2b636-730c-44e1-b2ee-51e700397a16",
            "type": {
                "namespace": "ol",
                "name": "startdate"
            },
            "title": "Start date",
            "description": "",
            "schemas": [],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "729da80b-be28-496d-b6ce-bb118024408e",
            "type": {
                "namespace": "ol",
                "name": "statepenalchapter"
            },
            "title": "Chapter (state penal code)",
            "description": "The chapter (state penal code) of an offense.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "24091b3a-9093-4db3-a540-9d83f4f76e01",
            "type": {
                "namespace": "ol",
                "name": "statepenalsection"
            },
            "title": "Section (state penal code)",
            "description": "The section (state penal code) of an offense.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5538ee80-0a0d-489e-ad0c-1c815bd81805",
            "type": {
                "namespace": "ol",
                "name": "stateresident"
            },
            "title": "State Resident (Y/N)",
            "description": "State Resident Indicator",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "bc7869bd-f646-4e0c-89ad-ae77cdadb3ef",
            "type": {
                "namespace": "ol",
                "name": "statestatute"
            },
            "title": "State statute",
            "description": "The state statute number for a charge or offense.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2a45205e-703c-43eb-a060-921bf7245f6a",
            "type": {
                "namespace": "ol",
                "name": "status"
            },
            "title": "General Status",
            "description": "Status  (e.g., status of condition - active/present, inactive, resolved, in remission)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "369051b0-1f54-4651-8c8c-4017f3882d0b",
            "type": {
                "namespace": "ol",
                "name": "statusdetails"
            },
            "title": "Details of status",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3d2144ea-dec1-496a-b83d-86597ae934dd",
            "type": {
                "namespace": "ol",
                "name": "strength"
            },
            "title": "Strength",
            "description": "Strength (e.g., of medication)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a0fdf39a-5166-46de-b6db-8a6eddfead2d",
            "type": {
                "namespace": "ol",
                "name": "strengthofemotion"
            },
            "title": "Level or Strength of Feelings / Emotions / Expected Feelings",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "3f5e9383-96e0-4b64-bdd5-e9f10fbb416f",
            "type": {
                "namespace": "ol",
                "name": "stressors"
            },
            "title": "Stressors",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "0f10a3f1-a020-4367-a261-750d979abfca",
            "type": {
                "namespace": "ol",
                "name": "stringnumber"
            },
            "title": "Number (string data type)",
            "description": "General property for number that might contain letters (eg. DL number).",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "12ee5b7d-42a9-4a73-a41d-6e6f70fecb83",
            "type": {
                "namespace": "ol",
                "name": "subdivision"
            },
            "title": "Subdivision",
            "description": "A subdivision",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2b6417e4-486b-4411-bd4f-0073ad68668c",
            "type": {
                "namespace": "ol",
                "name": "subject"
            },
            "title": "Subject of Entity",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "761568e8-7a18-4e96-8265-860d950e51d0",
            "type": {
                "namespace": "ol",
                "name": "subsidy"
            },
            "title": "Subsidy ($)",
            "description": "Subsidy amount",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b836ff20-b9b2-4b1d-a1a0-63ae293d8067",
            "type": {
                "namespace": "ol",
                "name": "substancename"
            },
            "title": "Substance Name",
            "description": "The generic name of a substance/molecule (i.e., beer, wine, ibuprofen, alprazolam) at a more specific level than the type or class of a substance (i.e., alcohol, NSAID, benzodiazepine), but not a brand/marketed name (Bud Light, Advil, Xanax).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "75a9a36d-f242-444d-b863-ea06c7a27cc0",
            "type": {
                "namespace": "ol",
                "name": "substanceuse"
            },
            "title": "Substance Issue, Drug Use, or Substance Use Issues Flag",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d14c31a3-8313-486b-8db2-94bbf21fa362",
            "type": {
                "namespace": "ol",
                "name": "substanceuseindicator"
            },
            "title": "Substance Use Indicator (Y/N)",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c42fc7c4-2ec6-45d5-9061-f51ed79284c6",
            "type": {
                "namespace": "ol",
                "name": "substitutions"
            },
            "title": "Substitutions",
            "description": "Whether substitutions are permissible - for example, with prescription medications, generic substitution/brand medically necessary, etc.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "448c6ce4-d1db-4f21-9f5b-41f325fe4311",
            "type": {
                "namespace": "ol",
                "name": "subtype"
            },
            "title": "Subtype",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "4c363a5f-9224-4857-b6b6-3289c6591898",
            "type": {
                "namespace": "ol",
                "name": "subzone"
            },
            "title": "Subzone (location)",
            "description": "Subzone (location)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "a66544cf-9400-4436-a3db-29604bb8c1b4",
            "type": {
                "namespace": "ol",
                "name": "suffix"
            },
            "title": "Person name suffix",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "79003692-f147-4532-892d-25f18998f6a8",
            "type": {
                "namespace": "ol",
                "name": "suicidalattempt"
            },
            "title": "Suicidal Attempt (in progress, Y/N)",
            "description": "Flag for a suicidal attempt in progress.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4951128b-5d16-4ad4-8141-df2a52f8725b",
            "type": {
                "namespace": "ol",
                "name": "suicidalattemptmethod"
            },
            "title": "Suicidal attempt method (in progress)",
            "description": "The method and details, if known, of a suicidal attempt in progress.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "55d6b42d-ed96-4885-b955-999b9ffa61a6",
            "type": {
                "namespace": "ol",
                "name": "suicideattempthistory"
            },
            "title": "Suicide Attempt History",
            "description": "Question on one's history of suicide attempts, from the NSPL Suicide Risk Assessment standards (Suicidal Capability component). ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "deae0899-3e12-43e6-bae6-ae562e85b651",
            "type": {
                "namespace": "ol",
                "name": "summary"
            },
            "title": "Summary Statement (e.g., clinical summary)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "e5f917ca-743a-438a-a671-c909c00b4375",
            "type": {
                "namespace": "ol",
                "name": "superlatives"
            },
            "title": "Superlatives",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "0ec5a29a-23b4-4634-8e9a-047f345beea2",
            "type": {
                "namespace": "ol",
                "name": "supervisioninstituted"
            },
            "title": "Supervision or care instituted",
            "description": "Description of supervision or care instituted",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "d6ac78c5-220d-43a3-9c2e-97ac782cfc3e",
            "type": {
                "namespace": "ol",
                "name": "supervisornotified"
            },
            "title": "Supervisor / shift commander notified (Y/N)",
            "description": "Field to indicate when a shift commander or supervisor was notified of a condition. ",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c37a2b60-38e8-4489-8b57-4f91d9169da8",
            "type": {
                "namespace": "ol",
                "name": "surname"
            },
            "title": "Surname or family name(s).",
            "description": "The surname(s) or family name(s) of a person.",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "dc8d46a2-fe1b-4066-8060-b31697f8897a",
            "type": {
                "namespace": "ol",
                "name": "systolicbloodpressure"
            },
            "title": "Systolic blood pressure",
            "description": "The top number of a blood pressure reading, which is the maximum pressure your heart exerts while beating (systolic pressure)",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "aa33d137-e2f4-4edf-85e2-30e8b7c1c6f9",
            "type": {
                "namespace": "ol",
                "name": "taken"
            },
            "title": "Taken",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "d4e8e212-6400-4947-9997-8469ddec8bf5",
            "type": {
                "namespace": "ol",
                "name": "takenasprescribed"
            },
            "title": "Taken as Prescribed (Y/N)",
            "description": "",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a47a4c24-9955-4c27-8f69-f9212a1aefef",
            "type": {
                "namespace": "ol",
                "name": "target"
            },
            "title": "Target",
            "description": "A target",
            "schemas": [],
            "datatype": "Guid",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "90e033f3-c36e-4375-b51b-d4a1a5727fa9",
            "type": {
                "namespace": "ol",
                "name": "targetdate"
            },
            "title": "Target Date",
            "description": "",
            "schemas": [],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "366eacb7-b3a9-464b-896e-0729baf97eb6",
            "type": {
                "namespace": "ol",
                "name": "taxonomy"
            },
            "title": "Specialty / Taxonomy - descriptive text (e.g., health care provider taxonomy).",
            "description": "Specialty / Taxonomy - descriptive text. For example, healthcare provider specialty (urology, behavioral health).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "24cfe583-7823-4382-bf87-19a742b23034",
            "type": {
                "namespace": "ol",
                "name": "teasing"
            },
            "title": "Teasing / Bullying",
            "description": "Description of teasing or bullying a child is subjected to.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d1736890-922a-4408-acc0-beffaa47e272",
            "type": {
                "namespace": "ol",
                "name": "temperature"
            },
            "title": "Temperature",
            "description": "Body temperature",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "03b5cd4e-2519-4da6-98d6-9e5c692739f5",
            "type": {
                "namespace": "ol",
                "name": "temporalstatus"
            },
            "title": "Temporal status",
            "description": "past/present",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "dfce1de6-7968-450b-8523-4214509ccb31",
            "type": {
                "namespace": "ol",
                "name": "tenantpaid"
            },
            "title": "Tenant Paid ($)",
            "description": "Base rent that tenant is responsible for",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a15dda4f-4350-4a09-b763-7bb6bccfb053",
            "type": {
                "namespace": "ol",
                "name": "testname"
            },
            "title": "Name of test or screening",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "d94bc9ae-2017-4979-b297-09264cd1f0eb",
            "type": {
                "namespace": "ol",
                "name": "text"
            },
            "title": "Text (e.g., form content, information); reminder or statement text.",
            "description": "Text of form; reminder text; text of statement to be administered to individual (write-in).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "65062423-e2d0-44e5-a61a-7169a318b921",
            "type": {
                "namespace": "ol",
                "name": "thoughtsofselfharm"
            },
            "title": "Thoughts of self-harm",
            "description": "Have you experienced thoughts of harming yourself?   ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "437e5dac-d5e2-4a8f-beb5-7bb067ac015c",
            "type": {
                "namespace": "ol",
                "name": "threatened"
            },
            "title": "Threatened (Y/N)",
            "description": "Flag for when someone threatened violence.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ca7ffc02-2002-4ba4-b89f-8c7b0ba8e596",
            "type": {
                "namespace": "ol",
                "name": "timecomputedstatus"
            },
            "title": "Time computed status",
            "description": "Status of whether time was computed for parole eligibility, review, or any other type of status.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d5a1b393-df47-485c-ad34-d77fd83acb5e",
            "type": {
                "namespace": "ol",
                "name": "timeestimate"
            },
            "title": "Time Estimate (string)",
            "description": "Length of time or duration spent in a given situation",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "9e57eb53-a729-4cd0-bca4-a2bde8d56093",
            "type": {
                "namespace": "ol",
                "name": "timelimits"
            },
            "title": "Time limits enforced",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "26990519-ac4e-4dc9-9559-f9b500a728da",
            "type": {
                "namespace": "ol",
                "name": "timeservedhours"
            },
            "title": "Time Served: Hours",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b730b3b3-d442-45a1-8d81-c082b1dd3a45",
            "type": {
                "namespace": "ol",
                "name": "timeservedminutes"
            },
            "title": "Time Served: Minutes",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "717a0522-ef76-40c3-a123-22eb5c61d1db",
            "type": {
                "namespace": "ol",
                "name": "timeshomelesspast3yrs"
            },
            "title": "Times homeless in past 3 years (#) (-d)",
            "description": "Number of times homeless in the past 3 years (integer).",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c4a5c9e3-3fb6-4b77-a8ca-e906fc3ff86e",
            "type": {
                "namespace": "ol",
                "name": "timeshomelesspast3yrstext"
            },
            "title": "Times homeless in past 3 years (text) (-d)",
            "description": "Number of times homeless in the past 3 years (text).",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "071ba832-035f-4b04-99e4-d11dc4fbe0e8",
            "type": {
                "namespace": "ol",
                "name": "timezone"
            },
            "title": "Time Zone",
            "description": "Time Zone",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f0373614-c607-43b2-99b0-1cd32ff4f921",
            "type": {
                "namespace": "ol",
                "name": "title"
            },
            "title": "Title (ol)",
            "description": "The title of a person or employee",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "d5809a95-13b2-433d-a0fb-2852455484f9",
            "type": {
                "namespace": "ol",
                "name": "token"
            },
            "title": "Token",
            "description": "A token phrase or pin to remember",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e1e36ca8-84d0-4c52-9e8b-0de16a2e7943",
            "type": {
                "namespace": "ol",
                "name": "totalinfractioncount"
            },
            "title": "Total infractions (#)",
            "description": "Total count of infractions, as in an inmate's record.",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0a4d8004-bbc9-4acd-af2e-6fd116b7e972",
            "type": {
                "namespace": "ol",
                "name": "totalrent"
            },
            "title": "Total rent ($)",
            "description": "Total rent/mortgage for housing or other items",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d3450290-b346-4ce7-9bad-031c443d69de",
            "type": {
                "namespace": "ol",
                "name": "totalsentencecount"
            },
            "title": "Total sentences (#)",
            "description": "",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cdf34be9-388b-4fd4-b329-7c33818205b3",
            "type": {
                "namespace": "ol",
                "name": "totaltenantpaid"
            },
            "title": "Total tenant paid ($)",
            "description": "Total amount that a tenant pays, including base rent, utilities and non-optional charges.",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3e2226e6-b45e-40e3-9952-d52f78a4ca30",
            "type": {
                "namespace": "ol",
                "name": "tract"
            },
            "title": "Tract",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9469a7eb-6973-4525-9a57-0e6f402cd095",
            "type": {
                "namespace": "ol",
                "name": "transportindicator"
            },
            "title": "Transport Used (Y/N)",
            "description": "Indicates whether a person was transported somewhere not (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c732d9e3-3bc2-4f1d-bd08-1073d85f26be",
            "type": {
                "namespace": "ol",
                "name": "traumanightmaresanxiety"
            },
            "title": "Post-traumatic anxiety and/or repeat nightmares after traumatic event?  (Y/N) (AC-OK)  ",
            "description": "Have you experienced a traumatic event and since had repeated nightmares/dreams and/or anxiety which interferes with you leading a normal life? (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1360748e-881a-4585-af20-b373f6fcaf1c",
            "type": {
                "namespace": "ol",
                "name": "treatmenthistory"
            },
            "title": "Treatment History",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "a791ca8d-b433-4a2b-be04-43d43cea14a7",
            "type": {
                "namespace": "ol",
                "name": "type"
            },
            "title": "Type",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e404a3f0-3e98-412f-b146-52aa80ec98c2",
            "type": {
                "namespace": "ol",
                "name": "typeclass"
            },
            "title": "Class of type.",
            "description": "Class of type.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e2c325dd-9574-4e2a-a7f4-1ec061100a24",
            "type": {
                "namespace": "ol",
                "name": "typical"
            },
            "title": "Typical (Y/N)",
            "description": "Typical (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9050b307-c406-4dcf-b5c7-9503ea56b0d5",
            "type": {
                "namespace": "ol",
                "name": "typicalgangspeech"
            },
            "title": "Gang speech (Y/N)",
            "description": "Flag for whether one uses speech and specific language typical of certain gangs and gang sets.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "54930826-d023-4ea1-9d4b-da7abbb000eb",
            "type": {
                "namespace": "ol",
                "name": "typicalgangspeechnotes"
            },
            "title": "Gang speech (description)",
            "description": "Description of how one uses speech and specific language typical of certain gangs and gang sets.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "98795356-940f-42c2-9929-383931cac3bf",
            "type": {
                "namespace": "ol",
                "name": "ucr"
            },
            "title": "UCR Code",
            "description": "UCR crime reporting code",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "82798057-1496-4fd2-96cb-5156217fd8f7",
            "type": {
                "namespace": "ol",
                "name": "ucrcount"
            },
            "title": "UCR count",
            "description": "Count of UCR codes associated with record",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e1fc2e45-eb5f-42db-b906-c6eaf2a4fb53",
            "type": {
                "namespace": "ol",
                "name": "ucrpart"
            },
            "title": "UCR Part I/II offenses",
            "description": "UCR crime reporting Part I/II offense categories.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3391e728-bfc1-43e2-bd9b-1106ec9d64c7",
            "type": {
                "namespace": "ol",
                "name": "unabletocontact"
            },
            "title": "Unable to contact ",
            "description": "Flag for when a person/organization is unable to be contacted.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "77f4bb35-30a9-4001-bfaa-cb081be40892",
            "type": {
                "namespace": "ol",
                "name": "unabletoquit"
            },
            "title": "Have you tried to stop drinking/using, but couldn\u2019t? (AC-OK)",
            "description": "Have you tried to stop drinking/using, but couldn\u2019t? (AC-OK)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cee91e4c-43ff-47ce-abac-3136d2bfe5b7",
            "type": {
                "namespace": "ol",
                "name": "unappreciated"
            },
            "title": "Unappreciated",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "5f9b4152-3c4b-4201-a5db-e6c24504307a",
            "type": {
                "namespace": "ol",
                "name": "undertheinfluence"
            },
            "title": "Under the Influence",
            "description": "Options: Yes, no, unknown, question not asked/answered, etc.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "5f385f27-3c76-413b-980d-9bd0abe89c4a",
            "type": {
                "namespace": "ol",
                "name": "unitnumber"
            },
            "title": "Unit number",
            "description": "Unit number",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "621051c6-09fd-4982-8f96-07833f75aaa8",
            "type": {
                "namespace": "ol",
                "name": "units"
            },
            "title": "Unit of measurement",
            "description": "A unit of measurement is a definite magnitude of a quantity, defined and adopted by convention or by law, that is used as a standard for measurement of the same kind of quantity. Any other quantity of that kind can be expressed as a multiple of the unit of measurement. For example, a length is a physical quantity.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "ed075421-abbf-4dcc-bf67-2277790108b8",
            "type": {
                "namespace": "ol",
                "name": "unmetneeds"
            },
            "title": "Unmet Needs",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "5c5c69bc-1fee-4303-8fe7-086cd9a070ab",
            "type": {
                "namespace": "ol",
                "name": "update"
            },
            "title": "Update Category/Type",
            "description": "An update type or category, or any comments about an update.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f6d887dc-e843-46bb-b668-2bbc1158fa5d",
            "type": {
                "namespace": "ol",
                "name": "urobilinogenflag"
            },
            "title": "Urobilinogen - flag",
            "description": "Flag for abnormal results of test or screening for urobilinogen (e.g., in urine). Based on urobilinogen value property and relevant reference scales, when available. ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b54a27e5-f840-4ad0-a335-9311df4c8978",
            "type": {
                "namespace": "ol",
                "name": "useofforce"
            },
            "title": "Use of Force (Y/N)",
            "description": "Indicates use of force (Y/N) in an interaction with law enforcement",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "86bf4aec-9e9b-41ad-b6f9-43e042c8c46c",
            "type": {
                "namespace": "ol",
                "name": "useofforcenotes"
            },
            "title": "Use of Force - Description / Notes ",
            "description": "Text field describing use of force in an interaction with law enforcement",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "c0e38331-3d1b-4adf-8c84-5e2cf940bb3b",
            "type": {
                "namespace": "ol",
                "name": "userid"
            },
            "title": "User Identification",
            "description": "User Identification",
            "schemas": [],
            "datatype": "Guid",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "edab4120-3c45-4856-87b9-a3233bf7dfbc",
            "type": {
                "namespace": "ol",
                "name": "usesparentalmediawebsite"
            },
            "title": "Uses Parental Media Website",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "a1707b5f-b76b-47f9-bcad-85b3dbe233d9",
            "type": {
                "namespace": "ol",
                "name": "usesratingsystem"
            },
            "title": "Uses Rating System",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "7468e117-4d40-47b9-8760-4d54f5f03f34",
            "type": {
                "namespace": "ol",
                "name": "usetoaltermood"
            },
            "title": "Substance, drug or alcohol use to alter mood / feelings (AC-OK) ",
            "description": "Do you, at times, drink alcohol and/or used other drugs to alter the way you feel? ",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4cdf2da9-088f-4b14-a391-00c06033817f",
            "type": {
                "namespace": "ol",
                "name": "utilitiescost"
            },
            "title": "Utilities ($)",
            "description": "Cost of amount of utilities",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f9ac41fb-897e-4d0f-ac71-dac7eddc56fa",
            "type": {
                "namespace": "ol",
                "name": "value"
            },
            "title": "Value - numeric",
            "description": "Numeric value ",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0f95049c-b668-49b1-bf32-f26835471b0a",
            "type": {
                "namespace": "ol",
                "name": "vehicleimage"
            },
            "title": "Vehicle Image",
            "description": "Vehicle Image",
            "schemas": [],
            "datatype": "Binary",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "93a23f2b-8528-4173-89d9-cb049bb036ee",
            "type": {
                "namespace": "ol",
                "name": "verificationsource"
            },
            "title": "Information source / Verification source",
            "description": "Source of information or verification",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "0011bbfe-d5d4-4f88-97a8-cdeb821deb6f",
            "type": {
                "namespace": "ol",
                "name": "version"
            },
            "title": "Version",
            "description": "Example: OS Version",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "751e502f-d42a-46c6-8a6a-30979f5c5709",
            "type": {
                "namespace": "ol",
                "name": "victimhoodhistory"
            },
            "title": "Victimhood history",
            "description": "Description of a person's victimhood history.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c5e1a98e-bc92-4858-8d0f-2bcb9d59ec70",
            "type": {
                "namespace": "ol",
                "name": "violent"
            },
            "title": "Violent (Y/N)",
            "description": "Indicates whether or not something is violent.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e83b128d-ca76-4eb7-b565-0d1637b31329",
            "type": {
                "namespace": "ol",
                "name": "vocabularyword"
            },
            "title": "Vocabulary word",
            "description": "Vocabulary word (asked)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "2ed1e391-89a7-41dd-b2bd-15079b9916dd",
            "type": {
                "namespace": "ol",
                "name": "voluntaryactionindicator"
            },
            "title": "Voluntary Action Indicator",
            "description": "Was action voluntary (yes) or involuntary (no)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2846a99b-daff-4f70-852a-091304ac49e9",
            "type": {
                "namespace": "ol",
                "name": "warrantflag"
            },
            "title": "Warrant (Y/N) (-d)",
            "description": "Flag for whether a warrant exists or has been issued.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "fc486634-adbf-4108-aa0b-65225cad5618",
            "type": {
                "namespace": "ol",
                "name": "warrantnumber"
            },
            "title": "Warrant #",
            "description": "Arrest warrant number.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c65408d0-c966-413b-b868-d13f29402faf",
            "type": {
                "namespace": "ol",
                "name": "weapontypeother"
            },
            "title": "Weapon type (other)",
            "description": "Other weapon type.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e5b396a9-d1de-43a0-bc71-40a4d4ef8f07",
            "type": {
                "namespace": "ol",
                "name": "weekday"
            },
            "title": "Weekday",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "fb149318-348d-4705-b22b-29488f035c33",
            "type": {
                "namespace": "ol",
                "name": "weekend"
            },
            "title": "Weekend Day",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "7fa9418f-03dc-4fb2-acc0-826b927d902d",
            "type": {
                "namespace": "ol",
                "name": "weekinterval"
            },
            "title": "One Week Interval",
            "description": "A boolean value indicating a 1-week interval",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "065a9db9-6fcd-400e-ac26-a969521c386a",
            "type": {
                "namespace": "ol",
                "name": "weight"
            },
            "title": "Weight of a person.",
            "description": "Weight of a person.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "03b40fe3-7479-46a3-8788-840272c9d136",
            "type": {
                "namespace": "ol",
                "name": "whatwhere"
            },
            "title": "What / where questions",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "bc47afad-fb93-4597-8e78-c1528398be86",
            "type": {
                "namespace": "ol",
                "name": "whyhow"
            },
            "title": "Why / how questions",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b3a50aa9-ad1e-45ac-8982-cb59d95ce829",
            "type": {
                "namespace": "ol",
                "name": "workrequirement"
            },
            "title": "Work-Related Requirement(s)",
            "description": "\" I need to stay connected to work almost constantly.\"",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "c0eabed9-c959-4b32-afbd-483f4c81e6a6",
            "type": {
                "namespace": "ol",
                "name": "wouldreturn"
            },
            "title": "Would return (Y/N)",
            "description": "Flag for whether a counselor or other healthcare worker says they would return to a place where an encounter such as a house call happened (e.g. home, agency, business). ",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "469575e1-8440-4d2e-9ce7-22711ffe54d4",
            "type": {
                "namespace": "ol",
                "name": "wrongnumber"
            },
            "title": "Wrong number (Y/N)",
            "description": "Flag for whether a received call was due to a wrong number.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4c9e0939-f23e-4ddd-8471-880859145b6a",
            "type": {
                "namespace": "ol",
                "name": "x"
            },
            "title": "X (coordinate)",
            "description": "An x-coordinate.",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5df57345-d02d-4fa3-867a-25d8dd79f2e9",
            "type": {
                "namespace": "ol",
                "name": "y"
            },
            "title": "Y (coordinate)",
            "description": "A y-coordinate.",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6cf81706-5bfa-4870-b878-df3484af3ec0",
            "type": {
                "namespace": "ol",
                "name": "yearsofeducation"
            },
            "title": "Years of Education (#)",
            "description": "Number years of education completed",
            "schemas": [],
            "datatype": "Int16",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f9a48c32-6da6-4333-b6cc-aace2e8c5923",
            "type": {
                "namespace": "ol",
                "name": "yesnoresponse"
            },
            "title": "Yes / No Response ",
            "description": "Yes / No Boolean Response ",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "acd8f65f-c7e5-4227-bfda-10507abaf44f",
            "type": {
                "namespace": "person",
                "name": "ArrestingOfficer"
            },
            "title": "Arresting Officer",
            "description": "Arresting Officer",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "312ade60-5cc2-4c2c-b185-4e86b7d19153",
            "type": {
                "namespace": "person",
                "name": "ReleaseUserName"
            },
            "title": "Release UserName",
            "description": "Release UserName",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "fd934c65-f02a-4514-bf6a-937567a66af2",
            "type": {
                "namespace": "person",
                "name": "SearchOfficer"
            },
            "title": "Search Officer",
            "description": "Search Officer",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "09539d58-dc53-44ca-9c63-9604a02681bd",
            "type": {
                "namespace": "person",
                "name": "TransportingOfficer"
            },
            "title": "Transporting Officer",
            "description": "Transporting Officer",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f7af5fb1-92de-495d-ac01-d3ab82081eb8",
            "type": {
                "namespace": "person",
                "name": "age"
            },
            "title": "Age",
            "description": "The age of a person",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "57d24585-7aec-43b7-b0f9-4162321366de",
            "type": {
                "namespace": "person",
                "name": "ageatevent"
            },
            "title": "Age at Event",
            "description": "The age of a person at booking",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d8d5cd4c-0262-4dbe-b446-97dc913a4b3b",
            "type": {
                "namespace": "person",
                "name": "gender"
            },
            "title": "Gender",
            "description": "Gender - this is not a binary variable. As opposed to biological sex (e.g., sex at birth, M/F), 'gender' is typically used with reference to social and cultural differences rather than biological ones. This field may contain values such as male, female, nonbinary (NB), transexual, etc.    AKA gender presentation, gender orientation.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "62d542e1-a451-4d0e-b8f8-1483ef3970c2",
            "type": {
                "namespace": "person",
                "name": "highesteducation"
            },
            "title": "Highest level of education",
            "description": "Highest level of education / highest degree level achieved.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "915df70e-ebe3-4b59-9d4e-59c0609a5577",
            "type": {
                "namespace": "person",
                "name": "juvenile"
            },
            "title": "Juvenile (Y/N)",
            "description": "Flag for whether someone is a juvenile.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "49adf7e7-1962-44c0-a683-4091366e03fd",
            "type": {
                "namespace": "person",
                "name": "maritalstatus"
            },
            "title": "Marital Status",
            "description": "A person's marital status.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6a225115-c675-4017-8658-f61de1ef6576",
            "type": {
                "namespace": "person",
                "name": "militaryhistory"
            },
            "title": "Military History (Y/N)",
            "description": "MilitaryHistory",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0111a451-0f30-4e53-8902-79b55f53ef1a",
            "type": {
                "namespace": "person",
                "name": "picture"
            },
            "title": "Person Picture (deprecated)",
            "description": "A photo/picture represented as a Base64-encoded string.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "02bee94a-5bc8-4c07-a902-b8698ce625b7",
            "type": {
                "namespace": "person",
                "name": "pregnancy"
            },
            "title": "Pregnancy (text)",
            "description": "",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "db4bc6de-48c3-40eb-a946-7ed051f52752",
            "type": {
                "namespace": "person",
                "name": "releaseofficer"
            },
            "title": "Release Officer",
            "description": "Release Officer",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8d52f9b7-fe9d-4d09-aec4-bbbfee74f714",
            "type": {
                "namespace": "person",
                "name": "sexualorientation"
            },
            "title": "Sexual Orientation",
            "description": "Sexual orientation.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "96dc5643-d138-4b2e-b5f7-dcf23d12959d",
            "type": {
                "namespace": "person",
                "name": "stateidnumber"
            },
            "title": "State Identification Number",
            "description": "State-specific identification number.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5ea6e8d5-93bb-47cf-b054-9faaeb05fb27",
            "type": {
                "namespace": "person",
                "name": "stateidstate"
            },
            "title": "State of identification",
            "description": "State of identification",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e729bfaf-929e-498e-b953-d24656a168f6",
            "type": {
                "namespace": "person",
                "name": "title"
            },
            "title": "Title",
            "description": "Title",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "fafbf5d2-d681-4468-b7e3-3472c661b042",
            "type": {
                "namespace": "person",
                "name": "veteranstatus"
            },
            "title": "Military / Veteran Status ",
            "description": "A person's military or veteran status - status of military service of a person.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "913cf5e1-f652-4484-a455-b4e4b9dc012e",
            "type": {
                "namespace": "personnel",
                "name": "agency"
            },
            "title": "Agency Name",
            "description": "Agency at which person is employed / with which person is associated",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "115a4e59-ce2b-4b7f-8d64-2a3b21ca11e5",
            "type": {
                "namespace": "personnel",
                "name": "employerid"
            },
            "title": "Employer identification number (EIN)",
            "description": "Unique numerical identifier for employer/ place of employment",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d6b6b2b3-794f-4d6d-9ce1-a03ca9712046",
            "type": {
                "namespace": "personnel",
                "name": "employername"
            },
            "title": "Name of employer",
            "description": "Name of employer",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "e60acf67-42d2-40fd-8493-3835e16ae038",
            "type": {
                "namespace": "place",
                "name": "CommittingAuthority"
            },
            "title": "Committed to Authority_deprecated",
            "description": "An authority to which a person is remanded into custody as part of a judgment.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d05e183e-8bad-4ff8-b5ee-9b552fc2fc03",
            "type": {
                "namespace": "place",
                "name": "EmployedByAgency"
            },
            "title": "Employed By Agency",
            "description": "Employed By Agency",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "721fad3a-bb43-4d44-bbc7-d95aa3333e82",
            "type": {
                "namespace": "place",
                "name": "HoldingFacility"
            },
            "title": "Holding Facility",
            "description": "Authority subject is held at.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9cc5f76d-b17a-4f14-95d2-b6aed679f869",
            "type": {
                "namespace": "place",
                "name": "Location"
            },
            "title": "Location (-d)",
            "description": "location",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "08cec745-e6ea-4ef8-a296-ae3a7ece837e",
            "type": {
                "namespace": "place",
                "name": "NameOfPlace"
            },
            "title": "Name Of Place",
            "description": "The name of the place",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3e1ba12f-13cf-475c-bdeb-033381785ce5",
            "type": {
                "namespace": "place",
                "name": "OriginatingAgencyIdentifier"
            },
            "title": "Originating Agency Identifier (ORI)",
            "description": "Originating Agency Identifier (ORI)",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2cc4a88c-86f0-404c-b328-caf3ec7b9c66",
            "type": {
                "namespace": "place",
                "name": "SequenceID"
            },
            "title": "Place SquenceID",
            "description": "Unique identifier for a place",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c374f9fb-2fc1-44c4-b24a-cb1f2d3c643a",
            "type": {
                "namespace": "place",
                "name": "StreetAddress"
            },
            "title": "Street Address",
            "description": "A street address",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2358f345-8fd3-4d2f-a172-1cea8505e0a9",
            "type": {
                "namespace": "place",
                "name": "TransportingAgency"
            },
            "title": "Transporting Agency",
            "description": "Transporting Agency",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f5628aca-71b2-40fe-ad66-374cb1f4d506",
            "type": {
                "namespace": "place",
                "name": "uniqueID"
            },
            "title": "Place ID",
            "description": "A string that uniquely identifies an place",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4be10970-e737-43b2-a166-5c06fc3cf142",
            "type": {
                "namespace": "provider",
                "name": "LicenseNumber"
            },
            "title": "Provider's License Number",
            "description": "Provider's License Number",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "20b7d73c-f569-4663-89fd-6b46699425e4",
            "type": {
                "namespace": "provider",
                "name": "NationalProviderIdentification"
            },
            "title": "NationalProviderIdentification",
            "description": "NationalProviderIdentification",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f76aa3b0-79d6-41cf-bfca-ff4509c4af29",
            "type": {
                "namespace": "psa",
                "name": "AgeAtCurrentArrest"
            },
            "title": "Age at Current Arrest",
            "description": "The age at current arrest risk factor",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7cdfb829-b3ef-4000-9371-b32cd6af3e90",
            "type": {
                "namespace": "psa",
                "name": "AgeAtCurrentArrestNotes"
            },
            "title": "Age at Current Arrest - Notes",
            "description": "Any additional notes on the age at current arrest",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "61129561-f69c-4f32-893c-0fb13fe751c1",
            "type": {
                "namespace": "psa",
                "name": "CurrentViolentOffense"
            },
            "title": "Current Violent Offense",
            "description": "Indicates whether the current violent offense risk factor is met.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8be364b8-a5ac-49c3-b5dc-4bb7f0a1fa34",
            "type": {
                "namespace": "psa",
                "name": "CurrentViolentOffenseAnd20OrYounger"
            },
            "title": "Current Violent Offense & 20 Years Old or Younger",
            "description": "Indicates whether both the current violent offense risk factor is met and the defendant is 20 years old or younger.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e6ccd88c-559d-414c-88dd-2c4d5e04003b",
            "type": {
                "namespace": "psa",
                "name": "CurrentViolentOffenseNotes"
            },
            "title": "Current Violent Offense - Notes",
            "description": "Any additional notes on a current violent offense",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6fbe7a73-c7c1-43d7-af64-28f2c1d53725",
            "type": {
                "namespace": "psa",
                "name": "GeneratedDate"
            },
            "title": "PSA Generated Date",
            "description": "The date when a PSA was generated",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8c0bcd74-18d8-430a-b346-7dfb5678b650",
            "type": {
                "namespace": "psa",
                "name": "PendingCharge"
            },
            "title": "Pending Charge at the Time of the Offense",
            "description": "Indicates whether the pending charge risk factor is met.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d722e1d9-9497-4d0c-9c61-0bb0b5881e3b",
            "type": {
                "namespace": "psa",
                "name": "PendingChargeNotes"
            },
            "title": "Pending Charge - Notes",
            "description": "Any additional notes on a pending charge at the time of an arrest",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "54fbebb4-34a7-4a4a-97ed-88f74b837937",
            "type": {
                "namespace": "psa",
                "name": "PriorConviction"
            },
            "title": "Prior Conviction",
            "description": "Indicates whether the prior conviction risk factor is met.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "82ed0dda-c526-4dae-ad24-ac7178b78433",
            "type": {
                "namespace": "psa",
                "name": "PriorFailureToAppearOlderThanTwoYears"
            },
            "title": "Prior Pre-Trial Failure to Appear Older than 2 Years",
            "description": "Indicates whether the prior pre-trial failure to appear over two years ago risk factor is met.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "faa8a459-84e2-4ba2-af69-465660913d01",
            "type": {
                "namespace": "psa",
                "name": "PriorFailureToAppearOlderThanTwoYearsNotes"
            },
            "title": "Prior Pre-Trial Failure to Appear Older than 2 Years - Notes",
            "description": "Any additional notes an a failure to appear over two years ago",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5d481160-d94b-4687-8f39-c0a37d728246",
            "type": {
                "namespace": "psa",
                "name": "PriorFailureToAppearWithinTwoYears"
            },
            "title": "Prior Pre-Trial Failure to Appear in Past 2 Years",
            "description": "The number of prior pre-trial failures to appear in the past two years risk factor",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7cb99539-075d-41d0-9d40-32cd3eb36745",
            "type": {
                "namespace": "psa",
                "name": "PriorFailureToAppearWithinTwoYearsNotes"
            },
            "title": "Prior Failure To Appear Within Two Years - Notes",
            "description": "Any additional notes on prior failures to appear within the past two years",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ca0d3289-43df-445d-8cf1-d7f7b6740a3b",
            "type": {
                "namespace": "psa",
                "name": "PriorFelonyConviction"
            },
            "title": "Prior Felony Conviction",
            "description": "Indicates whether the prior felony conviction risk factor is met.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a806bc75-00e4-4a66-8b21-534e4d3015b8",
            "type": {
                "namespace": "psa",
                "name": "PriorFelonyConvictionNotes"
            },
            "title": "Prior Felony Conviction - Notes",
            "description": "Any additional notes on a prior felony conviction",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3b6027be-0cb7-442e-bed4-7ace9ec01fb1",
            "type": {
                "namespace": "psa",
                "name": "PriorMisdemeanorConviction"
            },
            "title": "Prior Misdemeanor Conviction",
            "description": "Indicates whether the prior misdemeanor conviction risk factor is met.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "638413c5-d5d0-4af1-b738-8e35c81dcb28",
            "type": {
                "namespace": "psa",
                "name": "PriorMisdemeanorConvictionNotes"
            },
            "title": "Prior Misdemeanor Conviction - Notes",
            "description": "Any additional notes on prior misdemeanor convictions",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ab287218-7888-4b6b-9a92-5f83c9fc4b83",
            "type": {
                "namespace": "psa",
                "name": "PriorSentenceToIncarceration"
            },
            "title": "Prior Sentence to Incarceration",
            "description": "Indicates whether the prior sentence to incarceration risk factor is met.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b2cd48b5-84d4-4364-96d9-b147e60a7a17",
            "type": {
                "namespace": "psa",
                "name": "PriorSentenceToIncarcerationNotes"
            },
            "title": "Prior Sentence To Incarceration - Notes",
            "description": "Any additional notes on a prior sentence to incarceration",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "412b3e91-545b-4024-b8a2-bc7b83d186bf",
            "type": {
                "namespace": "psa",
                "name": "PriorViolentConviction"
            },
            "title": "Prior Violent Conviction",
            "description": "The number of prior violent convictions risk factor",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "93aef850-f00b-41a4-94e2-38ba702c408e",
            "type": {
                "namespace": "psa",
                "name": "PriorViolentConvictionNotes"
            },
            "title": "Prior Violent Conviction - Notes",
            "description": "Any additional notes on prior violent convictions",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3e99c4c2-e62a-4a4d-a5df-e0ca3fed4f8a",
            "type": {
                "namespace": "psa",
                "name": "ftaScale"
            },
            "title": "Failure to Appear Scale",
            "description": "The calculated scale value indicating the likelihood of a failure to appear given the risk factors.",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "88c0edf6-9be6-4d7d-a43a-1667dea09cb8",
            "type": {
                "namespace": "psa",
                "name": "ncaScale"
            },
            "title": "New Criminal Activity Scale",
            "description": "The calculated scale value indicating the likelihood of new criminal activity given the risk factors.",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5c939b22-0ed8-46ba-9ec9-2a279a9cd2cf",
            "type": {
                "namespace": "psa",
                "name": "nvcaFlag"
            },
            "title": "New Violent Criminal Activity Flag",
            "description": "Indicates whether risk factors determine a likelihood for new violent criminal activity.",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "34b530a3-c43f-4439-b410-d09e77ea8e0d",
            "type": {
                "namespace": "publicsafety",
                "name": "ActualNumber"
            },
            "title": "Actual Number",
            "description": "Actual number",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f9404d36-7cbb-462c-88d8-033b494afe10",
            "type": {
                "namespace": "publicsafety",
                "name": "AlternateStartDate"
            },
            "title": "Alternate Start Date",
            "description": "Alternate offense charge start date.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9a54d4e0-11a0-4edd-b5b1-25236de4f7e1",
            "type": {
                "namespace": "publicsafety",
                "name": "ArrestDate"
            },
            "title": "Arrest Date",
            "description": "A date of an arrest.",
            "schemas": [],
            "datatype": "Date",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "474f6088-49b2-478a-93ef-2d9541858701",
            "type": {
                "namespace": "publicsafety",
                "name": "ArrestID"
            },
            "title": "Arrest ID",
            "description": "Arrest ID",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "031554d1-13fc-48dc-ae36-cff7bfe33f40",
            "type": {
                "namespace": "publicsafety",
                "name": "Balance"
            },
            "title": "Balance",
            "description": "Balance",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e45e5d5e-6714-4b9c-b9c4-c8aaf9a2d94b",
            "type": {
                "namespace": "publicsafety",
                "name": "BondMet"
            },
            "title": "Bond Met",
            "description": "Bond met",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "63814ef1-a61d-4a65-981b-9e9c1c1de138",
            "type": {
                "namespace": "publicsafety",
                "name": "CaseDispositionDate"
            },
            "title": "Case Disposition Date",
            "description": "Date of disposition on current case",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1ad43659-6efb-477c-b2b8-db588af59bc9",
            "type": {
                "namespace": "publicsafety",
                "name": "ChangeAmount"
            },
            "title": "Change Amount",
            "description": "Amount in change siezed at time of booking.",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "edbd3e8f-dd82-43ba-859d-62e4d84d1183",
            "type": {
                "namespace": "publicsafety",
                "name": "ChargeAgency"
            },
            "title": "Charging Agency",
            "description": "Charging agency",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6ed9947f-3d0a-4bfa-bd47-4a0e86a231f6",
            "type": {
                "namespace": "publicsafety",
                "name": "ChecksAmount"
            },
            "title": "Checks Amount",
            "description": "Amount in checks siezed at time of booking.",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "769f8a1c-39ed-4364-aba9-876535f89730",
            "type": {
                "namespace": "publicsafety",
                "name": "Concurrent"
            },
            "title": "Concurrent Sentence",
            "description": "Concurrent sentence",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4f30f9c1-dc1d-46b4-890e-5e5690ed3955",
            "type": {
                "namespace": "publicsafety",
                "name": "ConsecWith"
            },
            "title": "Consecutive Sentence",
            "description": "Consecutive sentence",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "15a3e630-f11b-4b54-9e0f-e2866ddf27a7",
            "type": {
                "namespace": "publicsafety",
                "name": "CurrencyAmount"
            },
            "title": "Currency Amount",
            "description": "Amount in currency siezed at time of booking.",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "752f6e0b-1c37-4920-80bd-28ba0c9939e4",
            "type": {
                "namespace": "publicsafety",
                "name": "CustodyID"
            },
            "title": "Custody ID",
            "description": "Custody ID",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9af790d1-d49d-425f-82e5-2a933a171bc1",
            "type": {
                "namespace": "publicsafety",
                "name": "DispositionType"
            },
            "title": "Disposition Type",
            "description": "The final charge disposition on current case",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2e12197d-d36f-49bd-890f-50acc04b6bdd",
            "type": {
                "namespace": "publicsafety",
                "name": "FileDate"
            },
            "title": "File Date",
            "description": "The date a record was filed.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1bde9fa3-7bdf-437e-81f3-ce50944bfb1e",
            "type": {
                "namespace": "publicsafety",
                "name": "GoodTimeDays"
            },
            "title": "Good Time: Days",
            "description": "Good time: days",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "77f1e62e-a648-4be1-84c8-c3712eef3ff3",
            "type": {
                "namespace": "publicsafety",
                "name": "GoodTimeHours"
            },
            "title": "Good Time: Hours",
            "description": "Good time: hours",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2b509f15-cb22-4515-8638-088641a0ca86",
            "type": {
                "namespace": "publicsafety",
                "name": "GoodTimeMinutes"
            },
            "title": "Good Time: Minutes",
            "description": "Good time: minutes",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "73cc64b4-6b03-40aa-85fe-9492847587d2",
            "type": {
                "namespace": "publicsafety",
                "name": "GoodTimePCT"
            },
            "title": "Good Time PCT",
            "description": "Good time PCT",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e6d740ac-daa7-40e6-b864-c83d5054fa21",
            "type": {
                "namespace": "publicsafety",
                "name": "JuvHoldAuth"
            },
            "title": "Juv Hold Auth",
            "description": "Juv Hold Auth",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "674aaa3e-dc89-4c58-abb1-d1f9fc15fa58",
            "type": {
                "namespace": "publicsafety",
                "name": "MostSeriousChargeDegree"
            },
            "title": "Most Serious Charge Degree",
            "description": "Degree of charge or severity corresponding with Most Serious Charge Statute #",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4cd3b524-8c33-4efe-8bbc-09738a06facf",
            "type": {
                "namespace": "publicsafety",
                "name": "MostSeriousChargeStatuteNumber"
            },
            "title": "Most Serious Charge Statue Number",
            "description": "Charge statute number for the most serious charge on the current case",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5189cd68-f067-409f-a1b1-6fb5e15450b1",
            "type": {
                "namespace": "publicsafety",
                "name": "MostSeriousStatuteDescription"
            },
            "title": "Most Serious Statue Description",
            "description": "Description of charge statute corresponding with Most Serious Charge Statute #",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "48c44a9a-6960-4a3e-aabe-714fbc3ba03c",
            "type": {
                "namespace": "publicsafety",
                "name": "NoCounts"
            },
            "title": "No. of Counts",
            "description": "No counts",
            "schemas": [],
            "datatype": "Int64",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "28bf3e65-3497-4fe3-a080-b758caf65053",
            "type": {
                "namespace": "publicsafety",
                "name": "NumberOfCharges"
            },
            "title": "Number of Charges",
            "description": "Number of charges for the current case",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cc919ad1-ec69-4c0c-a75f-75ad21c73133",
            "type": {
                "namespace": "publicsafety",
                "name": "ORI"
            },
            "title": "ORI",
            "description": "ORI",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "98b437c3-1e1f-4f51-91b0-837c084f61d8",
            "type": {
                "namespace": "publicsafety",
                "name": "OffenseDate"
            },
            "title": "Offense Date",
            "description": "A date of an incident, an act or a course of action which may constitute a violation of a criminal statute, ordinance or rule.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6388ea39-fde1-46d8-bdd6-49aebe16f5f7",
            "type": {
                "namespace": "publicsafety",
                "name": "OffenseEndDate"
            },
            "title": "Offense Charge End Date",
            "description": "Offense charge end date.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "44f80fec-7d58-4b7a-a6bc-f35f3d652a32",
            "type": {
                "namespace": "publicsafety",
                "name": "OffenseReleaseDate"
            },
            "title": "Offense Charge Release Date",
            "description": "Offense charge release date",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "680d4599-5fa7-4b52-ba23-b50cc6ff426b",
            "type": {
                "namespace": "publicsafety",
                "name": "OffenseStartDate"
            },
            "title": "Offense Charge Start Date",
            "description": "Offense charge start date.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "af0adecd-9608-470b-935f-44799542fb7c",
            "type": {
                "namespace": "publicsafety",
                "name": "OffenseViolatedLocalStatute"
            },
            "title": "Local Statute",
            "description": "Local statute violated.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d3affb63-83fe-403d-b3f7-ee91de6df63e",
            "type": {
                "namespace": "publicsafety",
                "name": "OffenseViolatedStateStatute"
            },
            "title": "State Statute",
            "description": "State statute violated.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5641cb0f-07ac-4f88-8fd2-da2f8d40d68c",
            "type": {
                "namespace": "publicsafety",
                "name": "ReasonHeld"
            },
            "title": "Reason Held",
            "description": "Reason held",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a4a4223f-f400-45ce-a093-9b6672ba4dc0",
            "type": {
                "namespace": "publicsafety",
                "name": "ReleaseDate"
            },
            "title": "Release Date_deprecated",
            "description": "Date of release or discharge (i.e., from jail).",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7764c7fe-f2fc-40dc-86cc-866945b6a9af",
            "type": {
                "namespace": "publicsafety",
                "name": "ReleasedPendingCaseDisposition"
            },
            "title": "Released Pending Case Disposition",
            "description": "Defendant was released pending case disposition",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "fe7b8f24-f0f7-4394-a7ef-5feb9d485936",
            "type": {
                "namespace": "publicsafety",
                "name": "SIDNo"
            },
            "title": "SID No",
            "description": "SID No",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cfea602e-9b53-4f10-8c2f-97173b77003d",
            "type": {
                "namespace": "publicsafety",
                "name": "SSA"
            },
            "title": "SSA",
            "description": "SSA",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a162a734-2715-4cca-80a0-b500630d7eaf",
            "type": {
                "namespace": "publicsafety",
                "name": "SentenceTermDays"
            },
            "title": "Sentence Term: Days",
            "description": "Sentence term: days",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d69f91d1-648f-4b1d-9129-50f17980a795",
            "type": {
                "namespace": "publicsafety",
                "name": "SentenceTermHours"
            },
            "title": "Sentence Term: Hours",
            "description": "Sentence term: hours",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6ae9d04f-227f-452b-99f6-5b1049ec8ac2",
            "type": {
                "namespace": "publicsafety",
                "name": "Status"
            },
            "title": "Status",
            "description": "Status",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6c808228-5445-4977-8d11-19477cb48380",
            "type": {
                "namespace": "publicsafety",
                "name": "TimeFrame"
            },
            "title": "Time Frame",
            "description": "Time frame",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d76b572e-f105-4f6c-a6c6-043984c71332",
            "type": {
                "namespace": "publicsafety",
                "name": "TimeServedHours"
            },
            "title": "Time Served: Hours (v1)",
            "description": "Time served: hours",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2b2129ab-e484-44ae-8e49-c733ef313999",
            "type": {
                "namespace": "publicsafety",
                "name": "TimeServedMinutes"
            },
            "title": "Time Served: Minutes (v1)",
            "description": "Time served: minutes",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "17d5e422-2bb4-42ad-878f-e9490807edba",
            "type": {
                "namespace": "publicsafety",
                "name": "TotalTime"
            },
            "title": "Total Time",
            "description": "Total time",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "fbc41236-e3bf-43c4-968d-a3d17069c247",
            "type": {
                "namespace": "publicsafety",
                "name": "admissiondate"
            },
            "title": "Admission Date (-d)",
            "description": "An admission date",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a773c790-6564-4e5a-8f83-fbb0f45bd7a9",
            "type": {
                "namespace": "publicsafety",
                "name": "agencyid"
            },
            "title": "Agency ID",
            "description": "Agency ID",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b916c940-9e7f-434d-b502-05fbdc2845b2",
            "type": {
                "namespace": "publicsafety",
                "name": "agencyname"
            },
            "title": "Agency name",
            "description": "Agency Name",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "00e11d1a-5bd7-42bd-89a5-a452d4f6337e",
            "type": {
                "namespace": "publicsafety",
                "name": "assignedofficer"
            },
            "title": "Assigned Officer",
            "description": "Assigned Officer",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9d30c278-13cd-47c5-9e20-d677facced23",
            "type": {
                "namespace": "publicsafety",
                "name": "assignedofficerid"
            },
            "title": "Assigned Officer ID",
            "description": "Assigned Officer ID",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e785d73d-5ae9-4880-988b-6ce6b364b814",
            "type": {
                "namespace": "publicsafety",
                "name": "cad_masterbusinessnumber"
            },
            "title": "Master Business Number",
            "description": "Master Business Number found in CAD systems",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "999dbc43-519f-43b2-8119-73a2ef196bf5",
            "type": {
                "namespace": "publicsafety",
                "name": "cadnumber"
            },
            "title": "Cad number (v2)",
            "description": "A police CAD call number",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c7cdf0a9-db29-4ffc-96f7-52bcb73750ab",
            "type": {
                "namespace": "publicsafety",
                "name": "cfscaseid"
            },
            "title": "Case ID (CFS)",
            "description": "Case ID for a dispatch call for service",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a9c96e5a-fb7c-44d3-ad32-44b25cdfdbd3",
            "type": {
                "namespace": "publicsafety",
                "name": "cfscasenumber"
            },
            "title": "CFS Case Number",
            "description": "CFS Case Number",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9f91239a-9614-4a70-b36d-e70c5da6fdaa",
            "type": {
                "namespace": "publicsafety",
                "name": "cfsid"
            },
            "title": "Call for service (CFS) ID",
            "description": "A string that uniquely identifies a call for service, separate from the Dispatch ID, if both are given.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "496de432-d25e-45b8-b252-682a588bfc32",
            "type": {
                "namespace": "publicsafety",
                "name": "cfsoperator"
            },
            "title": "CFS Operator",
            "description": "CFS Operator",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f7c38fcd-e815-4f16-90ee-13932336265d",
            "type": {
                "namespace": "publicsafety",
                "name": "datebooked"
            },
            "title": "Date Booked",
            "description": "Date subject was booked.",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "13c7f654-085d-4cd0-9db2-674df9c69dda",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatch911callnumber"
            },
            "title": "911 Call Number",
            "description": "911 Call Number",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2904c8ac-61d5-4075-a952-a761ae70242d",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchemd"
            },
            "title": "Dispatch EMD",
            "description": "A dispatch EMD, such as ProQA.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8cf0d1a8-439a-402d-85c3-572a93e07ff8",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchemdlevel"
            },
            "title": "Dispatch EMD Level",
            "description": "A dispatch EMD level, such as with ProQA.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7008752d-b95f-4557-ac7a-17deb450bf74",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchemdtype"
            },
            "title": "EMD Type",
            "description": "EMD Type",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "01c9ad01-1403-4d35-8764-e15c048a38e5",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchemsflag"
            },
            "title": "CFS EMS",
            "description": "Call for service (CFS) EMS flag",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3f52e7f5-57fa-4a29-93bb-6fe5e7e3f327",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchfireflag"
            },
            "title": "CFS Fire",
            "description": "Flag field for a fire in a call for service. ",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ccb90ce4-4343-4478-bfc5-d7167a45557f",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchfirelevel"
            },
            "title": "Dispatch Fire Level",
            "description": "Dispatch Fire Level",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "88acd844-6aa1-4256-995c-8b67d2dd8201",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchhowreported"
            },
            "title": "How Reported (dispatch call)",
            "description": "How a dispatch call was reported",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2080c6bb-5c37-4eb2-b629-3fe09b665d42",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchid"
            },
            "title": "Dispatch ID",
            "description": "A string that uniquely identifies a call for service",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0e1bdba4-7dc9-4c48-a147-996573fa6fcd",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchlea"
            },
            "title": "CFS LEA",
            "description": "Flag for LEA in a call for service.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6335ec93-dd81-4106-b44b-faafce66b209",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchnumber"
            },
            "title": "Dispatch number",
            "description": "Dispatch number",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "39dc4d54-8fac-46ad-ae3d-e538123a9b30",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchpersontype"
            },
            "title": "Dispatch Person Type",
            "description": "Dispatch Person Type",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "15092289-b597-403a-b238-325ecdeb1974",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchpersontypedescription"
            },
            "title": "Dispatch Person Type Description",
            "description": "Dispatch person-type description (i.e., driver, witness, reported).",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "68199414-1903-4d4c-ae39-7609f9c997b4",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchpriority"
            },
            "title": "Dispatch Priority",
            "description": "Dispatch Priority",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "bca0e150-9965-4e9f-9508-1efc4fdcf16e",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchsubzone"
            },
            "title": "Dispatch Subzone",
            "description": "Dispatch SubZone",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ce71688f-7c1a-4e6f-b5cf-79e7f077a3f1",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchtransfervehicle"
            },
            "title": "Transfer Vehicle",
            "description": "Transfer Vehicle",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c938eb9b-15da-4b87-bf0a-006e290db4ec",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchtripnumber"
            },
            "title": "Dispatch Trip Number",
            "description": "Trip Number",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "10839c42-2252-4630-ab22-a9752333a601",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchtype"
            },
            "title": "Dispatch Type",
            "description": "Dispatch Type",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "323de7c8-a374-4e45-ab0d-ff8b7fabe094",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchtypeclass"
            },
            "title": "Dispatch type class (-d)",
            "description": "Dispatch type class",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                },
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c730490e-8a36-481d-ae11-84aa76e97a38",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchtypeid"
            },
            "title": "Dispatch Type ID",
            "description": "Dispatch Type ID",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "71fe0840-fb24-4867-a23c-47a96c517141",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchtypepriority"
            },
            "title": "Dispatch Type Priority",
            "description": "Dispatch Type Priority",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "bce1d15e-25c6-414f-ba0f-74bf22d13028",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchzoneid"
            },
            "title": "Dispatch zone ID",
            "description": "A dispatch zone's unique ID",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1e599c37-727e-45b8-a0be-310e095cab62",
            "type": {
                "namespace": "publicsafety",
                "name": "dispatchzonename"
            },
            "title": "Dispatch Zone",
            "description": "Details on a dispatch zone for a call for service.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8de9d1f4-9fe1-4056-a342-9142b227fd86",
            "type": {
                "namespace": "publicsafety",
                "name": "drugspresent"
            },
            "title": "Drugs Present at arrest or incident",
            "description": "Drugs found/present during an arrest or present in a police incident. ",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "aa3f9865-e882-4363-9cef-5145f787b114",
            "type": {
                "namespace": "publicsafety",
                "name": "employeeid"
            },
            "title": "Employee ID",
            "description": "Employee ID",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a81d9aa4-a664-4efc-ab19-87612a3cd198",
            "type": {
                "namespace": "publicsafety",
                "name": "firedistrictcode"
            },
            "title": "Fire District code",
            "description": "A fire district code in dispatch data.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "85806174-c305-483d-8e18-1bf8f6d5ca39",
            "type": {
                "namespace": "publicsafety",
                "name": "firedistrictname"
            },
            "title": "Fire District",
            "description": "Name of Fire District",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6527f4a6-58b3-4c15-8e47-abe8ba377485",
            "type": {
                "namespace": "publicsafety",
                "name": "include"
            },
            "title": "Include",
            "description": "Include",
            "schemas": [],
            "datatype": "Int32",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "16eae16e-b1f1-404c-94af-a644f5ca4cc2",
            "type": {
                "namespace": "publicsafety",
                "name": "medicalzone"
            },
            "title": "Medical Zone",
            "description": "A medical zone, sometimes referred to in dispatch calls also.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "45aa6695-a7e7-46b6-96bd-782e6aa9ac13",
            "type": {
                "namespace": "publicsafety",
                "name": "mugshot"
            },
            "title": "Mugshot",
            "description": "A person's mugshot",
            "schemas": [],
            "datatype": "Binary",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e8588688-b805-4f58-8f78-40251e8e6c8a",
            "type": {
                "namespace": "publicsafety",
                "name": "newsetting"
            },
            "title": "New Setting",
            "description": "A new setting",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1b8c38d4-3e7c-4db0-aee2-276beb3aae56",
            "type": {
                "namespace": "publicsafety",
                "name": "officerID"
            },
            "title": "Officer ID (v1)",
            "description": "Identifier for an officer.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9d2d4a0e-26af-46c8-b366-fd872dbc5506",
            "type": {
                "namespace": "publicsafety",
                "name": "officerbadgeid"
            },
            "title": "Officer Badge Identification",
            "description": "Identification number for a law enforcement official.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8ae3214e-7e4f-47e8-b22f-adc718e60a5c",
            "type": {
                "namespace": "publicsafety",
                "name": "officerid"
            },
            "title": "Officer ID",
            "description": "Officer ID",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9f97811b-fef5-434d-b3b2-9e72171a66b8",
            "type": {
                "namespace": "publicsafety",
                "name": "personnelid"
            },
            "title": " Employee ID",
            "description": "Unique ID for an employee.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "bf828c73-2ea9-4d4e-be40-ae9702e64b21",
            "type": {
                "namespace": "publicsafety",
                "name": "personnelstatus"
            },
            "title": "Personnel status",
            "description": "Active or inactive employees (i.e., former employees)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "a046320f-02a0-4443-b5a4-b6a9928c334b",
            "type": {
                "namespace": "publicsafety",
                "name": "personneltitle"
            },
            "title": "Personnel Title",
            "description": "Some call this \"category\". Criminal Justice: Detective, Communications, Officer, Patrol Deputy etc. ",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f7f01aa6-159a-435f-901b-44e62679bc51",
            "type": {
                "namespace": "publicsafety",
                "name": "portablebreathtest"
            },
            "title": "Portable Breath Test",
            "description": "Portable breath test.",
            "schemas": [],
            "datatype": "Double",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c06a478d-1501-4c8c-a964-42287865abed",
            "type": {
                "namespace": "publicsafety",
                "name": "program"
            },
            "title": "Program",
            "description": "A program",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1d68fb0c-b387-4958-8f05-3377ab0fd689",
            "type": {
                "namespace": "publicsafety",
                "name": "projecttype"
            },
            "title": "Project Type",
            "description": "Project type",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3a3973a3-161d-4601-a064-ff9015cb29f6",
            "type": {
                "namespace": "publicsafety",
                "name": "recommendation"
            },
            "title": "Recommendation",
            "description": "A recommendation",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1901c0b0-f051-4660-8d6d-b5a040dc9dcb",
            "type": {
                "namespace": "publicsafety",
                "name": "ssaconviction"
            },
            "title": "SSA Conviction Date",
            "description": "SSA conviction date",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "49c477f2-95bb-4fe2-a654-e2c1c8419304",
            "type": {
                "namespace": "publicsafety",
                "name": "ssastatus"
            },
            "title": "SSA Status",
            "description": "SSA Status",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c2e168ac-ded5-4f00-b282-e2896e394ab1",
            "type": {
                "namespace": "publicsafety",
                "name": "unitid"
            },
            "title": "Unit ID",
            "description": "A uniquely identifying string for a unit.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "56b657d7-22c1-4a69-911c-9d7bb915f11f",
            "type": {
                "namespace": "publicsafety",
                "name": "unitname"
            },
            "title": "Unit name",
            "description": "Unit name, if provided - i.e., \"Fire Engine 1\".",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "80c3ffc7-5a8a-4547-8d60-dfb0b06e92b4",
            "type": {
                "namespace": "publicsafety",
                "name": "weaponspresent"
            },
            "title": "Weapons present",
            "description": "Whether weapons are found during an arrest or incident.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e4460db5-2d4d-435d-a03b-30a5276088a3",
            "type": {
                "namespace": "reproductive",
                "name": "id"
            },
            "title": "Reproductive assessment ID",
            "description": "Unique ID for medical reproductive assessment",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d104fadc-3f7b-4c8f-83e8-f321b6c2ea26",
            "type": {
                "namespace": "reproductive",
                "name": "stdhistory"
            },
            "title": "History of STDs (Y/N)",
            "description": "History of STDs (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "169fff94-d733-4b50-8096-61ea13d80be4",
            "type": {
                "namespace": "respiratory",
                "name": "cough"
            },
            "title": "Has cough (Y/N)",
            "description": "Has cough (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f580437c-f2c9-4ea1-99ee-3ef099bc0a4b",
            "type": {
                "namespace": "respiratory",
                "name": "coughcomment"
            },
            "title": "Cough Comments",
            "description": "Cough Comments",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4b1e5b1a-f4ea-4644-8317-1f5e7f47220d",
            "type": {
                "namespace": "respiratory",
                "name": "cxrtbtreatment"
            },
            "title": "Chest Xray / TB Treatment",
            "description": "Chest Xray / TB Treatment notes",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1c8ab6f0-e77b-42da-8140-becc02e6fd19",
            "type": {
                "namespace": "respiratory",
                "name": "historyoftuberculosis"
            },
            "title": "History of Positive TB (Y/N)",
            "description": "History of Positive TB (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "59666069-adae-4974-b328-c96340c4af75",
            "type": {
                "namespace": "respiratory",
                "name": "id"
            },
            "title": "Respiratory ID",
            "description": "Unique ID for respiratory assessment ",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6c1e2180-ac87-4f9f-ac40-2dd741aa5f93",
            "type": {
                "namespace": "respiratory",
                "name": "problemsbreathing"
            },
            "title": "Problems with breathing, history.",
            "description": "Problems with breathing - history of asthma, emphysema, bronchitis, COPD.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8e4b71ea-30b3-4123-a63b-59ce3c94e9d7",
            "type": {
                "namespace": "respiratory",
                "name": "productivecough"
            },
            "title": "Productive Cough (Y/N)",
            "description": "Whether cough is productive.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e0fda4d0-b19b-422c-a702-d30d9e89d024",
            "type": {
                "namespace": "respiratory",
                "name": "shortnessofbreath"
            },
            "title": "Shortness of breath (Y/N)",
            "description": "Shortness of breath (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "471a09ff-645d-4d44-841e-ae35c3884cb7",
            "type": {
                "namespace": "respiratory",
                "name": "testedfortuberculosis"
            },
            "title": "Tested for Tuberculosis (Y/N)",
            "description": "Tested for Tuberculosis (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7a0d8601-33f4-4ddb-9040-0f738a4898e9",
            "type": {
                "namespace": "scr",
                "name": "DetentionReleaseReasonCategoryCodeType"
            },
            "title": "Reason Code",
            "description": "The detention release reason.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4e46fdd8-27ce-4f7e-bc0f-ddf77700904c",
            "type": {
                "namespace": "screening",
                "name": "AbdominalPain"
            },
            "title": "AbdominalPain",
            "description": "AbdominalPain",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c5ef3188-2d74-476e-8fca-6b19fbd1e84d",
            "type": {
                "namespace": "screening",
                "name": "Fever"
            },
            "title": "Fever",
            "description": "Fever",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c1c019b7-c1d0-4750-880e-a5bdffad7a06",
            "type": {
                "namespace": "screening",
                "name": "HomelessInState"
            },
            "title": "HomelessInState",
            "description": "HomelessInState",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "af4e01ba-b6b4-4700-8373-0ae55862689a",
            "type": {
                "namespace": "screening",
                "name": "HomelessIndicator"
            },
            "title": "HomelessIndicator",
            "description": "HomelessIndicator",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5dc1af1e-31d6-4668-9f0d-d350c31a3229",
            "type": {
                "namespace": "screening",
                "name": "IssuePreventDetox"
            },
            "title": "IssuePreventDetox",
            "description": "IssuePreventDetox",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0fb81e8a-9aa7-4a6f-ba35-048167f8597b",
            "type": {
                "namespace": "screening",
                "name": "LastSeizureDate"
            },
            "title": "LastSeizureDate",
            "description": "LastSeizureDate",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "200e0bbb-bf70-459d-8fa8-516d73383703",
            "type": {
                "namespace": "screening",
                "name": "MHComments"
            },
            "title": "MHComments",
            "description": "MHComments",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d638bea4-ee97-4c24-860d-4addc02f79cb",
            "type": {
                "namespace": "screening",
                "name": "MalignantHyperthermia"
            },
            "title": "MalignantHyperthermia",
            "description": "MalignantHyperthermia",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d41f3196-d011-4f79-b211-1e93341874df",
            "type": {
                "namespace": "screening",
                "name": "Pregnant"
            },
            "title": "Pregnant",
            "description": "Pregnant",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d4007838-e900-4b7d-a306-139114b28685",
            "type": {
                "namespace": "screening",
                "name": "ReadWriteHelp"
            },
            "title": "ReadWriteHelp",
            "description": "ReadWriteHelp",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f19f44e1-79bd-4a9e-84aa-f8d65a99c909",
            "type": {
                "namespace": "screening",
                "name": "admitapprovalindicator"
            },
            "title": "Admission / Admit Approval Indicator",
            "description": "Admission Approval Indicator (Y/N)",
            "schemas": [],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "63e667f0-ae41-4afc-8ef5-01e17f2bf22f",
            "type": {
                "namespace": "screening",
                "name": "noadmitreason"
            },
            "title": "Reason Not Seen or Admitted ",
            "description": "Reason individual was not seen or admitted",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c08e814a-d13c-47b9-bf15-f85add18112b",
            "type": {
                "namespace": "sharing",
                "name": "fax"
            },
            "title": "Sharing Person/Organization Fax Number",
            "description": "The fax number of the person or organization a client is sharing data with.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "54f64f11-9c4d-4701-897b-630ffeb94a21",
            "type": {
                "namespace": "sharing",
                "name": "name"
            },
            "title": "Sharing Person/Organization Name",
            "description": "The name of a person or organization with whom a client is sharing data.",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8b3c68d4-a843-4286-bf6d-2e8f91df98b0",
            "type": {
                "namespace": "sharing",
                "name": "phone"
            },
            "title": "Sharing Person/Organization Phone Number",
            "description": "The phone number of the person or organization a client is sharing data with.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b14c01f0-b273-4f6f-aac9-fa44aa93ebf4",
            "type": {
                "namespace": "sharing",
                "name": "programstoexclude"
            },
            "title": "Programs to Exclude",
            "description": "A list of programs or information to exclude when sharing data with a third party.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "56f947ce-9f84-41e8-8526-810b2cfe9dce",
            "type": {
                "namespace": "sharing",
                "name": "relationship"
            },
            "title": "Sharing Person/Organization Relationship",
            "description": "The relationship between a client and the person or organization they are sharing data with.",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "10779ba8-e4b2-45dc-a7f2-93e565581dc3",
            "type": {
                "namespace": "skin",
                "name": "bedbugbitesorscabies"
            },
            "title": "Bedbug bites or scabies (Y/N)",
            "description": "Bedbug bites or scabies (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4158971d-47cc-4fed-beeb-410079569078",
            "type": {
                "namespace": "skin",
                "name": "bedbugorscabiesdescription"
            },
            "title": "Bedbug bites or scabies description",
            "description": "Bedbug bites or scabies description",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "4b837187-0959-4ff7-803a-a2ed9779e165",
            "type": {
                "namespace": "skin",
                "name": "diabeticfootchecks"
            },
            "title": "Diabetic foot checks (Y/N)",
            "description": "Diabetic foot checks (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d4b56cef-e578-4200-a14d-34709cbda5ae",
            "type": {
                "namespace": "skin",
                "name": "diabeticfootchecksdescription"
            },
            "title": "Diabetic foot checks description",
            "description": "Diabetic foot checks description",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7a598bde-225f-48fb-b2b1-bfb95b48d546",
            "type": {
                "namespace": "skin",
                "name": "headpediculi"
            },
            "title": "Head Pediculi Present (Y/N)",
            "description": "Head Pediculi Present (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "69e35893-76ac-4bf2-9c04-6c7d5f683c8b",
            "type": {
                "namespace": "skin",
                "name": "headpediculidescription"
            },
            "title": "Head Pediculi description",
            "description": "Head Pediculi description",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f668cb5f-fc16-45df-85d0-385d859bbdce",
            "type": {
                "namespace": "skin",
                "name": "otherrashdermatitis"
            },
            "title": "Other Rash/Dermatitis (Y/N)",
            "description": "Other Rash/Dermatitis (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "07af6083-b1ff-43c5-b11b-22a14b735417",
            "type": {
                "namespace": "skin",
                "name": "otherrashdermatitisdescription"
            },
            "title": "Other Rash/Dermatitis Description",
            "description": "Other Rash/Dermatitis Description",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f3915242-b151-4fd0-822c-6465c330e791",
            "type": {
                "namespace": "skin",
                "name": "trackmarks"
            },
            "title": "Needle track marks (Y/N)",
            "description": "Needle track marks (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f848e0e9-6d29-4d21-a7b5-7d59c34fb56d",
            "type": {
                "namespace": "skin",
                "name": "trackmarksdescription"
            },
            "title": "Description of track marks",
            "description": "Description of track marks",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c2147279-64c8-412d-b8c5-056744785122",
            "type": {
                "namespace": "staff",
                "name": "email"
            },
            "title": "Email",
            "description": "The email of a staff member",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "730fe771-ee7e-4cb3-b6be-6a56c2bc7317",
            "type": {
                "namespace": "staff",
                "name": "firstname"
            },
            "title": "Staff First Name",
            "description": "The first name of a staff member",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "4a16d71a-63f1-499e-9fbc-22380c57a3b0",
            "type": {
                "namespace": "staff",
                "name": "lastname"
            },
            "title": "Last Name",
            "description": "The last name of a staff member",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "METAPHONE",
            "indexed": "NONE"
        },
        {
            "id": "15817a1f-9030-47c0-8cb8-4ce551990eb1",
            "type": {
                "namespace": "staff",
                "name": "signature"
            },
            "title": "Staff Signature",
            "description": "The signature of a staff member",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "2644c1cc-2af0-4d51-a28e-4165a17fdb4d",
            "type": {
                "namespace": "staff",
                "name": "signaturedatetime"
            },
            "title": "Staff Signature Date/Time",
            "description": "The date and time a staff member's signature was collected",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6bfc4a96-a4b9-49d7-affb-874f1edd9c91",
            "type": {
                "namespace": "staff",
                "name": "title"
            },
            "title": "Staff Title",
            "description": "The title of a staff member",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e55b4e57-c97a-48c2-ac48-115531664630",
            "type": {
                "namespace": "substance",
                "name": "IneffectiveTreatment"
            },
            "title": "Ineffective Treatment",
            "description": "Ineffective Treatment",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f1697f68-c594-40db-8124-63711d92adf6",
            "type": {
                "namespace": "substance",
                "name": "LastUsed"
            },
            "title": "substance LastUsed",
            "description": "substance LastUsed",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cf1f3061-fc1c-47e3-8c64-bd0f77939ed0",
            "type": {
                "namespace": "substance",
                "name": "PreviousHelpfulTreatment"
            },
            "title": "PreviousHelpfulTreatment",
            "description": "PreviousHelpfulTreatment",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7d09b632-b4bb-4ee9-925f-1b672e4567db",
            "type": {
                "namespace": "substance",
                "name": "PreviousLengthOfSobriety"
            },
            "title": "PreviousLengthOfSobriety",
            "description": "PreviousLengthOfSobriety",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "94a74d24-30fb-4063-94ea-db758a08a4f1",
            "type": {
                "namespace": "substance",
                "name": "PreviousLengthOfStay"
            },
            "title": "PreviousLengthOfStay",
            "description": "PreviousLengthOfStay",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c7cca1cc-7bf9-4ac4-8430-3eefdb103c9e",
            "type": {
                "namespace": "substance",
                "name": "PreviousLevelOfCare"
            },
            "title": "PreviousLevelOfCare",
            "description": "PreviousLevelOfCare",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "86772954-91d7-41f5-8929-9675d6310b74",
            "type": {
                "namespace": "substance",
                "name": "PreviousNotHelpfulTreatment"
            },
            "title": "PreviousNotHelpfulTreatment",
            "description": "PreviousNotHelpfulTreatment",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ae1a1181-bf76-471c-bb3e-663b9ecbff36",
            "type": {
                "namespace": "substance",
                "name": "PreviousTreatingFacility"
            },
            "title": "PreviousTreatingFacility",
            "description": "PreviousTreatingFacility",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7db0951b-cb53-47db-9ca5-2e84831fb495",
            "type": {
                "namespace": "substance",
                "name": "Route"
            },
            "title": "Drug Usage Route",
            "description": "Drug Usage Route",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d5b0adba-b10c-415e-b11b-06dd4cbfe273",
            "type": {
                "namespace": "substance",
                "name": "SequenceID"
            },
            "title": "Substance SequenceID",
            "description": "SubstanceSequenceID",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "51374bce-3c0d-4222-a057-000f670294e7",
            "type": {
                "namespace": "substance",
                "name": "TreatmentHistoryID"
            },
            "title": "TreatmentHistoryID",
            "description": "TreatmentHistoryID",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "e439e1bd-16fd-4029-bc86-3d9776d6c70a",
            "type": {
                "namespace": "substance",
                "name": "UsageDuration"
            },
            "title": "Drug Usage Duration",
            "description": "Drug Usage Duration",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ecd6b536-d7c8-40a8-bd21-376485e5c37c",
            "type": {
                "namespace": "substance",
                "name": "deliriumtremens"
            },
            "title": "Delirium Tremens from substance use (Y/N)",
            "description": "Delirium Tremens from substance use (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "afda612c-a914-4efc-bdb8-7511fdc18b8e",
            "type": {
                "namespace": "substance",
                "name": "familyabuseperson"
            },
            "title": "Family history of substance abuse (person)",
            "description": "Family history of substance abuse (person)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "1f66b596-91d9-4477-929f-60fd5dbe1fdc",
            "type": {
                "namespace": "substance",
                "name": "familyhistoryabuse"
            },
            "title": "Family history of substance abuse",
            "description": "Family history of substance abuse (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "78aa14bd-2816-4829-bfda-32cf970ab760",
            "type": {
                "namespace": "substance",
                "name": "familyhistorymentalillness"
            },
            "title": "Family history of mental illness (Y/N)",
            "description": "Family history of mental illness (Y/N)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "Boolean",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c0c9af36-5d4a-4e5c-a28f-a699c02f99e4",
            "type": {
                "namespace": "substance",
                "name": "familymentalillnessperson"
            },
            "title": "Family history of mental illness (person)",
            "description": "Family history of mental illness (person)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "42e4ac4e-4634-45fa-a6d6-806d48b041be",
            "type": {
                "namespace": "substance",
                "name": "frequency"
            },
            "title": "Drug Usage Frequency",
            "description": "Drug Usage Frequency",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c1f22a8f-0019-4446-83a9-0917b1e838fd",
            "type": {
                "namespace": "substance",
                "name": "patternsofuse"
            },
            "title": "Patterns of substance use",
            "description": "Patterns of substance use",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "6dd08404-92fc-485f-af92-806c83bffece",
            "type": {
                "namespace": "substance",
                "name": "periodsofsobriety"
            },
            "title": "Periods Of Sobriety",
            "description": "Description of any periods of sobriety.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "3a109ac6-daa2-4a37-adbc-abb6a6c021f9",
            "type": {
                "namespace": "substance",
                "name": "sobrietyaftercareplan"
            },
            "title": "Sobriety Aftercare Plan",
            "description": "Description of any sobriety aftercare plan",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "71ec1401-4765-4048-98c8-97b4b4a1703e",
            "type": {
                "namespace": "substance",
                "name": "sobrietysupport"
            },
            "title": "Sobriety Support",
            "description": "Description of any sobriety support.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "18a2c775-3929-4937-b85b-758e66522d8d",
            "type": {
                "namespace": "substance",
                "name": "type"
            },
            "title": "Substance Type",
            "description": "Substance type (i.e., alcohol, opioids)",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f16be3da-1066-4702-9dd0-ccb3a887a4e2",
            "type": {
                "namespace": "substance",
                "name": "usageamount"
            },
            "title": "Drug Usage Amount",
            "description": "Drug Usage Amount",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "919bfdc2-5da7-4e73-8418-081504e14309",
            "type": {
                "namespace": "time",
                "name": "alerted"
            },
            "title": "Time Alerted",
            "description": "Time Alerted",
            "schemas": [],
            "datatype": "TimeOfDay",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "21c3cfd0-db1c-4641-b248-b3fbd7142658",
            "type": {
                "namespace": "time",
                "name": "arrived"
            },
            "title": "Time arrived",
            "description": "time arrived",
            "schemas": [],
            "datatype": "TimeOfDay",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "cdad2fdb-5696-4676-8afa-144f09aa011e",
            "type": {
                "namespace": "time",
                "name": "completed"
            },
            "title": "Time completed (-d)",
            "description": "The time an event was completed.",
            "schemas": [
                {
                    "namespace": "ol",
                    "name": "deprecated"
                }
            ],
            "datatype": "TimeOfDay",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "88626667-643d-4735-a2de-6471444f9b55",
            "type": {
                "namespace": "time",
                "name": "enroute"
            },
            "title": "Time En-route",
            "description": "Time En-route",
            "schemas": [],
            "datatype": "TimeOfDay",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "5470892c-00f4-4511-ab04-495b3061afa3",
            "type": {
                "namespace": "vehicle",
                "name": "color"
            },
            "title": "Color",
            "description": "Vehicle Color",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "b20557c8-6959-47b7-8377-7c4e351cbe79",
            "type": {
                "namespace": "vehicle",
                "name": "id"
            },
            "title": "Vehicle ID",
            "description": "A unique identifier for an vehicle",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "43a6df96-1cb8-4daa-9a82-f9361b8777c7",
            "type": {
                "namespace": "vehicle",
                "name": "licensenumber"
            },
            "title": "License Number",
            "description": "A license number",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "592062ad-d868-4bcf-8ee0-daa1331fc138",
            "type": {
                "namespace": "vehicle",
                "name": "licenseplatetype"
            },
            "title": "License Plate Type",
            "description": "License plate type-auto, truck, apportioned, etc.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "ae27e6cd-701b-4952-b3ee-4ecbeeeb2eea",
            "type": {
                "namespace": "vehicle",
                "name": "licensestate"
            },
            "title": "Vehicle License Plate State",
            "description": "A vehicle's license plate state",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "9177cb91-4596-4efc-b9f2-2335528c3376",
            "type": {
                "namespace": "vehicle",
                "name": "licenseyear"
            },
            "title": "License Plate Year",
            "description": "License plate year of expiration",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "8c798836-862f-4a84-af8b-0c982b11dfae",
            "type": {
                "namespace": "vehicle",
                "name": "make"
            },
            "title": "Make",
            "description": "Make",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "93b8b60b-bcfc-4778-99b8-8c57ce6cb502",
            "type": {
                "namespace": "vehicle",
                "name": "model"
            },
            "title": "Model",
            "description": "Model of device or vehicle",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "58892bfc-3700-49d3-b35e-dbe15fe8cb17",
            "type": {
                "namespace": "vehicle",
                "name": "secondarycolor"
            },
            "title": "Secondary color (vehicle)",
            "description": "Secondary color of a vehicle.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "afe0e263-adf3-4803-9053-2566f0220075",
            "type": {
                "namespace": "vehicle",
                "name": "style"
            },
            "title": "Style",
            "description": "Vehicle Style",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "686bb9d4-766d-4ff5-bf63-a0d43bd6e9fc",
            "type": {
                "namespace": "vehicle",
                "name": "vin"
            },
            "title": "VIN",
            "description": "Vehicle VIN",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f9398bdd-3f01-4628-9e3d-1c0bf7ed098e",
            "type": {
                "namespace": "vehicle",
                "name": "year"
            },
            "title": "Year",
            "description": "Vehicle Year",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "f30b6660-800b-4ea4-bbaa-8e93871a2b27",
            "type": {
                "namespace": "visit",
                "name": "reason"
            },
            "title": "Reason",
            "description": "Visit reason",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "634319a4-8e26-46ae-9e73-68a9a5cf8753",
            "type": {
                "namespace": "vitals",
                "name": "BloodPressure"
            },
            "title": "BloodPressure",
            "description": "BloodPressure",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "eca2d537-88b2-40de-b52e-ef9965d99fa6",
            "type": {
                "namespace": "vitals",
                "name": "Pulse"
            },
            "title": "Pulse",
            "description": "Pulse",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d2fd67a0-d3cd-4498-9cb1-5ee6629d63b2",
            "type": {
                "namespace": "vitals",
                "name": "Respiration"
            },
            "title": "Respiration",
            "description": "Respiration",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d200c84b-2e5f-41e7-b79a-bf3cd4be8369",
            "type": {
                "namespace": "vitals",
                "name": "Temperature"
            },
            "title": "Temperature",
            "description": "Temperature",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "937cad34-5c38-44bd-9a12-e5237fd57a21",
            "type": {
                "namespace": "withdrawal",
                "name": "id"
            },
            "title": "Withdrawal ID",
            "description": "Unique ID for substance use withdrawal assessment.",
            "schemas": [
                {
                    "namespace": "v2",
                    "name": "v2"
                }
            ],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "0f129f85-a2f5-42de-a28e-b11e1d553988",
            "type": {
                "namespace": "witness",
                "name": "email"
            },
            "title": "Witness Email",
            "description": "The email of a witness",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "c32822d3-3b7b-45b7-882c-d51dbbd38e86",
            "type": {
                "namespace": "witness",
                "name": "firstname"
            },
            "title": "Witness First Name",
            "description": "The first name of a witness",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "def9e4eb-bab7-44a6-b64c-927db06fc7ac",
            "type": {
                "namespace": "witness",
                "name": "lastname"
            },
            "title": "Witness Last Name",
            "description": "The last name of a witness.",
            "schemas": [],
            "datatype": "String",
            "piiField": true,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "d3f28c33-2928-4348-885d-6026186acc2f",
            "type": {
                "namespace": "witness",
                "name": "signature"
            },
            "title": "Witness Signature",
            "description": "The signature of a witness",
            "schemas": [],
            "datatype": "String",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        },
        {
            "id": "7a49a434-54ef-4c84-88a9-80592c8dbb7e",
            "type": {
                "namespace": "witness",
                "name": "signaturedatetime"
            },
            "title": "Witness Signature Date/Time",
            "description": "The date and time a witness' signature was collected",
            "schemas": [],
            "datatype": "DateTimeOffset",
            "piiField": false,
            "multiValued": true,
            "analyzer": "STANDARD",
            "indexed": "NONE"
        }
    ],
    "schemas": [
        {
            "fqn": {
                "namespace": "cafe",
                "name": "chronicle"
            },
            "propertyTypes": [],
            "entityTypes": [
                {
                    "id": "80c86a96-0e3f-46eb-9fbb-60d9174566a5",
                    "type": {
                        "namespace": "ol",
                        "name": "study"
                    },
                    "title": "Study Data Collection Event",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "cafe",
                            "name": "chronicle"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "70d2ff1c-2450-4a47-a954-a7641b7399ae",
                        "0011bbfe-d5d4-4f88-97a8-cdeb821deb6f",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "6a1f7cf6-80eb-4fe9-a9f4-49cad15c6154",
                        "c502df5b-ec63-4f15-b529-d38695366c75",
                        "54f64f11-9c4d-4701-897b-630ffeb94a21",
                        "06083695-aebe-4a56-9b98-da6013e93a5e",
                        "e8f9026a-2494-4749-84bb-1499cb7f215c"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "5f7c0b2b-614d-4d5d-929f-9efca07ba8d1",
                    "type": {
                        "namespace": "ol",
                        "name": "application"
                    },
                    "title": "Application",
                    "description": "Application data collected via a user's device (e.g., phone, tablet, etc.)",
                    "schemas": [
                        {
                            "namespace": "cafe",
                            "name": "chronicle"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "7674c064-c8fb-42b0-a1ca-c7cab0e0829d",
                        "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "285e6bfc-2a73-49ae-8cb2-b112244ed85d",
                        "e90a306c-ee37-4cd1-8a0e-71ad5a180340",
                        "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                        "70d2ff1c-2450-4a47-a954-a7641b7399ae",
                        "071ba832-035f-4b04-99e4-d11dc4fbe0e8"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "7aa9e000-0585-4dff-8512-aa35b329379a",
                    "type": {
                        "namespace": "ol",
                        "name": "has"
                    },
                    "title": "Has (details, ID, etc)",
                    "description": "Has association",
                    "schemas": [
                        {
                            "namespace": "cafe",
                            "name": "chronicle"
                        },
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                        "f43dccfe-7dbe-425a-a2c0-eb104daba964",
                        "6675a7e8-2159-41b1-9431-4053690fa3c9"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                }
            ]
        },
        {
            "fqn": {
                "namespace": "cafe",
                "name": "criminaljustice"
            },
            "propertyTypes": [],
            "entityTypes": []
        },
        {
            "fqn": {
                "namespace": "ol",
                "name": "chronicle"
            },
            "propertyTypes": [],
            "entityTypes": []
        },
        {
            "fqn": {
                "namespace": "ol",
                "name": "criminaljustice"
            },
            "propertyTypes": [],
            "entityTypes": [
                {
                    "id": "1f86a011-cee3-4c26-90d3-79e83348d221",
                    "type": {
                        "namespace": "ol",
                        "name": "diagnosedwith"
                    },
                    "title": "Diagnosed With",
                    "description": "Association between person and problem/diagnosis.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "6675a7e8-2159-41b1-9431-4053690fa3c9",
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "8fccb0a9-1554-4a01-bdc2-4200952ca25a",
                    "type": {
                        "namespace": "ol",
                        "name": "fireunit"
                    },
                    "title": "Fire Unit",
                    "description": "A unit for a Fire Dispatch",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "bc37fd8c-3de5-49e1-80db-ad5feb37e408",
                    "type": {
                        "namespace": "ol",
                        "name": "presentsfor"
                    },
                    "title": "Presents For",
                    "description": "Person presents for health encounter or health service",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "6675a7e8-2159-41b1-9431-4053690fa3c9",
                        "8e65eca6-a3d1-4c05-885f-cc3156257139",
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "4c6bca41-6660-45ab-ab8c-7f88cd9d6d70",
                    "type": {
                        "namespace": "ol",
                        "name": "unit"
                    },
                    "title": "A unit",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "72dc4594-8dc0-4956-959f-2408a069f2aa",
                    "type": {
                        "namespace": "ol",
                        "name": "incident"
                    },
                    "title": "Incident",
                    "description": "A police incident",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "4d5db4fe-a0c8-45f8-af6d-cd7cd4cab86c",
                        "b94361f0-7172-4556-a4f3-99a183bff03c",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "477db70c-ee49-41bf-97d2-c4eb0e1ffcc4",
                        "cb92bd0b-0338-4f93-9936-e857e12be830",
                        "6f995298-c6b7-4f9c-b9a2-81d873a7c692",
                        "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                        "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                        "351e51ad-9f7e-4bd5-a237-84b16e1e1ce8",
                        "2a45205e-703c-43eb-a060-921bf7245f6a",
                        "80be96e6-58e5-4015-a851-312c9c2327bd",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "bd96f0c8-dbc0-49cd-b3a2-bb3faa9d6860",
                        "8de9d1f4-9fe1-4056-a342-9142b227fd86",
                        "d7a0c31f-6bea-4818-a299-7378b5516df2",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "b9170d9b-8265-452c-b9e8-ebeab5f7556f",
                        "82798057-1496-4fd2-96cb-5156217fd8f7",
                        "8636d42e-170a-4561-b962-5466fbe7af5e"
                    ],
                    "propertyTags": {
                        "92a6a5c5-b4f1-40ce-ace9-be232acdce2a": [
                            "timeline",
                            "eventdate"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "671621a2-6173-4bb4-aafa-a7a69d402563",
                    "type": {
                        "namespace": "ol",
                        "name": "identification"
                    },
                    "title": "An identification (ID card, driver's license,...)",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "e96f4905-e323-47b6-be43-2a356fd82e08",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "0f10a3f1-a020-4367-a261-750d979abfca",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "e8174f66-4b80-4f8c-bcd3-2924d5ccd6d7",
                        "faf3c011-b386-4c51-a1bb-4bad27b4083f"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "34836b35-76b1-4ecf-b588-c22ad19e2378",
                    "type": {
                        "namespace": "general",
                        "name": "participatedin"
                    },
                    "title": "Participated in",
                    "description": "Association 'participated in'",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                        "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                        "2a45205e-703c-43eb-a060-921bf7245f6a"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "34aeaca4-d424-43cd-a3b4-f2032d583280",
                    "type": {
                        "namespace": "ol",
                        "name": "subjectof"
                    },
                    "title": " is subject of",
                    "description": "(Person) is subject of ...",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "782b8d93-af16-423c-ae6d-8841ac60d752",
                    "type": {
                        "namespace": "ol",
                        "name": "sentence"
                    },
                    "title": "A sentence.",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "0d240f48-9347-46f7-a79e-b11ffdece2a8",
                        "55199d7d-b13e-4d7e-8e14-a50c7091942e",
                        "6519f480-7aaf-496c-825b-3b325d12bb85",
                        "8ae217a6-328c-40b9-8946-28c1d526748c",
                        "e652629a-70e0-458a-ae9f-02ca600d0360",
                        "0220af01-e45b-4d2c-b96f-bc16f058342d",
                        "21f5b00c-284a-4b45-bc37-355649bbb4f0",
                        "8538506a-3dba-4bb9-95b5-1e4ed9e00eb9",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "448c6ce4-d1db-4f21-9f5b-41f325fe4311",
                        "2a45205e-703c-43eb-a060-921bf7245f6a"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "9d40e6a5-5e00-47ec-9645-32fcfd276a86",
                    "type": {
                        "namespace": "ol",
                        "name": "diagnosis"
                    },
                    "title": "Diagnosis / Problem",
                    "description": "Problem/condition/diagnosis - Details about a single identified health condition, injury, disability or any other issue which impacts on the physical, mental and/or social well-being of an individual.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "58929d33-1c01-42f1-891c-f3e55c4d4fc4",
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                        "082583c3-08d9-4e6c-b8ac-52f5e74b54f3",
                        "80be96e6-58e5-4015-a851-312c9c2327bd",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "14908e47-923a-4c87-8d94-5881bf871cc1",
                        "f52ecac3-f1ab-46e4-8af8-3b8dcf68fe4d",
                        "1df921c4-9f92-4e6e-8b41-c6687930c00e"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "42c87ead-3038-4682-961c-5dd079071786",
                    "type": {
                        "namespace": "ol",
                        "name": "booking"
                    },
                    "title": "A booking.",
                    "description": "A booking (in jail or associated with an arrest).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "57d24585-7aec-43b7-b0f9-4162321366de",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "8ce79ba8-b498-460a-a1b3-325954bb6d4f",
                        "f7f01aa6-159a-435f-901b-44e62679bc51",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "24f9de48-5c58-4697-a68c-fe156bfa3c3c",
                        "55bd8483-ae7e-466f-88bd-84d67160bd3f",
                        "a5753546-902d-4eb0-8914-e014487138e4",
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                        "b9170d9b-8265-452c-b9e8-ebeab5f7556f"
                    ],
                    "propertyTags": {
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00": [
                            "timeline",
                            "eventdate"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "a5aa644f-767d-4b22-986d-1e7e88cf20f4",
                    "type": {
                        "namespace": "ol",
                        "name": "relatedto"
                    },
                    "title": "related to",
                    "description": "Association to indicate a bidirectional relationship",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "c5909ed6-5c9d-4016-b5ae-eba0008f4b2e"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "9912f936-b36c-458d-aa13-61c914df1ed2",
                    "type": {
                        "namespace": "ol",
                        "name": "worksat"
                    },
                    "title": "(Person) works at (agency/organization/...).",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "50ce2984-8e2c-4c15-82cc-99aac72ee628",
                    "type": {
                        "namespace": "ol",
                        "name": "assignedto"
                    },
                    "title": "Assigned to",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "10438ac7-5083-42c0-95b8-9ad5c4c6c87a",
                    "type": {
                        "namespace": "ol",
                        "name": "persondetailscriminaljustice"
                    },
                    "title": "Personal details (criminal justice)",
                    "description": "Personal details related to criminal justice.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "656ded15-4503-4623-977f-b1188a64cafa",
                        "cccdf498-4c90-4015-85c3-2a83536b705a",
                        "31854afe-a16e-4d64-99cd-6bf21efe468b",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "9bc02b4a-bc13-42a7-89a2-53c8500b2517",
                        "f393b40b-884b-45d6-a351-845cb31c46ba",
                        "f2c3c58f-e643-4990-9297-e0f009a67f86",
                        "56cd7bc4-3d81-4a81-a5e2-308c4678efc4",
                        "45aa6695-a7e7-46b6-96bd-782e6aa9ac13",
                        "2846a99b-daff-4f70-852a-091304ac49e9",
                        "cb92bd0b-0338-4f93-9936-e857e12be830"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "2998be89-0183-4470-a9a2-e1efa5ad7414",
                    "type": {
                        "namespace": "ol",
                        "name": "associatedwith"
                    },
                    "title": "Associated with",
                    "description": "Bi-directional association linking an arrest and offense.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "31cf5595-3fe9-4d3e-a9cf-39355a4b8cab",
                    "type": {
                        "namespace": "general",
                        "name": "person"
                    },
                    "title": "Person",
                    "description": "A person",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                    ],
                    "properties": [
                        "e9a0b4dc-5298-47c1-8837-20af172379a5",
                        "d0935a7e-efd3-4903-b673-0869ef527dea",
                        "7b038634-a0b4-4ce1-a04f-85d1775937aa",
                        "481f59e4-e146-4963-a837-4f4e514df8b7",
                        "d3f3f3de-dc1b-40da-9076-683ddbfeb4d8",
                        "1e6ff0f0-0545-4368-b878-677823459e57",
                        "6f61a510-98d6-4da3-9c40-a951dd6ddd39",
                        "2efc1030-5b57-42eb-9de2-80c81469305d",
                        "c270d705-3616-4abc-b16e-f891e264b784",
                        "f950d05a-f4f2-451b-8c6d-56e78bba8b42",
                        "1407ac70-ea63-4879-aca4-6722034f0cda",
                        "6ec154f8-a4a1-4df2-8c57-d98cbac1478e",
                        "96dc5643-d138-4b2e-b5f7-dcf23d12959d",
                        "45aa6695-a7e7-46b6-96bd-782e6aa9ac13",
                        "49adf7e7-1962-44c0-a683-4091366e03fd",
                        "5ea6e8d5-93bb-47cf-b054-9faaeb05fb27",
                        "8293b7f3-d89d-44f5-bec2-6397a4c5af8b",
                        "9b55f541-416c-4ab2-8d6e-b30e547eecb4",
                        "ac37e344-62da-4b50-b608-0618a923a92d",
                        "c7d2c503-651d-483f-8c17-72358bcfc5cc",
                        "cf4598e7-5bbe-49f7-8935-4b1a692f6111",
                        "d9a90e01-9670-46e8-b142-6d0c4871f633",
                        "f0a6a588-aee7-49a2-8f8e-e5209731da30",
                        "fa00bfdb-98ec-487a-b62f-f6614e4c921b",
                        "0111a451-0f30-4e53-8902-79b55f53ef1a",
                        "e823bc68-f7b8-40e0-9c77-076414e46467",
                        "314d2bfd-e50e-4965-b2eb-422742fa265c",
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                        "32eba813-7d20-4be1-bc1a-717f99917a5e",
                        "ae5bbe59-ab6d-43f9-8d69-386d8f85f818",
                        "603c441d-0ba9-4554-a3db-32d671e9a875",
                        "111fc894-0478-4ce5-923c-149f720442f7",
                        "692a2108-7f5d-40fa-a376-2341acea88b0",
                        "8237d146-bf3c-4652-a44a-5ecd9dabb2ad",
                        "d6c150b5-fff6-410f-a090-0973950bbe24",
                        "d005e6e8-a3ff-42e9-b5c8-1be5cdea1b27",
                        "70d2ff1c-2450-4a47-a954-a7641b7399ae"
                    ],
                    "propertyTags": {
                        "1407ac70-ea63-4879-aca4-6722034f0cda": [
                            "pie"
                        ],
                        "1e6ff0f0-0545-4368-b878-677823459e57": [
                            "eventdate"
                        ],
                        "6ec154f8-a4a1-4df2-8c57-d98cbac1478e": [
                            "pie"
                        ],
                        "7b038634-a0b4-4ce1-a04f-85d1775937aa": [
                            "breadcrumbs"
                        ],
                        "e9a0b4dc-5298-47c1-8837-20af172379a5": [
                            "breadcrumbs"
                        ],
                        "f950d05a-f4f2-451b-8c6d-56e78bba8b42": [
                            "pie"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "f32f0c3e-ed80-4155-89b6-0baaba21eaee",
                    "type": {
                        "namespace": "ol",
                        "name": "employee"
                    },
                    "title": "Employee",
                    "description": "The purpose of this entity is to identify the type of relationship the employee has to the employer rather than the nature of the work actually performed. \nFor medical personnel, there will be some kind of natural identifier, and the Employee role has a considerable number of specific attributes (jobClass, salary, hazardExposure). Employee may be a Resource for personnel management, to define the relationship between person and his/her employer.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "2a45205e-703c-43eb-a060-921bf7245f6a",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "e729bfaf-929e-498e-b953-d24656a168f6",
                        "aa3f9865-e882-4363-9cef-5145f787b114",
                        "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "a86eff53-3558-4cce-88e9-403c509c157a",
                    "type": {
                        "namespace": "ol",
                        "name": "postedby"
                    },
                    "title": "posted by",
                    "description": "(Bail / bond /...) is posted by (Person).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "b3562c95-33bc-4143-a970-0d173a3f35fc",
                    "type": {
                        "namespace": "ol",
                        "name": "policecad"
                    },
                    "title": "Police CAD",
                    "description": "A police CAD record/event.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "477db70c-ee49-41bf-97d2-c4eb0e1ffcc4",
                        "80be96e6-58e5-4015-a851-312c9c2327bd",
                        "b94361f0-7172-4556-a4f3-99a183bff03c",
                        "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                        "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                        "1e5bc2c5-3320-4ae0-b4eb-38edf65a4942",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                        "b9170d9b-8265-452c-b9e8-ebeab5f7556f",
                        "cb92bd0b-0338-4f93-9936-e857e12be830",
                        "0dde9277-25af-4c3d-980c-936ebb112c0d",
                        "2a45205e-703c-43eb-a060-921bf7245f6a",
                        "8636d42e-170a-4561-b962-5466fbe7af5e"
                    ],
                    "propertyTags": {
                        "b94361f0-7172-4556-a4f3-99a183bff03c": [
                            "timeline",
                            "eventdate"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "b8b95a13-3316-47db-b96c-97d1d5614fa2",
                    "type": {
                        "namespace": "ol",
                        "name": "emsunit"
                    },
                    "title": "EMS unit",
                    "description": "A unit for an Emergency Medical Service",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "05aa5c8b-7410-4316-8511-ec4ed7734e91",
                    "type": {
                        "namespace": "ol",
                        "name": "zone"
                    },
                    "title": "Zone (location)",
                    "description": "Zone (location)",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "58929d33-1c01-42f1-891c-f3e55c4d4fc4",
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "4c363a5f-9224-4857-b6b6-3289c6591898",
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "c8c1ef66-56da-43e1-a1b1-4b0a71d53968",
                    "type": {
                        "namespace": "ol",
                        "name": "bond"
                    },
                    "title": "Bond / bail",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "7c2953f9-babd-4ecf-9adf-fc20ff1f9fa9"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "ba032771-413f-4d07-9730-a8f8d2fb06e2",
                    "type": {
                        "namespace": "justice",
                        "name": "leadsto"
                    },
                    "title": "Leads To",
                    "description": "An association linking an offense to eventual court case, sentencing, or conviction outcomes.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "21f5b00c-284a-4b45-bc37-355649bbb4f0"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "5bf88cde-65bc-4865-a58b-920eec4c4028",
                    "type": {
                        "namespace": "ol",
                        "name": "involvedin"
                    },
                    "title": "Involved in",
                    "description": "(Person) is involved in (an event).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "1a99a9f7-c9fa-4cc9-9e29-1370c440f392",
                        "07488a0f-0096-4d4b-bdb2-fb50b3a03997",
                        "4e4d35e2-8dad-4af7-83f8-c28f983bffe2",
                        "58b549ca-62af-4e09-8624-4989f776d4d2",
                        "f7af5fb1-92de-495d-ac01-d3ab82081eb8",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "c5909ed6-5c9d-4016-b5ae-eba0008f4b2e",
                        "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                        "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                        "9e0ddd74-6881-44b3-a7d8-f98e9b45e02d"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "2e20c21e-6448-4a2d-bc57-9a5f2c45b589",
                    "type": {
                        "namespace": "ol",
                        "name": "contactinformation"
                    },
                    "title": "Contact Information",
                    "description": "A set of details about how to contact a person or an organization.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "2ff089c6-716d-44d9-8470-bfe9689eeacd",
                        "c2147279-64c8-412d-b8c5-056744785122",
                        "cebc61bf-9052-4e11-99af-3aa3113688a8",
                        "a7ecc119-6f7f-4603-b9ec-68b9141ea114",
                        "ee34032c-9082-4535-af42-8d568683324f",
                        "1b4b3973-6465-4483-a455-30be30bdc912",
                        "13b5c5a1-8335-4798-ba53-fc855b8f00ec",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "ff7c3f66-1904-481b-b7d7-56d8b331be00",
                        "e107ace7-8fad-40d0-9d2e-57cf47cbb839",
                        "7d4dbc62-4335-4515-9629-052c904a0ec0",
                        "705bfa28-7b10-47d5-931e-9f06aeb5644e",
                        "bdc1f760-1f87-45e4-a49e-c5a2dd0cdabf"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "abcc6784-0d63-4ffb-937e-b7c5edcc9785",
                    "type": {
                        "namespace": "ol",
                        "name": "behavior"
                    },
                    "title": "Behavioral Characteristics",
                    "description": "Descriptions of / characteristics of an individual's appearance and behavior during an encounter or incident",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "c2e01b3e-76a3-46ed-9617-0ab4cea5a883",
                        "db9aa49b-38a1-4852-bb90-dd077ac29495",
                        "4cd0f372-8bed-417d-8941-e815d22a18f3",
                        "e75d3b82-3d82-485d-b203-984c64b5dc5c",
                        "32b2d6fb-b291-4d8c-9787-a469a8ff2e6f",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "e40c2fdd-0a40-4069-877d-4c030799943e",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "cfef5c27-4456-4a2b-abf6-119dd4b65fda"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "22f294e5-f3f4-4317-8ff8-63528125c95f",
                    "type": {
                        "namespace": "ol",
                        "name": "chargedwith"
                    },
                    "title": "Charged With",
                    "description": "(Person) is charged with (A charge/offense).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "5d88ee83-3be4-4a04-9650-e7f1c48c3662",
                    "type": {
                        "namespace": "ol",
                        "name": "committedby"
                    },
                    "title": "Committed by",
                    "description": "(Person) is committed by (Authority) to jail.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "3e6d3232-6469-46ee-b437-aa0d0458a88e"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "3f417550-356f-4275-8a55-1d66ccb6642b",
                    "type": {
                        "namespace": "ol",
                        "name": "contactedvia"
                    },
                    "title": "Contacted via",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "6675a7e8-2159-41b1-9431-4053690fa3c9",
                        "c5a388d7-f9ed-4eb6-8dd6-633a4afcae6a",
                        "58a9d637-98e3-4727-b9c0-eb431c420936"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "892bce63-805e-4b45-b9b1-7eaea1c48f2f",
                    "type": {
                        "namespace": "ol",
                        "name": "jailstay"
                    },
                    "title": "Jail stay/record",
                    "description": "A jail stay/record.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "52722320-b04e-41ae-95b3-ec670256e0b9",
                        "94a8a61c-93cb-4284-82dd-06d36fb3fc81",
                        "d5cd8ae6-f0de-48fe-9139-89108adedc19",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "8d7889be-f23c-42a9-811b-f72a3671d1a1",
                        "eabab409-8ce7-499f-a4fb-d71356ada13b",
                        "d45d5c98-ef15-4c28-bb59-7367c293db58",
                        "14908e47-923a-4c87-8d94-5881bf871cc1",
                        "1901c0b0-f051-4660-8d6d-b5a040dc9dcb",
                        "cfea602e-9b53-4f10-8c2f-97173b77003d",
                        "92ecb196-23f1-4ab4-a8c3-084ccbcc151a",
                        "6e22d468-4977-4bec-8b87-9a9a9b10963e",
                        "e5471522-9ec6-46e1-8b91-56b7e9291605",
                        "1023b3ee-f2d4-4eea-84a5-824ce6fa1bc0",
                        "d16ed792-851b-42cb-9e82-246869355651",
                        "3e6d3232-6469-46ee-b437-aa0d0458a88e",
                        "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                        "d3450290-b346-4ce7-9bad-031c443d69de",
                        "e1e36ca8-84d0-4c52-9e8b-0de16a2e7943"
                    ],
                    "propertyTags": {
                        "3e6d3232-6469-46ee-b437-aa0d0458a88e": [
                            "timeline"
                        ],
                        "92ecb196-23f1-4ab4-a8c3-084ccbcc151a": [
                            "pie"
                        ],
                        "eabab409-8ce7-499f-a4fb-d71356ada13b": [
                            "eventdate"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "65416b16-626c-495a-9904-a22a4d113276",
                    "type": {
                        "namespace": "ol",
                        "name": "collectedby"
                    },
                    "title": "Collected By",
                    "description": "Association between the person collecting the data and the data or form itself",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "c70e5c06-412d-4bba-b66e-843dbb980e6d",
                        "6675a7e8-2159-41b1-9431-4053690fa3c9"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "9314b075-ac0f-4659-9fed-9be21931ada1",
                    "type": {
                        "namespace": "ol",
                        "name": "disposition"
                    },
                    "title": "A disposition, solution, result.",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "b4537358-a051-417a-832a-045d59c13b7f",
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "697c12ec-fec3-4f6e-b603-89d48cbdf4fe",
                    "type": {
                        "namespace": "ol",
                        "name": "provider"
                    },
                    "title": "Provider (Health Care)",
                    "description": "Health Care Provider",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "70d2ff1c-2450-4a47-a954-a7641b7399ae",
                        "a46f979e-250d-49ab-b974-f41b4796fd4f",
                        "2a45205e-703c-43eb-a060-921bf7245f6a",
                        "dfe90a24-41ec-4b7d-8051-8bcbc81dc630",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "366eacb7-b3a9-464b-896e-0729baf97eb6",
                        "a697458d-6060-46c8-a677-4972530a4d41",
                        "54fa6acb-bd3e-4849-85b7-4eadaf33e112"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "34789bed-597c-47bd-953a-4ec859b455bb",
                    "type": {
                        "namespace": "o",
                        "name": "facility"
                    },
                    "title": "Facility or service delivery setting",
                    "description": "A facility, including a jail, hospital, clinic, etc.; can also be used to describe another service setting in which a health care encounter occurs.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                        "2956a11f-b787-4fe9-b396-4f00b1bfecd8",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "09ebda14-780d-489d-89e2-640f1b67c85c",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "91289250-d7aa-4cef-8069-02f0956a1ffa",
                        "a7ecc119-6f7f-4603-b9ec-68b9141ea114",
                        "25431c60-6c26-4210-a422-569c5226ba7e",
                        "b66f28db-765e-426f-95bd-876a25b6bea4"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "edaca5dc-9255-460a-8013-e31ace5723db",
                    "type": {
                        "namespace": "ol",
                        "name": "arrestedby"
                    },
                    "title": "Arrested by",
                    "description": "(Person) is arrested by (Authority).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "88f6294a-8b73-45e3-a0ec-8ebfb75a930e",
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "6c601883-abea-4b45-9f1a-e0a316850ddb",
                    "type": {
                        "namespace": "ol",
                        "name": "releasedto"
                    },
                    "title": "Released to",
                    "description": "Association linking a person with whom they are released to (as in, from jail, courts, etc.)",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "136eee13-0113-4b91-a804-6154824daa49",
                    "type": {
                        "namespace": "ol",
                        "name": "location"
                    },
                    "title": "Location or address",
                    "description": "Location or address",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "25431c60-6c26-4210-a422-569c5226ba7e",
                        "3677e8ea-5da9-41f3-8b56-006548564eac",
                        "376f727c-5329-4c92-87c9-a3b4d177ee3c",
                        "64fb51c4-a1f1-4a52-aeda-73b7ff071c54",
                        "6a85d1e1-fda5-4c9c-9e2e-2dda4ed8d3d1",
                        "e96f4905-e323-47b6-be43-2a356fd82e08",
                        "132820b9-6f20-40c8-945f-9ca2ec45e233",
                        "06083695-aebe-4a56-9b98-da6013e93a5e",
                        "e8f9026a-2494-4749-84bb-1499cb7f215c",
                        "1624fc2d-d221-48d2-a7b4-ee94f80a515b",
                        "a7ecc119-6f7f-4603-b9ec-68b9141ea114",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "4dfd7e4f-207a-4591-8cf3-2e5c9c7d0e53",
                        "2aaffa14-e540-4d64-b087-56fe5bef0ba3",
                        "90d8c6f6-385d-4064-a582-ad95a0ccc040",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "afd4df97-11ee-4c9d-85e0-58d33ed4d840",
                        "7c2ddf7e-81da-4fe7-91d8-4d2e1f6c5e22",
                        "28d661b8-a45a-41b6-aec4-ed9988fa28dc",
                        "8a8a4b3a-2530-40ab-afb4-55db1641f6c5",
                        "e558a4e8-db25-478e-8f22-c5c230c27383",
                        "3e2226e6-b45e-40e3-9952-d52f78a4ca30",
                        "12ee5b7d-42a9-4a73-a41d-6e6f70fecb83"
                    ],
                    "propertyTags": {
                        "25431c60-6c26-4210-a422-569c5226ba7e": [
                            "breadcrumbs"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "d5982da5-8f13-40d9-8b43-c4e2926e1395",
                    "type": {
                        "namespace": "ol",
                        "name": "program"
                    },
                    "title": "Program",
                    "description": "A program.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "80be96e6-58e5-4015-a851-312c9c2327bd",
                        "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                        "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "df6071bd-a585-47bb-8536-2a6fd5cb7adf",
                    "type": {
                        "namespace": "medical",
                        "name": "History"
                    },
                    "title": "Medical History",
                    "description": "Medical History",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "ef65c640-9aed-4faf-8c7e-5db1866efaca"
                    ],
                    "properties": [
                        "0fb81e8a-9aa7-4a6f-ba35-048167f8597b",
                        "200e0bbb-bf70-459d-8fa8-516d73383703",
                        "2d975f4a-a244-4651-909c-3f4eb7ec27cc",
                        "49b25d0a-e874-4308-9013-db5d178638da",
                        "4e46fdd8-27ce-4f7e-bc0f-ddf77700904c",
                        "5dc1af1e-31d6-4668-9f0d-d350c31a3229",
                        "631c1f02-3991-4644-a9d5-28aa16103ab9",
                        "adf443f7-eae6-4276-8f4b-55cc5b705880",
                        "c16ab352-3099-4579-b900-40d54fec44c6",
                        "c5ef3188-2d74-476e-8fca-6b19fbd1e84d",
                        "d4007838-e900-4b7d-a306-139114b28685",
                        "d41f3196-d011-4f79-b211-1e93341874df",
                        "d638bea4-ee97-4c24-860d-4addc02f79cb",
                        "e0fda4d0-b19b-422c-a702-d30d9e89d024",
                        "e391a565-cb3c-4076-abfb-6817ed2ff5b0",
                        "ed577cc3-f627-43d8-b17a-39d34480570d",
                        "ef65c640-9aed-4faf-8c7e-5db1866efaca",
                        "f046b68a-cc58-4e81-a22a-177c3eb2f78f",
                        "f2c3c58f-e643-4990-9297-e0f009a67f86",
                        "fe48224c-751f-4dfb-afd5-d856c27705a3"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "14c4ec7c-af16-4a55-991c-46d574f0ff6c",
                    "type": {
                        "namespace": "ol",
                        "name": "is"
                    },
                    "title": "Is (person to patient, suspect, employee etc.) (-d)",
                    "description": "\"Is\" association connecting the general and more specific person-types (including employees).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "481f59e4-e146-4963-a837-4f4e514df8b7",
                        "bf828c73-2ea9-4d4e-be40-ae9702e64b21",
                        "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "5f122ec5-f8cd-4618-8bfa-3f387141616c",
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "02fb0106-41fb-446e-a055-4aa3c7e23acc",
                    "type": {
                        "namespace": "ol",
                        "name": "provided"
                    },
                    "title": "Provided (information, supports, referrals)",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "6675a7e8-2159-41b1-9431-4053690fa3c9",
                        "ce275f55-a4e4-40a2-9825-0fa9ae032b9a"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "a323b0b9-a248-447c-87bc-29cfb2b78d58",
                    "type": {
                        "namespace": "ol",
                        "name": "programoutcome"
                    },
                    "title": "Program outcome",
                    "description": "A program's outcome.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "f2787ef1-8a9d-4297-9189-e78b12b76daf",
                        "58929d33-1c01-42f1-891c-f3e55c4d4fc4",
                        "6675a7e8-2159-41b1-9431-4053690fa3c9",
                        "98ea0781-13fd-4bef-ab3d-893e1757dfe5",
                        "52722320-b04e-41ae-95b3-ec670256e0b9",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "8be727f4-adcd-486c-b860-918595908c9f"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "33f389fe-9ff6-41eb-b7f9-aa1aad545014",
                    "type": {
                        "namespace": "ol",
                        "name": "offense"
                    },
                    "title": "Offense.",
                    "description": "A law enforcement offense",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "80be96e6-58e5-4015-a851-312c9c2327bd",
                        "b94361f0-7172-4556-a4f3-99a183bff03c",
                        "c228a9c8-e0f3-4bb0-8b09-78b2c6162caa",
                        "bc7869bd-f646-4e0c-89ad-ae77cdadb3ef",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "29e89dab-2d08-4d19-922f-18b611cd12f1",
                        "98795356-940f-42c2-9929-383931cac3bf",
                        "e1fc2e45-eb5f-42db-b906-c6eaf2a4fb53",
                        "c79cd283-bfa4-4393-aa82-efb0d0e63a17",
                        "1130598d-991c-43d5-911b-a824d9af0fb7",
                        "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                        "c97555a0-ed79-4944-a000-ab961da3ab48",
                        "d673e32c-6e67-4885-8e30-47e98f6229f2",
                        "729da80b-be28-496d-b6ce-bb118024408e",
                        "24091b3a-9093-4db3-a540-9d83f4f76e01",
                        "fee00dc4-6e57-421a-8414-18c956ee192f",
                        "6e43eb85-276b-4855-b96c-24f701a58389",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "1e5bc2c5-3320-4ae0-b4eb-38edf65a4942",
                        "351e51ad-9f7e-4bd5-a237-84b16e1e1ce8",
                        "39e3e0d1-d5c4-4422-a88d-e5e442e8a667",
                        "12a03e63-d114-4593-90d1-bb8bdb68e14b",
                        "6f995298-c6b7-4f9c-b9a2-81d873a7c692",
                        "a2bfb6fb-c1ac-4343-9aff-87ad0f910a9e",
                        "cdb38749-8e44-440b-87db-544ac510034c"
                    ],
                    "propertyTags": {
                        "6e43eb85-276b-4855-b96c-24f701a58389": [
                            "pie"
                        ],
                        "b94361f0-7172-4556-a4f3-99a183bff03c": [
                            "eventdate",
                            "timeline"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "589c5599-895c-497c-8864-3488d9ff4402",
                    "type": {
                        "namespace": "ol",
                        "name": "clearedby"
                    },
                    "title": "Cleared by",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "76677f67-c0bf-4db9-bc9c-c050828ba477",
                    "type": {
                        "namespace": "ol",
                        "name": "sentencedwith"
                    },
                    "title": "Sentenced With",
                    "description": "(Person) sentenced with (Sentence).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "b83efabb-b89a-4beb-9a84-190da4adc990",
                    "type": {
                        "namespace": "ol",
                        "name": "persondetails"
                    },
                    "title": "Person Details",
                    "description": "Mutable (changeable) characteristics of a person",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "49adf7e7-1962-44c0-a683-4091366e03fd",
                        "d8d5cd4c-0262-4dbe-b446-97dc913a4b3b",
                        "8d52f9b7-fe9d-4d09-aec4-bbbfee74f714",
                        "b4755499-5920-4e52-8774-20d70e812504",
                        "e823bc68-f7b8-40e0-9c77-076414e46467",
                        "fafbf5d2-d681-4468-b7e3-3472c661b042",
                        "0111a451-0f30-4e53-8902-79b55f53ef1a",
                        "915df70e-ebe3-4b59-9d4e-59c0609a5577",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "5538ee80-0a0d-489e-ad0c-1c815bd81805",
                        "57d24585-7aec-43b7-b0f9-4162321366de",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "9b55f541-416c-4ab2-8d6e-b30e547eecb4",
                        "f0a6a588-aee7-49a2-8f8e-e5209731da30",
                        "8293b7f3-d89d-44f5-bec2-6397a4c5af8b",
                        "ac37e344-62da-4b50-b608-0618a923a92d",
                        "d9c0caf4-afd6-43e7-9761-96aad916cd86",
                        "065a9db9-6fcd-400e-ac26-a969521c386a",
                        "f6f98745-c2b0-468f-89a6-7b57a69f104b",
                        "82f6ec6a-60ff-42d9-8abf-52086a2f1232",
                        "8237d146-bf3c-4652-a44a-5ecd9dabb2ad",
                        "62d542e1-a451-4d0e-b8f8-1483ef3970c2",
                        "c929ca9a-f03f-468d-9627-923f8571b177",
                        "f28cc0f3-1065-42df-b43f-d70b313a25de",
                        "f0373614-c607-43b2-99b0-1cd32ff4f921",
                        "b6e2d7ad-8f54-488b-ba56-0b5fe64696f3",
                        "5bf7f587-c75c-46f1-9935-edb490e8b30e",
                        "7b957683-ba64-4226-83a0-fc12de371278",
                        "ac359796-a98e-43c3-bbcc-e53e03aa5186",
                        "1d798a9e-3914-4fa9-b011-53459b198301",
                        "658d4505-b295-4f4a-86aa-a9e50d086ee1",
                        "2531472b-8f73-47d1-885b-1dd4018aff48",
                        "717c1496-451f-4f39-abf9-b64a8c8f85b7",
                        "cf068e11-5ed4-4aee-8363-f52e9969c486",
                        "50ece93c-a78e-4295-8f75-7888a55c6c97"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "503bc786-437c-4591-9e4e-64e7d4d1286a",
                    "type": {
                        "namespace": "ol",
                        "name": "relative"
                    },
                    "title": "A relative (eg. brother, sister), to be used when the name is unknown.",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "dfe90a24-41ec-4b7d-8051-8bcbc81dc630"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "4bae15fb-4e1b-48ed-bf87-476df148b1c4",
                    "type": {
                        "namespace": "ol",
                        "name": "kinto"
                    },
                    "title": "Kin to",
                    "description": "(Person) is kin to (Person).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "c77f715a-85e3-4bb4-a25f-850e568dd068",
                    "type": {
                        "namespace": "ol",
                        "name": "suicidalideation"
                    },
                    "title": "Suicidal Ideation",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "ed3de637-df5d-47cf-bb91-9a8ee346a6ab",
                        "28d5e08f-0d92-4c25-9f78-191d0632a11d",
                        "174abcbc-b2eb-4de3-b001-0e70054b807f",
                        "ab5f6d19-e395-4379-984d-25ee7850a6b1",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "d6ac78c5-220d-43a3-9c2e-97ac782cfc3e",
                        "0ec5a29a-23b4-4634-8e9a-047f345beea2",
                        "15eacd55-8f34-4af4-a464-9b9ea5420929",
                        "d5dd02a7-d4c4-497a-8301-f95430defa52",
                        "aa2bb9ea-8f1c-4a44-92bd-0358c9d3a4e1",
                        "5f9b4152-3c4b-4201-a5db-e6c24504307a",
                        "2f96922e-dcaf-42f1-953a-ad650f2282b1",
                        "e671a273-d540-4f4e-a428-ce7f0b2f7129"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "7aa9e000-0585-4dff-8512-aa35b329379a",
                    "type": {
                        "namespace": "ol",
                        "name": "has"
                    },
                    "title": "Has (details, ID, etc)",
                    "description": "Has association",
                    "schemas": [
                        {
                            "namespace": "cafe",
                            "name": "chronicle"
                        },
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                        "f43dccfe-7dbe-425a-a2c0-eb104daba964",
                        "6675a7e8-2159-41b1-9431-4053690fa3c9"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "27d58f4f-0c0c-47c5-9d27-cb25e9a98bbf",
                    "type": {
                        "namespace": "ol",
                        "name": "weapon"
                    },
                    "title": "Weapon",
                    "description": "Description of weapons involved in various events.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "c922e41e-8444-4cf2-82d1-99e62f94e479",
                        "43ad7228-fc0e-4b59-99c4-20d5ffc17536",
                        "2a9c1cae-e3a8-437f-9fc3-ecfb3d43e3bf"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "f5942bd5-685c-4a37-be0a-d55a3c952aa4",
                    "type": {
                        "namespace": "ol",
                        "name": "chargedby"
                    },
                    "title": "charged by",
                    "description": "(Person) is charged by (Authority).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "6ddd6161-c23c-4d25-9bef-ee283270d443",
                    "type": {
                        "namespace": "ol",
                        "name": "medicaltest"
                    },
                    "title": "Medical Test",
                    "description": "Information on a medical test or screening.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "f9ac41fb-897e-4d0f-ac71-dac7eddc56fa",
                        "8e65eca6-a3d1-4c05-885f-cc3156257139",
                        "d9d04245-892d-4364-b3f0-e33b5eb3c28e",
                        "80be96e6-58e5-4015-a851-312c9c2327bd",
                        "621051c6-09fd-4982-8f96-07833f75aaa8"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "a094e89f-3b4f-4e98-9d2c-12e604ae9d6a",
                    "type": {
                        "namespace": "ol",
                        "name": "releasedby"
                    },
                    "title": "Released by",
                    "description": "Links together an officer/agency with someone they are releasing. (Person) released by (Authority).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "ecc09e28-0761-4ed0-9d9e-b1c1f883aed6",
                    "type": {
                        "namespace": "ol",
                        "name": "locatedat"
                    },
                    "title": "Located At",
                    "description": "The location of an event, organization, or person",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "6675a7e8-2159-41b1-9431-4053690fa3c9",
                        "2a45205e-703c-43eb-a060-921bf7245f6a"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "a404cc39-0259-4c8e-91b5-8def2071d997",
                    "type": {
                        "namespace": "ol",
                        "name": "transportedby"
                    },
                    "title": "Transported by",
                    "description": "Links together an officer/agency with someone they are transporting.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "436da824-c9b5-4a6d-b121-72c77be98ac8",
                    "type": {
                        "namespace": "ol",
                        "name": "organization"
                    },
                    "title": "Organization",
                    "description": "An organization is an entity comprising multiple people, such as an institution or an association, that has a collective goal and is linked to an external environment.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                        "80be96e6-58e5-4015-a851-312c9c2327bd",
                        "ebe830b0-2ce9-4f84-9c11-3eaba875ee0d",
                        "0dde9277-25af-4c3d-980c-936ebb112c0d",
                        "24cd6477-01c5-4f25-8453-904d8a5ce84d",
                        "db5e822d-9255-43a8-83a3-0f178da477c9",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "7f9a6ef4-c75e-4c41-a7dd-1ce49c131040"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "39942a31-6ec6-4395-a491-569309a2b981",
                    "type": {
                        "namespace": "ol",
                        "name": "notification"
                    },
                    "title": "Notification",
                    "description": "An alert or notification",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "80be96e6-58e5-4015-a851-312c9c2327bd",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "a2bfb6fb-c1ac-4343-9aff-87ad0f910a9e"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "3de26710-64a1-4a3f-9c7e-61f9bc9d3dae",
                    "type": {
                        "namespace": "ol",
                        "name": "screenedwith"
                    },
                    "title": "Screened With / Assessed Using",
                    "description": "Association between a person and a screening tool, assessment tool, or the results of said assessment. (Links patient to medical assessments carried out in that setting, at the time of visit/evaluation).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "6675a7e8-2159-41b1-9431-4053690fa3c9",
                        "8e65eca6-a3d1-4c05-885f-cc3156257139"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "cf9b4d36-6f1a-4e6f-94f0-6458054fc567",
                    "type": {
                        "namespace": "ol",
                        "name": "contactinfogiven"
                    },
                    "title": "(Contact information) given to (entity)",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "564b21e8-3132-4eb5-8124-65f54ceee5c2",
                    "type": {
                        "namespace": "ol",
                        "name": "receivedby"
                    },
                    "title": "Received by",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "fbadb396-0497-413c-83ee-89e7370d7e4d",
                    "type": {
                        "namespace": "ol",
                        "name": "medicaltestresult"
                    },
                    "title": "Medical Test Results",
                    "description": "The results of a medical test (e.g., this entity can contain laboratory results, diagnostic test results, pathology, urinalysis, phlebotomy, other screenings, etc).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                        "80be96e6-58e5-4015-a851-312c9c2327bd",
                        "6e21f4c9-13e9-452e-8f18-d116276aa58d",
                        "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                        "fee00dc4-6e57-421a-8414-18c956ee192f",
                        "f9ac41fb-897e-4d0f-ac71-dac7eddc56fa",
                        "621051c6-09fd-4982-8f96-07833f75aaa8",
                        "4167e9dd-ae6f-49d6-a9ea-c38bddeb8901",
                        "0abf30c6-4da9-4ffa-9dbf-02ca1b2e0bb6",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "40f687c8-c6e5-47c0-8459-e1b3b06d19fd",
                    "type": {
                        "namespace": "ol",
                        "name": "reported"
                    },
                    "title": "Reported",
                    "description": "Association linking a person or patient with various conditions, issues, and concerns they reported (medical history, medical conditions, allergies, potential barriers to treatment, etc.). Self-report, not diagnosis.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "6675a7e8-2159-41b1-9431-4053690fa3c9",
                        "cf0c7078-c2d3-4cba-ad3e-af5e613c983c"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "5003d581-0cc3-4d05-b4e2-a62f56d28bb9",
                    "type": {
                        "namespace": "ol",
                        "name": "oflength"
                    },
                    "title": "Length of",
                    "description": "(Something) is of length (Length entity).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "061a7746-158b-4f1c-b1c3-82ee9aa95aad",
                    "type": {
                        "namespace": "ol",
                        "name": "searchedby"
                    },
                    "title": "Searched by",
                    "description": "(Person) is searched by (Authority).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "a8933914-d849-4b90-ab0f-eaa1525c4ec8",
                    "type": {
                        "namespace": "ol",
                        "name": "arrest"
                    },
                    "title": "Arrest",
                    "description": "An arrest.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "88f6294a-8b73-45e3-a0ec-8ebfb75a930e",
                        "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                        "8388b7cc-19eb-411f-9af1-57999eeb27e0",
                        "80c3ffc7-5a8a-4547-8d60-dfb0b06e92b4",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "fc486634-adbf-4108-aa0b-65225cad5618",
                        "b94361f0-7172-4556-a4f3-99a183bff03c",
                        "4cd3b524-8c33-4efe-8bbc-09738a06facf",
                        "28bf3e65-3497-4fe3-a080-b758caf65053",
                        "b9170d9b-8265-452c-b9e8-ebeab5f7556f",
                        "cf89d88b-138f-4533-94e8-880a6674541b",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7"
                    ],
                    "propertyTags": {
                        "88f6294a-8b73-45e3-a0ec-8ebfb75a930e": [
                            "timeline",
                            "eventdate"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "e33ad963-60fd-489d-8cdb-9faca522e18a",
                    "type": {
                        "namespace": "ol",
                        "name": "agency"
                    },
                    "title": "An agency",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "f9010dd8-ce62-4d2f-a6a7-e4cf32ec6940",
                        "7acb8cda-34bc-4fbc-b320-7481debfa294",
                        "84b850d8-4fb8-4507-b0f6-0b0466d39c0a",
                        "80be96e6-58e5-4015-a851-312c9c2327bd"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "aa29d6c3-1cb9-445f-b722-07f6a40efa31",
                    "type": {
                        "namespace": "ol",
                        "name": "resultsin"
                    },
                    "title": "results in",
                    "description": "An association which describes that one entity results in another. (Event) results in (Event).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "fb30b015-690d-4310-b9ec-30596cbaf85d",
                    "type": {
                        "namespace": "ol",
                        "name": "dispatch"
                    },
                    "title": "Dispatch",
                    "description": "A dispatch (police, medical,...).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "e404a3f0-3e98-412f-b146-52aa80ec98c2",
                        "736818e8-0ad9-4c83-8b53-3e00005fed2b",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "f52ecac3-f1ab-46e4-8af8-3b8dcf68fe4d",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "0b68c2cd-4c03-43e6-b1c8-fe6187b0eae3",
                        "c97555a0-ed79-4944-a000-ab961da3ab48",
                        "6675a7e8-2159-41b1-9431-4053690fa3c9",
                        "9f3bc9a7-cb01-4cb5-9d62-628912e7e637",
                        "b9170d9b-8265-452c-b9e8-ebeab5f7556f",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "7674c064-c8fb-42b0-a1ca-c7cab0e0829d",
                        "6e43eb85-276b-4855-b96c-24f701a58389",
                        "7ac3c170-7088-4765-bd23-6ec1d02f2d5f",
                        "1256d3f4-2a83-44d0-8b1d-389803b28314",
                        "4d5db4fe-a0c8-45f8-af6d-cd7cd4cab86c",
                        "7064b696-d3ac-4ca7-9340-8e9db996b36e",
                        "13c7f654-085d-4cd0-9db2-674df9c69dda",
                        "0f10a3f1-a020-4367-a261-750d979abfca",
                        "e5721ba0-f64e-4c19-8e7f-fbb016555a65",
                        "86b4bbbf-6006-4863-9f6b-7b1b2f707837",
                        "07c288b6-3425-4d83-bf38-60989de8f5e3",
                        "5b7a2aba-9d5a-4026-8a9a-319f00a8e4ac",
                        "b6dec135-54d1-493e-9202-8d72070ddce8",
                        "8c3baea2-1ab0-4eaf-be35-12d0ff7313da",
                        "fcb28385-93c7-48d8-86b6-f622ee670f1d",
                        "035c5134-52ba-4682-8391-60939c9b79ef",
                        "4101ac47-9d56-4910-aace-a99f058324a0",
                        "cc5dcf55-98e9-452f-955b-4139b165b772",
                        "12e40b86-c848-4f9e-bb5a-e9632835565b",
                        "300079e6-aaca-499d-8116-ae6812aaac44",
                        "d466fca6-1677-409b-98bd-01d96c519368",
                        "200a4b05-655f-419a-ba00-648747cb4b11",
                        "80be96e6-58e5-4015-a851-312c9c2327bd"
                    ],
                    "propertyTags": {
                        "9f3bc9a7-cb01-4cb5-9d62-628912e7e637": [
                            "timeline",
                            "eventdate"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "5dbdbd4c-991a-476d-b235-0ca0c90c33f4",
                    "type": {
                        "namespace": "ol",
                        "name": "eligiblefor"
                    },
                    "title": "Eligible For (e.g., insurance coverage, government program)",
                    "description": "Association between person and program they are eligible for or claim to be eligible for (whether or not they are enrolled).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "6675a7e8-2159-41b1-9431-4053690fa3c9",
                        "bf4f1c24-65f5-47c7-88d7-48aec1e4e591",
                        "c8460593-7a12-450a-80ad-bc8e97018a0d"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "8b626558-cf1d-495d-a0f5-53bbb59bc25e",
                    "type": {
                        "namespace": "ol",
                        "name": "jailstaylength"
                    },
                    "title": "Jail stay length",
                    "description": "Details of a jailstay with respect to its duration.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "9bcfd1a5-804c-4bdd-a547-ad4494be4e1f",
                        "6557a4f5-1193-4a0f-a1d1-54f23c33722a",
                        "26990519-ac4e-4dc9-9559-f9b500a728da",
                        "6e22d468-4977-4bec-8b87-9a9a9b10963e",
                        "ffcf42d0-4134-4430-9f8f-d76cca10b9f2",
                        "b730b3b3-d442-45a1-8d81-c082b1dd3a45",
                        "d146903f-9196-40b8-90ce-3a0e8e4557a5",
                        "a866612a-2316-4b18-88c1-e19ce9a01f01",
                        "eabab409-8ce7-499f-a4fb-d71356ada13b",
                        "f3b41e19-d1e9-4004-8763-b514a93983d2",
                        "d15ace9d-fa1c-4db6-99fe-b009778cc781",
                        "d2b300d8-3f54-4dbd-8800-4838f82f522f"
                    ],
                    "propertyTags": {
                        "eabab409-8ce7-499f-a4fb-d71356ada13b": [
                            "timeline",
                            "eventdate"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "00e752c4-b042-45ae-85c1-c5bed5c23e03",
                    "type": {
                        "namespace": "ol",
                        "name": "temporaryrelease"
                    },
                    "title": "Temporary Release",
                    "description": "A temporary release from jail or prison.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "92ecb196-23f1-4ab4-a8c3-084ccbcc151a",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                        "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "2ace27da-9f86-48f7-80bd-f48556092b27",
                    "type": {
                        "namespace": "ol",
                        "name": "includes"
                    },
                    "title": "Includes / Contains",
                    "description": "Association between an assessment and the information it collects (e.g., a lab test and the results it includes. Results Include, Form Contains)",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "6675a7e8-2159-41b1-9431-4053690fa3c9"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "d038e8f6-5910-46b2-88e4-b028a5120a46",
                    "type": {
                        "namespace": "ol",
                        "name": "charge"
                    },
                    "title": "A charge",
                    "description": "A law enforcement charge.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "6e43eb85-276b-4855-b96c-24f701a58389",
                        "f957cc01-1969-46b8-bd76-b8006142779b",
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                        "bc7869bd-f646-4e0c-89ad-ae77cdadb3ef",
                        "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "7ed19ef2-a1ed-48e3-b347-18a885914bee",
                        "1956bf5b-a597-4ba4-bcef-5b286ac83339",
                        "fee00dc4-6e57-421a-8414-18c956ee192f",
                        "1e5bc2c5-3320-4ae0-b4eb-38edf65a4942",
                        "351e51ad-9f7e-4bd5-a237-84b16e1e1ce8",
                        "39e3e0d1-d5c4-4422-a88d-e5e442e8a667",
                        "12a03e63-d114-4593-90d1-bb8bdb68e14b",
                        "c5e1a98e-bc92-4858-8d0f-2bcb9d59ec70",
                        "b8ec37cc-f27e-49d9-acb1-3e058e62f4e2",
                        "8404751e-014c-4202-ac10-ba7a9276e874",
                        "e41f8c94-5c15-4368-bf1c-08bcd2cccd70",
                        "cc9ddead-9e6f-4b3b-88a9-8aab20726045",
                        "42534a26-578b-4958-a7a8-3475e1597623",
                        "2a45205e-703c-43eb-a060-921bf7245f6a",
                        "80be96e6-58e5-4015-a851-312c9c2327bd",
                        "c2629909-32d0-4a23-8bab-fcdf639ba19c",
                        "cdb38749-8e44-440b-87db-544ac510034c",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "58929d33-1c01-42f1-891c-f3e55c4d4fc4"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "26b6b5e0-7341-4941-b34a-3ee7b955335b",
                    "type": {
                        "namespace": "ol",
                        "name": "insurance"
                    },
                    "title": "Insurance (plan or coverage information)",
                    "description": "Insurance plan (e.g., an individual's coverage details). Use Person -> eligiblefor -> insurance for specific insurance benefits.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "24cd6477-01c5-4f25-8453-904d8a5ce84d",
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "cb71e270-a273-4a72-9754-e022ea2a5fb0",
                        "71075611-5217-409a-be98-e9e3ef21f44d",
                        "14908e47-923a-4c87-8d94-5881bf871cc1",
                        "e56f3d9d-7381-434a-998d-4d310f850cb0",
                        "dc1fe921-ffd4-4d1b-a094-9fa3d25d4943",
                        "36bc33ef-1ae0-40f1-91f2-6e1c7a3eadbb",
                        "76e4aedc-5342-4886-8612-0a831ec7b392",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "a7ecc119-6f7f-4603-b9ec-68b9141ea114",
                        "c87cdbb7-c4bd-4c71-b0ec-70b1ed69e00d",
                        "e030091b-4447-4bdc-804f-430fb664978b",
                        "369051b0-1f54-4651-8c8c-4017f3882d0b",
                        "2543aa27-0f71-4346-bf62-9049a49ea014",
                        "e8174f66-4b80-4f8c-bcd3-2924d5ccd6d7",
                        "faf3c011-b386-4c51-a1bb-4bad27b4083f"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "d9ccdae1-db25-40ad-9e9d-b2144fedb4bd",
                    "type": {
                        "namespace": "ol",
                        "name": "partof"
                    },
                    "title": "Part of",
                    "description": "\"Part of\" association. Use case #1: information collected as part of encounter. Use case #2: temporary release which is part of a jail term. Use case #3: warrant which is part of a sentence.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "c5909ed6-5c9d-4016-b5ae-eba0008f4b2e",
                        "6675a7e8-2159-41b1-9431-4053690fa3c9"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "4f4df940-af84-48fc-ab28-990843e10349",
                    "type": {
                        "namespace": "ol",
                        "name": "assessedby"
                    },
                    "title": "Assessed By",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "6675a7e8-2159-41b1-9431-4053690fa3c9"
                    ],
                    "properties": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "6675a7e8-2159-41b1-9431-4053690fa3c9"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "26b30a9c-4ff0-4b44-a26a-19c3195a6b16",
                    "type": {
                        "namespace": "ol",
                        "name": "bondset"
                    },
                    "title": "Bondset for",
                    "description": "(Bond) is set for a (Jailstay).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                }
            ]
        },
        {
            "fqn": {
                "namespace": "ol",
                "name": "deprecated"
            },
            "propertyTypes": [
                {
                    "id": "ba457ac1-37ec-4866-b273-a4d3a09e6992",
                    "type": {
                        "namespace": "cfs",
                        "name": "class"
                    },
                    "title": "Class (-d)",
                    "description": "CFS Type Class",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "Int32",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "d24888b1-cbbc-4557-b928-20c16ad744cf",
                    "type": {
                        "namespace": "date",
                        "name": "timeOfDay"
                    },
                    "title": "Time Of Day (-d)",
                    "description": "Time Of Day",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "TimeOfDay",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "73224904-f769-47c6-85f0-d70c519b54cd",
                    "type": {
                        "namespace": "general",
                        "name": "StringID"
                    },
                    "title": "Id (-d)",
                    "description": "A string that uniquely identifies an instance of an entity or association.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "adf443f7-eae6-4276-8f4b-55cc5b705880",
                    "type": {
                        "namespace": "date",
                        "name": "CompletedDateTime"
                    },
                    "title": "Completed DateTime (-d)",
                    "description": "Completed DateTime",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "3cfead4f-09ce-4ef8-bd03-a70dce298ac5",
                    "type": {
                        "namespace": "date",
                        "name": "commit"
                    },
                    "title": "Commit date (-d)",
                    "description": "Commit date",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "type": {
                        "namespace": "general",
                        "name": "stringid"
                    },
                    "title": "Id (-d)",
                    "description": "A string that uniquely identifies an instance of an entity or association.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "9cc5f76d-b17a-4f14-95d2-b6aed679f869",
                    "type": {
                        "namespace": "place",
                        "name": "Location"
                    },
                    "title": "Location (-d)",
                    "description": "location",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "16978972-0c8c-4d3d-83fc-6ba70840ed85",
                    "type": {
                        "namespace": "health",
                        "name": "admissiondate"
                    },
                    "title": "Admission date (health) (-d)",
                    "description": "Date of admission - deprecated",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c3a8ab49-bb93-4591-a1b4-b952cf9502bd",
                    "type": {
                        "namespace": "event",
                        "name": "ArrestWarrantNumber"
                    },
                    "title": "Warrant Number (-d)",
                    "description": "Warrant number",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "27b1570f-937c-4961-b429-3b21f06e120b",
                    "type": {
                        "namespace": "j",
                        "name": "ArrestLocation"
                    },
                    "title": "Arrest Location (-d)",
                    "description": "A location where a subject was arrested.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "34888d10-4c3b-4400-9426-23dfc3d0f8e5",
                    "type": {
                        "namespace": "location",
                        "name": "Address"
                    },
                    "title": "FullAddress (-d)",
                    "description": "Unique ID via concatenation of street address, city, state, zip.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "8c80f4f6-7f6d-40da-97e8-b2330976d7e3",
                    "type": {
                        "namespace": "j",
                        "name": "EnforcementOfficialUnit"
                    },
                    "title": "Agency (-d)",
                    "description": "An enforcement unit to which an enforcement officer is assigned.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "2c030baf-6624-413a-b971-5dc8f6329108",
                    "type": {
                        "namespace": "j",
                        "name": "ArrestCategory"
                    },
                    "title": "Arrest Category (-d)",
                    "description": "The type of arrest that occurred.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "f6748439-1049-400d-ac44-7803820289be",
                    "type": {
                        "namespace": "j",
                        "name": "ArrestWarrant"
                    },
                    "title": "Warrant Number (-d)",
                    "description": "Warrant number",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                    "type": {
                        "namespace": "general",
                        "name": "id"
                    },
                    "title": "ID (-d)",
                    "description": "A uniquely identifying string, typically in the form of a UUID.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "0f6418ca-4563-4c58-b272-faa8edd7e0ce",
                    "type": {
                        "namespace": "location",
                        "name": "Street"
                    },
                    "title": "StreetAddress (-d)",
                    "description": "Street address.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "METAPHONE",
                    "indexed": "NONE"
                },
                {
                    "id": "dc74e5d7-5fed-432c-b129-dcfa3e2c818b",
                    "type": {
                        "namespace": "j",
                        "name": "ArrestAgency"
                    },
                    "title": "Arrest Agency (-d)",
                    "description": "An agency which employs the arresting official.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "cdad2fdb-5696-4676-8afa-144f09aa011e",
                    "type": {
                        "namespace": "time",
                        "name": "completed"
                    },
                    "title": "Time completed (-d)",
                    "description": "The time an event was completed.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "TimeOfDay",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "fbc41236-e3bf-43c4-968d-a3d17069c247",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "admissiondate"
                    },
                    "title": "Admission Date (-d)",
                    "description": "An admission date",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "323de7c8-a374-4e45-ab0d-ff8b7fabe094",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchtypeclass"
                    },
                    "title": "Dispatch type class (-d)",
                    "description": "Dispatch type class",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                }
            ],
            "entityTypes": [
                {
                    "id": "6f440883-660f-41e7-95f3-d923361e2b21",
                    "type": {
                        "namespace": "justice",
                        "name": "chargedwith"
                    },
                    "title": "Charged With (-d)",
                    "description": "The law enforcement charges that were laid upon a person (association).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "5ba4ac95-8532-4c2c-8747-71268f7c5898",
                        "11ba7bf9-200e-4b04-b1e7-80b54359143f",
                        "1956bf5b-a597-4ba4-bcef-5b286ac83339",
                        "b916c940-9e7f-434d-b502-05fbdc2845b2"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "184f05d9-8fd3-45c8-94e0-d959b0262f12",
                    "type": {
                        "namespace": "general",
                        "name": "InsuredBy"
                    },
                    "title": "Insured By (-d)",
                    "description": "Insured By",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "adf443f7-eae6-4276-8f4b-55cc5b705880",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "dde3b0ff-74ec-4aa3-bfc7-1fb1f4d20473",
                    "type": {
                        "namespace": "medical",
                        "name": "reported_deprecated"
                    },
                    "title": "Reported (-d)",
                    "description": "An association which describes a person's and medical history",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "5386b226-1544-455f-b330-1107399b1ed2",
                    "type": {
                        "namespace": "justice",
                        "name": "charge"
                    },
                    "title": "Charge (-d)",
                    "description": "A charge",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "24c003bb-34cf-4fa8-899a-4bc8ec523296"
                    ],
                    "properties": [
                        "0597ec2a-9809-4f7a-b338-011a0a0d220f",
                        "213fb0dc-0ea2-4f7d-95dc-e0e937482eef",
                        "24c003bb-34cf-4fa8-899a-4bc8ec523296",
                        "32003564-c9d7-482e-ae52-c3291d529a07",
                        "42534a26-578b-4958-a7a8-3475e1597623",
                        "4cd0ab91-5ecf-4a9a-a295-742db7be6163",
                        "9a54d4e0-11a0-4edd-b5b1-25236de4f7e1",
                        "c5d24216-6a34-4da2-a872-240006c1d398",
                        "d76e670b-6342-409f-9235-d22e5abb158c",
                        "8d86916c-af7e-46bd-9890-061643b6ea6f",
                        "a4ab4782-87be-4387-8e77-096e51cd3269",
                        "43c61444-69a4-46e7-a334-fe823914e779",
                        "5ba4ac95-8532-4c2c-8747-71268f7c5898",
                        "11ba7bf9-200e-4b04-b1e7-80b54359143f",
                        "2850d352-48af-47d4-8cd1-bde20f134ecc",
                        "d5f5843c-7102-4b28-9e65-cfe277f34de1",
                        "c16ab352-3099-4579-b900-40d54fec44c6",
                        "1956bf5b-a597-4ba4-bcef-5b286ac83339"
                    ],
                    "propertyTags": {
                        "4cd0ab91-5ecf-4a9a-a295-742db7be6163": [
                            "pie"
                        ],
                        "5ba4ac95-8532-4c2c-8747-71268f7c5898": [
                            "pie"
                        ],
                        "8d86916c-af7e-46bd-9890-061643b6ea6f": [
                            "breadcrumbs"
                        ],
                        "a4ab4782-87be-4387-8e77-096e51cd3269": [
                            "breadcrumbs"
                        ],
                        "d5f5843c-7102-4b28-9e65-cfe277f34de1": [
                            "timeline",
                            "eventdate"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "deccb4b4-9156-4f43-983d-104c344c2096",
                    "type": {
                        "namespace": "ol",
                        "name": "employee (-d)"
                    },
                    "title": "Employee (-d)",
                    "description": "A person who works for a business or a person. For users, the unique ID should be the auth0 ID.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "14908e47-923a-4c87-8d94-5881bf871cc1",
                        "6bfc4a96-a4b9-49d7-affb-874f1edd9c91",
                        "0111a451-0f30-4e53-8902-79b55f53ef1a",
                        "aa3f9865-e882-4363-9cef-5145f787b114",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "e9a0b4dc-5298-47c1-8837-20af172379a5",
                        "7b038634-a0b4-4ce1-a04f-85d1775937aa",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "c1d76f87-b32b-4b7f-b24f-5c4b1f30aa78",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "offense"
                    },
                    "title": "Offense (-d)",
                    "description": "A criminal justice offense",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "9b2bd81e-51cc-44ce-9051-18d833762848"
                    ],
                    "properties": [
                        "9b2bd81e-51cc-44ce-9051-18d833762848",
                        "c228a9c8-e0f3-4bb0-8b09-78b2c6162caa",
                        "d673e32c-6e67-4885-8e30-47e98f6229f2",
                        "c97555a0-ed79-4944-a000-ab961da3ab48",
                        "cd901bfa-d785-4d96-8969-6df2fb69f04e",
                        "eabab409-8ce7-499f-a4fb-d71356ada13b",
                        "5f122ec5-f8cd-4618-8bfa-3f387141616c",
                        "c16ab352-3099-4579-b900-40d54fec44c6",
                        "1956bf5b-a597-4ba4-bcef-5b286ac83339",
                        "8de9d1f4-9fe1-4056-a342-9142b227fd86",
                        "8d86916c-af7e-46bd-9890-061643b6ea6f",
                        "e6eafc89-f9e7-436b-b267-054854c4d564",
                        "73224904-f769-47c6-85f0-d70c519b54cd",
                        "bc7869bd-f646-4e0c-89ad-ae77cdadb3ef"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "e2de2838-5eb4-4ed9-9c08-52b51db712cd",
                    "type": {
                        "namespace": "j",
                        "name": "sentence"
                    },
                    "title": "Sentence (-d)",
                    "description": "A sentence",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "aeded0e9-cdec-428a-a90a-c62f0546ac08",
                        "8fb52b9f-9491-47b8-805e-c6d077b34d8a",
                        "ca4e7ec9-9609-492f-8657-cbc225df9e29",
                        "a5ca682a-3d5a-4b6a-86be-a541c33a2439",
                        "abe359a9-1508-47c2-a7bd-1a9ff7dd5d39",
                        "33a587ce-ca9d-4e68-a878-b4c704947577",
                        "2c7e8f24-d292-48a6-b0d0-c3c878be019d",
                        "72172d6b-6eba-487a-9269-81b0853892ba",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "dcec451c-8e42-4ca0-af1d-7273530b26f1",
                        "1819ceea-97c5-450b-b5f1-91982d103e71",
                        "d3781367-e327-4135-86e8-3259bcf7bae0",
                        "279d099a-5561-4834-9567-99ab08540a47",
                        "5ea92743-6c40-4eb3-a178-94b68896b195",
                        "ca840a75-3f8a-41f5-86ce-ff341ed01a0d",
                        "1b70a3fa-1da5-46e3-b4b4-36f1aec0761f",
                        "4e897a5f-27e9-4fad-898b-35e367d2182a",
                        "5bed5489-98ea-4fc7-bf68-58d0e3c7d203",
                        "c5ac112a-f797-439b-bb00-ad188ef87f21",
                        "0243a08b-f1ef-40f8-8162-e97d80d3119b",
                        "6b8551c0-1999-4a6f-aa4e-3e745302a246",
                        "086bbcea-d443-452e-946c-f73108c16d85"
                    ],
                    "propertyTags": {
                        "086bbcea-d443-452e-946c-f73108c16d85": [
                            "breadcrumbs"
                        ],
                        "aeded0e9-cdec-428a-a90a-c62f0546ac08": [
                            "timeline",
                            "eventdate"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "1f9fdbe6-982f-48b1-a4f3-af1a75614fe3",
                    "type": {
                        "namespace": "justice",
                        "name": "resultsin"
                    },
                    "title": "Results In (-d)",
                    "description": "An association which describes that one entity results in another",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "dfc59ce4-576b-4d61-9515-dba20e0dca5c",
                    "type": {
                        "namespace": "justice",
                        "name": "Offense"
                    },
                    "title": "Offense (-d)",
                    "description": "An offense",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "213fb0dc-0ea2-4f7d-95dc-e0e937482eef",
                        "5641cb0f-07ac-4f88-8fd2-da2f8d40d68c",
                        "98b437c3-1e1f-4f51-91b0-837c084f61d8",
                        "af0adecd-9608-470b-935f-44799542fb7c",
                        "d3affb63-83fe-403d-b3f7-ee91de6df63e",
                        "f6748439-1049-400d-ac44-7803820289be"
                    ],
                    "properties": [
                        "213fb0dc-0ea2-4f7d-95dc-e0e937482eef",
                        "4bf71bea-8ea7-4acb-b91c-d10f2c1654eb",
                        "5641cb0f-07ac-4f88-8fd2-da2f8d40d68c",
                        "98b437c3-1e1f-4f51-91b0-837c084f61d8",
                        "af0adecd-9608-470b-935f-44799542fb7c",
                        "d3affb63-83fe-403d-b3f7-ee91de6df63e",
                        "d673e32c-6e67-4885-8e30-47e98f6229f2",
                        "f6748439-1049-400d-ac44-7803820289be",
                        "e6eafc89-f9e7-436b-b267-054854c4d564",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "73224904-f769-47c6-85f0-d70c519b54cd"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "09e3ab1f-fa13-4371-93d7-e7adf61c7876",
                    "type": {
                        "namespace": "general",
                        "name": "DiagnosedWith"
                    },
                    "title": "DiagnosedWith (-d)",
                    "description": "An association between a diagnosis and patient. NOTE this will eventually be renamed \"general.assessedwith\"",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "0ee66bf8-7158-4b33-9cbf-63682291536c",
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                    ],
                    "properties": [
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                        "0ee66bf8-7158-4b33-9cbf-63682291536c",
                        "4cc82f90-fb84-426d-acb0-530c96008b1d"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "3841c20f-cfa9-4dd8-b75d-a33649afbceb",
                    "type": {
                        "namespace": "medical",
                        "name": "assessedwith_deprecated"
                    },
                    "title": "Assessed with (-d)",
                    "description": "Medical assessments that a patient has been assessed with.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "1c92fc4e-942a-4e1e-8373-7350dcda0344",
                        "3e11f6cc-c8f5-4d3d-aea7-76a8e5269300",
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                    ],
                    "properties": [
                        "1c92fc4e-942a-4e1e-8373-7350dcda0344",
                        "3e11f6cc-c8f5-4d3d-aea7-76a8e5269300",
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "4c21bcc3-0d4c-40ba-95cd-275a763f94ef",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "incident"
                    },
                    "title": "Incident (-d)",
                    "description": "A police incident",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "3ca03e79-6b50-4fc4-94a0-17b25eabae34"
                    ],
                    "properties": [
                        "3ca03e79-6b50-4fc4-94a0-17b25eabae34",
                        "999dbc43-519f-43b2-8119-73a2ef196bf5",
                        "477db70c-ee49-41bf-97d2-c4eb0e1ffcc4",
                        "91106b89-5842-48e4-a21f-ef923557c1b8",
                        "eabab409-8ce7-499f-a4fb-d71356ada13b",
                        "5f122ec5-f8cd-4618-8bfa-3f387141616c",
                        "13ad1d8a-24da-4c5d-9168-018d33979007",
                        "25431c60-6c26-4210-a422-569c5226ba7e",
                        "c228a9c8-e0f3-4bb0-8b09-78b2c6162caa",
                        "c97555a0-ed79-4944-a000-ab961da3ab48",
                        "d673e32c-6e67-4885-8e30-47e98f6229f2",
                        "9d2d4a0e-26af-46c8-b366-fd872dbc5506",
                        "062fd4f6-30c0-4a4a-a221-18bb1da2cb88",
                        "f7c87cb1-7ddd-4dec-b634-bef6f184a557",
                        "e71e3faa-fc19-45f8-87e7-c3e2449a1dac",
                        "c2b18c7a-6625-4a31-8196-a8d3cb0e3309",
                        "19466bb0-eeba-4c69-9ab1-8999b3cb43bf",
                        "8de9d1f4-9fe1-4056-a342-9142b227fd86",
                        "80c3ffc7-5a8a-4547-8d60-dfb0b06e92b4",
                        "285e6bfc-2a73-49ae-8cb2-b112244ed85d",
                        "cb92bd0b-0338-4f93-9936-e857e12be830",
                        "6f995298-c6b7-4f9c-b9a2-81d873a7c692",
                        "b94361f0-7172-4556-a4f3-99a183bff03c",
                        "e6d790e8-f2aa-457f-9597-369cf7e0214a",
                        "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                        "bd96f0c8-dbc0-49cd-b3a2-bb3faa9d6860",
                        "d7a0c31f-6bea-4818-a299-7378b5516df2",
                        "f105dd1b-1c71-4042-8ea8-53013070d9da"
                    ],
                    "propertyTags": {
                        "91106b89-5842-48e4-a21f-ef923557c1b8": [
                            "timeline",
                            "eventdate"
                        ],
                        "c228a9c8-e0f3-4bb0-8b09-78b2c6162caa": [
                            "breadcrumbs"
                        ],
                        "d673e32c-6e67-4885-8e30-47e98f6229f2": [
                            "breadcrumbs"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "0aab8372-2c95-4f8c-b67a-79066371365e",
                    "type": {
                        "namespace": "geo",
                        "name": "contactedat"
                    },
                    "title": "Contacted At (-d)",
                    "description": "Association linking person and contact info (excluding address).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "6675a7e8-2159-41b1-9431-4053690fa3c9",
                        "620b3e07-7f85-4629-a075-7e8c6f7eb3cb",
                        "ee34032c-9082-4535-af42-8d568683324f",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "21aa7d22-17a6-4380-99cb-bbecb08bd196",
                    "type": {
                        "namespace": "general",
                        "name": "ReferredBy_deprecated"
                    },
                    "title": "ReferredBy (-d)",
                    "description": "An association linking patients and referral information.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "20b7d73c-f569-4663-89fd-6b46699425e4",
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                    ],
                    "properties": [
                        "20b7d73c-f569-4663-89fd-6b46699425e4",
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "2cdef3ca-d9c9-4ddd-9e9d-a2c539b9d074",
                    "type": {
                        "namespace": "general",
                        "name": "Arrest"
                    },
                    "title": "Arrest (-d)",
                    "description": "Arrest",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "4ee740d5-1eda-4ace-a3b1-355245cc0063"
                    ],
                    "properties": [
                        "09539d58-dc53-44ca-9c63-9604a02681bd",
                        "1fe28610-d4f6-4608-99d4-0c2b6e805703",
                        "2358f345-8fd3-4d2f-a172-1cea8505e0a9",
                        "4ee740d5-1eda-4ace-a3b1-355245cc0063",
                        "5d37978a-b658-462a-8903-4a9a2d2d69e3",
                        "5e99b5ce-3da4-47de-8bfd-d07f5fcc07c6",
                        "8388b7cc-19eb-411f-9af1-57999eeb27e0",
                        "9cc5f76d-b17a-4f14-95d2-b6aed679f869",
                        "acd8f65f-c7e5-4227-bfda-10507abaf44f",
                        "c374f9fb-2fc1-44c4-b24a-cb1f2d3c643a",
                        "c3a8ab49-bb93-4591-a1b4-b952cf9502bd",
                        "fd934c65-f02a-4514-bf6a-937567a66af2"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "19d53b9f-7f5a-4ad8-8f8c-8548032af2b3",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "involvedin"
                    },
                    "title": "Involved in (-d)",
                    "description": "\"Involved in\" association. Links together a call for service and a vehicle.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "2080c6bb-5c37-4eb2-b629-3fe09b665d42"
                    ],
                    "properties": [
                        "2080c6bb-5c37-4eb2-b629-3fe09b665d42"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "06eb9cfc-8f72-4bb1-aaac-8fe336891e45",
                    "type": {
                        "namespace": "justice",
                        "name": "booked"
                    },
                    "title": "was booked (-d)",
                    "description": "Links together a person with a booking",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                        "cec17b62-2821-4701-ab0b-1bae728d52de"
                    ],
                    "properties": [
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                        "cec17b62-2821-4701-ab0b-1bae728d52de"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "92b91274-6ff6-4a06-bee0-10a1b7b0f056",
                    "type": {
                        "namespace": "general",
                        "name": "participatedin_v1"
                    },
                    "title": "Participated In (-d)",
                    "description": "Participated in",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "5a50c786-050c-4ba6-a6e1-8c6f167424dc",
                    "type": {
                        "namespace": "ol",
                        "name": "allergy"
                    },
                    "title": "Allergy (-d)",
                    "description": "use o.allergy",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "properties": [
                        "ed3de637-df5d-47cf-bb91-9a8ee346a6ab",
                        "28d5e08f-0d92-4c25-9f78-191d0632a11d",
                        "174abcbc-b2eb-4de3-b001-0e70054b807f",
                        "ab5f6d19-e395-4379-984d-25ee7850a6b1",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734",
                        "0397b67c-870b-483a-84b9-d683de54ea3a",
                        "e58e3c0c-d8e7-4650-9146-e6e67ce472d6",
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                        "7ec77a05-c779-407c-9c6d-8890860fcbcf"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "639269b8-95c2-420d-85e0-21121e51c85d",
                    "type": {
                        "namespace": "general",
                        "name": "Includes_deprecated"
                    },
                    "title": "Includes (-d) ",
                    "description": "An association where an entity includes another entity",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "14395b33-f0b3-4d1c-a415-cbcfb2ce3965",
                        "1c92fc4e-942a-4e1e-8373-7350dcda0344",
                        "2b3c3c14-9e9f-4f0d-a6a6-72e0cb61e33b",
                        "3149240c-7b95-4bbb-81ae-53b8c741cc2a",
                        "3e11f6cc-c8f5-4d3d-aea7-76a8e5269300",
                        "4086d111-ab50-4da9-ac5a-a68b660548a4",
                        "51374bce-3c0d-4222-a057-000f670294e7",
                        "54c6076e-bac4-47fe-a19e-3ebd9da28519",
                        "59666069-adae-4974-b328-c96340c4af75",
                        "5c480eb6-f799-46d0-98ef-c5f43678a616",
                        "60067ff0-31bb-47d9-97f1-fd3b89e36045",
                        "60bcb7e1-297a-4631-bb69-11d54362fa6a",
                        "879f46a2-e432-4808-8829-98eeb2f9dcf6",
                        "937cad34-5c38-44bd-9a12-e5237fd57a21",
                        "aff55df1-9a46-4229-b17c-25e56c5ec3bc",
                        "d5b0adba-b10c-415e-b11b-06dd4cbfe273",
                        "dc583559-550f-40a3-8c89-81a6170ab636",
                        "e4460db5-2d4d-435d-a03b-30a5276088a3"
                    ],
                    "properties": [
                        "14395b33-f0b3-4d1c-a415-cbcfb2ce3965",
                        "1c92fc4e-942a-4e1e-8373-7350dcda0344",
                        "2b3c3c14-9e9f-4f0d-a6a6-72e0cb61e33b",
                        "3149240c-7b95-4bbb-81ae-53b8c741cc2a",
                        "3e11f6cc-c8f5-4d3d-aea7-76a8e5269300",
                        "4086d111-ab50-4da9-ac5a-a68b660548a4",
                        "51374bce-3c0d-4222-a057-000f670294e7",
                        "54c6076e-bac4-47fe-a19e-3ebd9da28519",
                        "59666069-adae-4974-b328-c96340c4af75",
                        "5c480eb6-f799-46d0-98ef-c5f43678a616",
                        "60067ff0-31bb-47d9-97f1-fd3b89e36045",
                        "60bcb7e1-297a-4631-bb69-11d54362fa6a",
                        "879f46a2-e432-4808-8829-98eeb2f9dcf6",
                        "937cad34-5c38-44bd-9a12-e5237fd57a21",
                        "aff55df1-9a46-4229-b17c-25e56c5ec3bc",
                        "d5b0adba-b10c-415e-b11b-06dd4cbfe273",
                        "dc583559-550f-40a3-8c89-81a6170ab636",
                        "e4460db5-2d4d-435d-a03b-30a5276088a3",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "e0aba7dd-8033-48d8-8336-89e942102709",
                    "type": {
                        "namespace": "ol",
                        "name": "facility"
                    },
                    "title": "Facility (-d)",
                    "description": "A facility, including jail, hospital, clinic, etc.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "90d8c6f6-385d-4064-a582-ad95a0ccc040",
                        "09ebda14-780d-489d-89e2-640f1b67c85c"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "c11a8547-1a2f-41d8-b983-cc568f0f83ac",
                    "type": {
                        "namespace": "geo",
                        "name": "locatedat"
                    },
                    "title": "Located At (-d)",
                    "description": "Links together a person with a location.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "25431c60-6c26-4210-a422-569c5226ba7e",
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                        "f5628aca-71b2-40fe-ad66-374cb1f4d506"
                    ],
                    "properties": [
                        "25431c60-6c26-4210-a422-569c5226ba7e",
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "f5628aca-71b2-40fe-ad66-374cb1f4d506"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "553cd731-73de-4377-bad8-ab4ec8b65b58",
                    "type": {
                        "namespace": "ol",
                        "name": "contactedat"
                    },
                    "title": "Contacted at (-d)",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "c5825d85-c832-4363-8259-9bad7135db34",
                    "type": {
                        "namespace": "general",
                        "name": "Used"
                    },
                    "title": "Used (-d)",
                    "description": "An association describe that location at which an entity mails",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                        "d5b0adba-b10c-415e-b11b-06dd4cbfe273"
                    ],
                    "properties": [
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                        "d5b0adba-b10c-415e-b11b-06dd4cbfe273",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "0257769a-7b29-4ee3-9d64-dc2e7fcbab60",
                    "type": {
                        "namespace": "geo",
                        "name": "address"
                    },
                    "title": "Address (-d)",
                    "description": "Address",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "34888d10-4c3b-4400-9426-23dfc3d0f8e5"
                    ],
                    "properties": [
                        "3cd2facf-9ae4-4fff-8e97-c0fe6f435193",
                        "63dd667e-566c-4851-9d19-f4bb5f1374e8",
                        "25431c60-6c26-4210-a422-569c5226ba7e",
                        "3677e8ea-5da9-41f3-8b56-006548564eac",
                        "4dfd7e4f-207a-4591-8cf3-2e5c9c7d0e53",
                        "6a85d1e1-fda5-4c9c-9e2e-2dda4ed8d3d1",
                        "e96f4905-e323-47b6-be43-2a356fd82e08",
                        "132820b9-6f20-40c8-945f-9ca2ec45e233",
                        "64fb51c4-a1f1-4a52-aeda-73b7ff071c54",
                        "90d8c6f6-385d-4064-a582-ad95a0ccc040",
                        "06083695-aebe-4a56-9b98-da6013e93a5e",
                        "e8f9026a-2494-4749-84bb-1499cb7f215c",
                        "32eba813-7d20-4be1-bc1a-717f99917a5e",
                        "f43dccfe-7dbe-425a-a2c0-eb104daba964",
                        "314d2bfd-e50e-4965-b2eb-422742fa265c",
                        "34888d10-4c3b-4400-9426-23dfc3d0f8e5"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "b3fbdeaa-b5c9-49fc-944c-67915a148905",
                    "type": {
                        "namespace": "lawenforcement",
                        "name": "arrest"
                    },
                    "title": "Arrest (-d)",
                    "description": "An arrest",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "3b5c462d-af10-498f-bd12-5a9913754f29"
                    ],
                    "properties": [
                        "01bbd1ee-edf1-4379-be0c-430eb9e84075",
                        "25431c60-6c26-4210-a422-569c5226ba7e",
                        "27b1570f-937c-4961-b429-3b21f06e120b",
                        "2c030baf-6624-413a-b971-5dc8f6329108",
                        "2f8339d6-453b-4a22-a4ec-657d3d7e0b83",
                        "3b5c462d-af10-498f-bd12-5a9913754f29",
                        "43c61444-69a4-46e7-a334-fe823914e779",
                        "4cd0ab91-5ecf-4a9a-a295-742db7be6163",
                        "6f7c3c65-0717-4c39-8a40-4152a94f1278",
                        "80c3ffc7-5a8a-4547-8d60-dfb0b06e92b4",
                        "90cde7b1-8126-43b5-8458-beed5c432661",
                        "98b437c3-1e1f-4f51-91b0-837c084f61d8",
                        "9a54d4e0-11a0-4edd-b5b1-25236de4f7e1",
                        "a4a4223f-f400-45ce-a093-9b6672ba4dc0",
                        "c5d24216-6a34-4da2-a872-240006c1d398",
                        "cec17b62-2821-4701-ab0b-1bae728d52de",
                        "d673e32c-6e67-4885-8e30-47e98f6229f2",
                        "f7c87cb1-7ddd-4dec-b634-bef6f184a557"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "12d1ef04-d6c5-45a7-bb56-f667e88ba165",
                    "type": {
                        "namespace": "location",
                        "name": "livesat"
                    },
                    "title": "Lives at (-d)",
                    "description": "An association describe that location at which an entity lives",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "14acfc18-6d46-4ba2-a09d-3dc38c4c202b",
                    "type": {
                        "namespace": "medical",
                        "name": "Insurance"
                    },
                    "title": "Insurance (-d)",
                    "description": "An insurance",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "3a886c9a-87d7-4d29-816e-72811bf420d9"
                    ],
                    "properties": [
                        "3a886c9a-87d7-4d29-816e-72811bf420d9",
                        "70d2ff1c-2450-4a47-a954-a7641b7399ae",
                        "0edd1b3b-ad08-4a7a-87ab-5e467c05d74f",
                        "272eaa42-a372-4202-8819-4718690503c4",
                        "461df09b-14fe-4201-abe7-85c7d298fe46",
                        "5892c3a0-4f3d-49dd-80f6-d8de856bb5ce",
                        "793dba6e-789c-40c6-afd0-167cf5e73fcf",
                        "9f5a37ed-27a2-46e5-aa20-0e58ff7751c7",
                        "b2c765df-730e-4811-b2b8-e56cce120b5c",
                        "b8ea6a66-2066-4f73-a8db-ae805c59251f",
                        "a7ecc119-6f7f-4603-b9ec-68b9141ea114"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "46eeda56-f986-4da2-9584-23512aa2fb41",
                    "type": {
                        "namespace": "justice",
                        "name": "ReleasedBy"
                    },
                    "title": "Released By (-d)",
                    "description": "Links together an officer with someone they are releasing",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "73224904-f769-47c6-85f0-d70c519b54cd"
                    ],
                    "properties": [
                        "73224904-f769-47c6-85f0-d70c519b54cd"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "e13743e7-babd-49a0-93e5-f93c8b7502cc",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "jailrecord"
                    },
                    "title": "Jail stay/record (-d)",
                    "description": "A jail stay/record.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "6900fcb7-f44d-4b65-b392-40617dea5fed"
                    ],
                    "properties": [
                        "6900fcb7-f44d-4b65-b392-40617dea5fed",
                        "81b3073b-e01f-4b69-9b64-03fcea0ccab7",
                        "2216f875-9645-4786-b062-9ec3960e4630",
                        "e32ceae7-c00b-4e9f-bf98-0f03e94fb566",
                        "18f2e4c6-86ce-4f5d-ad8f-0eb018947371",
                        "a67bcbdd-f9e1-4830-9730-d88a419a693d",
                        "523de719-c894-4bed-91ec-3b1d2fa51f4c",
                        "5d37978a-b658-462a-8903-4a9a2d2d69e3",
                        "cccdf498-4c90-4015-85c3-2a83536b705a",
                        "656ded15-4503-4623-977f-b1188a64cafa",
                        "3cfead4f-09ce-4ef8-bd03-a70dce298ac5",
                        "7c2953f9-babd-4ecf-9adf-fc20ff1f9fa9",
                        "62c82f33-295a-4437-8a3c-2d409c1e2224",
                        "e3b223ce-4f91-4125-be4d-ec7371382823",
                        "f3b41e19-d1e9-4004-8763-b514a93983d2",
                        "92ecb196-23f1-4ab4-a8c3-084ccbcc151a",
                        "d146903f-9196-40b8-90ce-3a0e8e4557a5",
                        "2a590340-a360-4456-af81-949f6d490a88",
                        "d5cd8ae6-f0de-48fe-9139-89108adedc19",
                        "4d5db4fe-a0c8-45f8-af6d-cd7cd4cab86c",
                        "c7d2c503-651d-483f-8c17-72358bcfc5cc",
                        "49adf7e7-1962-44c0-a683-4091366e03fd",
                        "26990519-ac4e-4dc9-9559-f9b500a728da",
                        "b730b3b3-d442-45a1-8d81-c082b1dd3a45",
                        "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                        "f9404d36-7cbb-462c-88d8-033b494afe10",
                        "5641cb0f-07ac-4f88-8fd2-da2f8d40d68c",
                        "1bde9fa3-7bdf-437e-81f3-ce50944bfb1e",
                        "77f1e62e-a648-4be1-84c8-c3712eef3ff3",
                        "2b509f15-cb22-4515-8638-088641a0ca86",
                        "73cc64b4-6b03-40aa-85fe-9492847587d2",
                        "52722320-b04e-41ae-95b3-ec670256e0b9",
                        "cfea602e-9b53-4f10-8c2f-97173b77003d",
                        "49c477f2-95bb-4fe2-a654-e2c1c8419304",
                        "1901c0b0-f051-4660-8d6d-b5a040dc9dcb",
                        "3e1ba12f-13cf-475c-bdeb-033381785ce5",
                        "c16ab352-3099-4579-b900-40d54fec44c6",
                        "14908e47-923a-4c87-8d94-5881bf871cc1",
                        "e6d740ac-daa7-40e6-b864-c83d5054fa21"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "14c4ec7c-af16-4a55-991c-46d574f0ff6c",
                    "type": {
                        "namespace": "ol",
                        "name": "is"
                    },
                    "title": "Is (person to patient, suspect, employee etc.) (-d)",
                    "description": "\"Is\" association connecting the general and more specific person-types (including employees).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "481f59e4-e146-4963-a837-4f4e514df8b7",
                        "bf828c73-2ea9-4d4e-be40-ae9702e64b21",
                        "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "5f122ec5-f8cd-4618-8bfa-3f387141616c",
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "415d008f-4310-4477-b333-404e6b11e537",
                    "type": {
                        "namespace": "justice",
                        "name": "JailBooking"
                    },
                    "title": "Jail Booking (-d)",
                    "description": "A jail booking",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "2216f875-9645-4786-b062-9ec3960e4630"
                    ],
                    "properties": [
                        "2216f875-9645-4786-b062-9ec3960e4630",
                        "34b530a3-c43f-4439-b410-d09e77ea8e0d",
                        "3b5c462d-af10-498f-bd12-5a9913754f29",
                        "752f6e0b-1c37-4920-80bd-28ba0c9939e4",
                        "7a0d8601-33f4-4ddb-9040-0f738a4898e9",
                        "8b2028a3-ea0a-4776-815d-8ff4902a6bdb",
                        "9a54d4e0-11a0-4edd-b5b1-25236de4f7e1",
                        "c7d2c503-651d-483f-8c17-72358bcfc5cc",
                        "dc74e5d7-5fed-432c-b129-dcfa3e2c818b",
                        "e3b223ce-4f91-4125-be4d-ec7371382823",
                        "f3b41e19-d1e9-4004-8763-b514a93983d2",
                        "f7c38fcd-e815-4f16-90ee-13932336265d",
                        "caf53ac1-30f2-492a-a284-65eef9ed7827"
                    ],
                    "propertyTags": {
                        "3b5c462d-af10-498f-bd12-5a9913754f29": [
                            "breadcrumbs"
                        ],
                        "7a0d8601-33f4-4ddb-9040-0f738a4898e9": [
                            "breadcrumbs"
                        ],
                        "dc74e5d7-5fed-432c-b129-dcfa3e2c818b": [
                            "breadcrumbs"
                        ],
                        "f7c38fcd-e815-4f16-90ee-13932336265d": [
                            "timeline",
                            "eventdate"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "edae9468-4eb4-4f34-a47b-f53423e3705b",
                    "type": {
                        "namespace": "ol",
                        "name": "hasentity"
                    },
                    "title": "Has (-d)",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "7c3bf67e-888f-472c-9555-119d7d91828e",
                    "type": {
                        "namespace": "medical",
                        "name": "Medication"
                    },
                    "title": "Medication (-d)",
                    "description": "The substance used in the preparation or simply the substance used for medical treatment.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "14395b33-f0b3-4d1c-a415-cbcfb2ce3965"
                    ],
                    "properties": [
                        "14395b33-f0b3-4d1c-a415-cbcfb2ce3965",
                        "18d5e463-4421-45cc-b499-2603596b079e",
                        "419348da-1353-47e6-921a-e5f92a71b18d",
                        "6b947ce1-fc08-4534-8189-1034f39ec2ac",
                        "70d2ff1c-2450-4a47-a954-a7641b7399ae",
                        "adf443f7-eae6-4276-8f4b-55cc5b705880",
                        "c16ab352-3099-4579-b900-40d54fec44c6",
                        "dce69615-be50-48c2-8540-f2437784b872",
                        "a7ecc119-6f7f-4603-b9ec-68b9141ea114"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "14923c22-ac79-4efb-b298-c54c698b84de",
                    "type": {
                        "namespace": "ol",
                        "name": "applicationdata"
                    },
                    "title": "Application Data (-d)",
                    "description": "Information on applications recently used on device",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "70d2ff1c-2450-4a47-a954-a7641b7399ae",
                        "285e6bfc-2a73-49ae-8cb2-b112244ed85d",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "1624fc2d-d221-48d2-a7b4-ee94f80a515b",
                        "06083695-aebe-4a56-9b98-da6013e93a5e",
                        "e8f9026a-2494-4749-84bb-1499cb7f215c",
                        "e90a306c-ee37-4cd1-8a0e-71ad5a180340",
                        "c106ee75-f18e-48ed-bc85-b75702bfe802",
                        "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                        "00e5c55f-f1ef-4538-8d48-c08d5bcfe4c7",
                        "071ba832-035f-4b04-99e4-d11dc4fbe0e8"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "2dbf1e58-e218-4211-965c-070b6c4388c9",
                    "type": {
                        "namespace": "justice",
                        "name": "JailRecord"
                    },
                    "title": "Jail Record (-d)",
                    "description": "A jail record.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "c7d2c503-651d-483f-8c17-72358bcfc5cc"
                    ],
                    "properties": [
                        "031554d1-13fc-48dc-ae36-cff7bfe33f40",
                        "15a3e630-f11b-4b54-9e0f-e2866ddf27a7",
                        "17d5e422-2bb4-42ad-878f-e9490807edba",
                        "1ad43659-6efb-477c-b2b8-db588af59bc9",
                        "2a590340-a360-4456-af81-949f6d490a88",
                        "474f6088-49b2-478a-93ef-2d9541858701",
                        "523de719-c894-4bed-91ec-3b1d2fa51f4c",
                        "62c82f33-295a-4437-8a3c-2d409c1e2224",
                        "6527f4a6-58b3-4c15-8e47-abe8ba377485",
                        "656ded15-4503-4623-977f-b1188a64cafa",
                        "6c808228-5445-4977-8d11-19477cb48380",
                        "6ed9947f-3d0a-4bfa-bd47-4a0e86a231f6",
                        "c7d2c503-651d-483f-8c17-72358bcfc5cc",
                        "cccdf498-4c90-4015-85c3-2a83536b705a",
                        "cf97bce4-3aea-4623-b744-2650e2c20348",
                        "d5cd8ae6-f0de-48fe-9139-89108adedc19",
                        "e32ceae7-c00b-4e9f-bf98-0f03e94fb566",
                        "e6d740ac-daa7-40e6-b864-c83d5054fa21",
                        "f9091990-47d5-43e1-a112-a38e181d8dcf"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "eb528589-882c-462a-b057-45f58d7565fc",
                    "type": {
                        "namespace": "general",
                        "name": "Taking_deprecated"
                    },
                    "title": "Taking (-d)",
                    "description": "An association describe that location at which an entity mails",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "14395b33-f0b3-4d1c-a415-cbcfb2ce3965",
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                    ],
                    "properties": [
                        "14395b33-f0b3-4d1c-a415-cbcfb2ce3965",
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "58b3a5cd-8806-400e-b91d-5ae314063378",
                    "type": {
                        "namespace": "ol",
                        "name": "device"
                    },
                    "title": "Device (-d)",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "93b8b60b-bcfc-4778-99b8-8c57ce6cb502",
                        "0011bbfe-d5d4-4f88-97a8-cdeb821deb6f",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "713885e6-566c-478c-a1c3-bc8a6d5e149e",
                    "type": {
                        "namespace": "economy",
                        "name": "worksas"
                    },
                    "title": "Works as (-d)",
                    "description": "Association between person and personnel/employee entity, noting when the person first started working with the agency or organization.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "13925c02-f0ff-4052-9c09-161f39ea5ec2"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "533c7b58-116a-400f-a2df-08abbaa7eceb",
                    "type": {
                        "namespace": "justice",
                        "name": "TransportedBy"
                    },
                    "title": "Transported By (-d)",
                    "description": "Links together an officer with someone they are transporting",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "73224904-f769-47c6-85f0-d70c519b54cd"
                    ],
                    "properties": [
                        "73224904-f769-47c6-85f0-d70c519b54cd"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "eb5c2845-6089-4d31-a5bd-f83371444154",
                    "type": {
                        "namespace": "geo",
                        "name": "contactedat_deprecated"
                    },
                    "title": "Contacted at (-d)",
                    "description": "Association linking person and contact info (excluding address).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "6675a7e8-2159-41b1-9431-4053690fa3c9"
                    ],
                    "properties": [
                        "620b3e07-7f85-4629-a075-7e8c6f7eb3cb",
                        "6675a7e8-2159-41b1-9431-4053690fa3c9",
                        "ee34032c-9082-4535-af42-8d568683324f"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                }
            ]
        },
        {
            "fqn": {
                "namespace": "ol",
                "name": "v2"
            },
            "propertyTypes": [],
            "entityTypes": []
        },
        {
            "fqn": {
                "namespace": "v2",
                "name": "criminaljustice"
            },
            "propertyTypes": [],
            "entityTypes": []
        },
        {
            "fqn": {
                "namespace": "v2",
                "name": "deprecated"
            },
            "propertyTypes": [],
            "entityTypes": []
        },
        {
            "fqn": {
                "namespace": "v2",
                "name": "v2"
            },
            "propertyTypes": [
                {
                    "id": "d104fadc-3f7b-4c8f-83e8-f321b6c2ea26",
                    "type": {
                        "namespace": "reproductive",
                        "name": "stdhistory"
                    },
                    "title": "History of STDs (Y/N)",
                    "description": "History of STDs (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "9f91239a-9614-4a70-b36d-e70c5da6fdaa",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "cfsid"
                    },
                    "title": "Call for service (CFS) ID",
                    "description": "A string that uniquely identifies a call for service, separate from the Dispatch ID, if both are given.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "93cfb4a2-3911-4a64-8488-d07a0266e48f",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "diarrheatext"
                    },
                    "title": "Diarrhea (description)",
                    "description": "Additional text descriptions of any diarrhea.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "b916c940-9e7f-434d-b502-05fbdc2845b2",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "agencyname"
                    },
                    "title": "Agency name",
                    "description": "Agency Name",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "937cad34-5c38-44bd-9a12-e5237fd57a21",
                    "type": {
                        "namespace": "withdrawal",
                        "name": "id"
                    },
                    "title": "Withdrawal ID",
                    "description": "Unique ID for substance use withdrawal assessment.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "2cb50324-4126-4ee4-9698-c9185e4bad92",
                    "type": {
                        "namespace": "household",
                        "name": "id"
                    },
                    "title": "Household ID",
                    "description": "A unique ID for a household.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "0de9808a-d8e3-4f62-9413-e86e5ede304a",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "cfsoriginid"
                    },
                    "title": "CFS Origination ID",
                    "description": "Details on how a Call for Service is initiated or originated. Could be by a person, or an organization.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "d45d5c98-ef15-4c28-bb59-7367c293db58",
                    "type": {
                        "namespace": "ol",
                        "name": "alternatestartdate"
                    },
                    "title": "Alternate start date",
                    "description": "An alternate start date (Often occuring with concurrent jailstays).",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "469e2316-e850-4636-a4b4-01d7bcd69655",
                    "type": {
                        "namespace": "ol",
                        "name": "acokscore"
                    },
                    "title": "Total AC-OK questions (affirmative answers)",
                    "description": "Total # of AC-OK screening questions:  questions to which a patient answers \u201cyes\u201d  (or more specifically, questions with at least one non-\u201cno\u201d answer, since answers can consist of strings) in an emotional and behavioral assessment.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Int32",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e92aa355-8e6d-4253-9269-7f5d2a8a4ff1",
                    "type": {
                        "namespace": "cardiovascular",
                        "name": "heartdisease"
                    },
                    "title": "Heart Disease (Y/N)",
                    "description": "Heart Disease (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "68199414-1903-4d4c-ae39-7609f9c997b4",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchpriority"
                    },
                    "title": "Dispatch Priority",
                    "description": "Dispatch Priority",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "7c101eeb-3fd3-448b-b606-16e2da4f6d18",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "constipationtext"
                    },
                    "title": "Constipation (text)",
                    "description": "Additional text descriptions of any constipation.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "82f6ec6a-60ff-42d9-8abf-52086a2f1232",
                    "type": {
                        "namespace": "ol",
                        "name": "haircolor"
                    },
                    "title": "Color of hair.",
                    "description": "Color of hair.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "9f3bc9a7-cb01-4cb5-9d62-628912e7e637",
                    "type": {
                        "namespace": "ol",
                        "name": "receiveddatetime"
                    },
                    "title": "Datetime Received",
                    "description": "Datetime to indicate reception of goods/call/...",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "3149240c-7b95-4bbb-81ae-53b8c741cc2a",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "id"
                    },
                    "title": "gastrointestinal ID",
                    "description": "Unique ID for gastrointestinal assessments",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "0d240f48-9347-46f7-a79e-b11ffdece2a8",
                    "type": {
                        "namespace": "datetime",
                        "name": "received"
                    },
                    "title": "Received date-time",
                    "description": "The date-time CFS a was received",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "2c82974e-1ea1-443e-af28-b879b0d138c9",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "normalbowelpattern"
                    },
                    "title": "Normal bowel pattern",
                    "description": "Normal bowel pattern",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "29d50517-8c66-4e0b-bd45-86d9309defb5",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "constipation"
                    },
                    "title": "Constipation (Y/N)",
                    "description": "Constipation (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "61fd0192-9740-408d-a9b7-aba5d3c0f26b",
                    "type": {
                        "namespace": "datetime",
                        "name": "totaldispatch"
                    },
                    "title": "Total time of dispatch",
                    "description": "Total time taken for a dispatch call for service. ",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "a773c790-6564-4e5a-8f83-fbb0f45bd7a9",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "agencyid"
                    },
                    "title": "Agency ID",
                    "description": "Agency ID",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "631c1f02-3991-4644-a9d5-28aa16103ab9",
                    "type": {
                        "namespace": "medical",
                        "name": "cigarettesperday"
                    },
                    "title": "Cigarettes Per Day",
                    "description": "Cigarettes Per Day",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c78650e9-8bbc-4d84-9f8f-a0555a1c928c",
                    "type": {
                        "namespace": "neurological",
                        "name": "historyofheadaches"
                    },
                    "title": "History of headaches (Y/N)",
                    "description": "History of headaches (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "8cf0d1a8-439a-402d-85c3-572a93e07ff8",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchemdlevel"
                    },
                    "title": "Dispatch EMD Level",
                    "description": "A dispatch EMD level, such as with ProQA.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c9937ae9-4602-4c28-b719-3575aad643f4",
                    "type": {
                        "namespace": "housing",
                        "name": "residentid"
                    },
                    "title": "Resident ID",
                    "description": "A unique resident ID.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "9aed27a9-c179-4dc3-b94a-b949979baa78",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "pancreatitis"
                    },
                    "title": "Pancreatitis  (Y/N)",
                    "description": "Pancreatitis",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "4700bd91-44c3-43d8-9c57-a78d62ffa8b0",
                    "type": {
                        "namespace": "cardiovascular",
                        "name": "hypertensiontext"
                    },
                    "title": "Hypertension (description)",
                    "description": "Additional text descriptions of hypertension.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "539d322d-41d0-4596-aceb-17551af9b0ae",
                    "type": {
                        "namespace": "ol",
                        "name": "dispatchtransfer"
                    },
                    "title": "Boolean to indicate whether the vehicle was used for a dispatch transfer",
                    "description": "Boolean to indicate whether the vehicle was used for a dispatch transfer",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "4d5db4fe-a0c8-45f8-af6d-cd7cd4cab86c",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "casenumber"
                    },
                    "title": "Case number (v2)",
                    "description": "Case number",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "7a598bde-225f-48fb-b2b1-bfb95b48d546",
                    "type": {
                        "namespace": "skin",
                        "name": "headpediculi"
                    },
                    "title": "Head Pediculi Present (Y/N)",
                    "description": "Head Pediculi Present (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "2a659e04-9a9b-43d7-9585-7bcf6d1cf25d",
                    "type": {
                        "namespace": "housing",
                        "name": "timelessthan90days"
                    },
                    "title": "Time < 90 days in housing",
                    "description": "Whether time spent in a housing program was less than 90 days. ",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "1e599c37-727e-45b8-a0be-310e095cab62",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchzonename"
                    },
                    "title": "Dispatch Zone",
                    "description": "Details on a dispatch zone for a call for service.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "0e1bdba4-7dc9-4c48-a147-996573fa6fcd",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchlea"
                    },
                    "title": "CFS LEA",
                    "description": "Flag for LEA in a call for service.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "59666069-adae-4974-b328-c96340c4af75",
                    "type": {
                        "namespace": "respiratory",
                        "name": "id"
                    },
                    "title": "Respiratory ID",
                    "description": "Unique ID for respiratory assessment ",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "f6ad21f8-f7ad-43c9-a001-83fc7a616e9d",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "pancreatitistext"
                    },
                    "title": "Pancreatitis (description)",
                    "description": "Additional text descriptions of pancreatitis.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "9dd6385b-50c9-43c2-bb86-9232cc187d1a",
                    "type": {
                        "namespace": "economy",
                        "name": "spousalsupport"
                    },
                    "title": "Spousal Support (Y/N)",
                    "description": "Alimony or other spousal support (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "a07b2d64-d1a4-4555-a57d-470490920d32",
                    "type": {
                        "namespace": "economy",
                        "name": "earnedincometimeunit"
                    },
                    "title": "Earned income (unit time)",
                    "description": "The unit time (i.e., monthly,  weekly) that accompanies a specified amount of earned income.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "a4952023-21ba-4670-bdcd-514b3d3c82fe",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "hepatitistext"
                    },
                    "title": "Hepatitis (description)",
                    "description": "Additional text descriptions of hepatitis.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "06083695-aebe-4a56-9b98-da6013e93a5e",
                    "type": {
                        "namespace": "location",
                        "name": "latitude"
                    },
                    "title": "Latitude (-d)",
                    "description": "Latitude",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Double",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "39e13db7-a730-421a-a600-ae0674060140",
                    "type": {
                        "namespace": "ol",
                        "name": "id"
                    },
                    "title": "General Identifier",
                    "description": "General Identifier",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "10779ba8-e4b2-45dc-a7f2-93e565581dc3",
                    "type": {
                        "namespace": "skin",
                        "name": "bedbugbitesorscabies"
                    },
                    "title": "Bedbug bites or scabies (Y/N)",
                    "description": "Bedbug bites or scabies (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "36864a7e-ba1f-487d-adca-4dc55ba82700",
                    "type": {
                        "namespace": "economy",
                        "name": "publicassistance"
                    },
                    "title": "Public assistance (Y/N)",
                    "description": "Whether one receives general public assistance (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "1e9937aa-be99-4c97-9d8f-286c4e7bae9b",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "liverdisease"
                    },
                    "title": "Liver disease (Y/N)",
                    "description": "Liver disease (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e2c325dd-9574-4e2a-a7f4-1ec061100a24",
                    "type": {
                        "namespace": "ol",
                        "name": "typical"
                    },
                    "title": "Typical (Y/N)",
                    "description": "Typical (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "b8d807b2-6c7a-4d1b-add6-aac8e24f251b",
                    "type": {
                        "namespace": "economy",
                        "name": "spousalsupportamount"
                    },
                    "title": "Spousal Support Amount",
                    "description": "The amount of spousal support received.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "523de719-c894-4bed-91ec-3b1d2fa51f4c",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "committedtoauthority"
                    },
                    "title": "Committed to Authority",
                    "description": "An authority to which a person is remanded into custody as part of a judgment.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "592062ad-d868-4bcf-8ee0-daa1331fc138",
                    "type": {
                        "namespace": "vehicle",
                        "name": "licenseplatetype"
                    },
                    "title": "License Plate Type",
                    "description": "License plate type-auto, truck, apportioned, etc.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "1ec2ea70-eff1-46d1-a0c4-0e06a0c84bd4",
                    "type": {
                        "namespace": "housing",
                        "name": "numberunstableepisodes"
                    },
                    "title": "No. unstable housing periods",
                    "description": "Number of times one has been on the streets, in an emergency shelter, or supportive housing in the past three years.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e455b024-72bc-4dfe-b362-3852aadb8496",
                    "type": {
                        "namespace": "cfsorigin",
                        "name": "source"
                    },
                    "title": "CFS source of initiation",
                    "description": "Source or initiation of a CFS; if an organization, org name.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "543bfa76-a46d-4ec0-a00e-75678af4552c",
                    "type": {
                        "namespace": "health",
                        "name": "mentalissue"
                    },
                    "title": "Mental health / psych issue flag",
                    "description": "Whether one has a mental health issue (Y/N). Flags entity as having mental health information.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "30273603-b5be-4277-8ef3-a5540447ca5f",
                    "type": {
                        "namespace": "ol",
                        "name": "arrestdate"
                    },
                    "title": "Arrest date (-d)",
                    "description": "The date and time of an arrest.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Date",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "57d24585-7aec-43b7-b0f9-4162321366de",
                    "type": {
                        "namespace": "person",
                        "name": "ageatevent"
                    },
                    "title": "Age at Event",
                    "description": "The age of a person at booking",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Int32",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "ecd6b536-d7c8-40a8-bd21-376485e5c37c",
                    "type": {
                        "namespace": "substance",
                        "name": "deliriumtremens"
                    },
                    "title": "Delirium Tremens from substance use (Y/N)",
                    "description": "Delirium Tremens from substance use (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c5190846-21c0-4819-8bcb-99be5674bcd9",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "lastbowelmovement"
                    },
                    "title": "Last Bowel Movement",
                    "description": "Last bowel movement",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "d9c0caf4-afd6-43e7-9761-96aad916cd86",
                    "type": {
                        "namespace": "ol",
                        "name": "height"
                    },
                    "title": "Height of a person.",
                    "description": "Height of a person.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Int16",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "a046320f-02a0-4443-b5a4-b6a9928c334b",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "personneltitle"
                    },
                    "title": "Personnel Title",
                    "description": "Some call this \"category\". Criminal Justice: Detective, Communications, Officer, Patrol Deputy etc. ",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "4b837187-0959-4ff7-803a-a2ed9779e165",
                    "type": {
                        "namespace": "skin",
                        "name": "diabeticfootchecks"
                    },
                    "title": "Diabetic foot checks (Y/N)",
                    "description": "Diabetic foot checks (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c5909ed6-5c9d-4016-b5ae-eba0008f4b2e",
                    "type": {
                        "namespace": "ol",
                        "name": "role"
                    },
                    "title": "Role of person",
                    "description": "Role of person, in an event, organization, or program.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "477db70c-ee49-41bf-97d2-c4eb0e1ffcc4",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "reportnumber"
                    },
                    "title": "Report number",
                    "description": "Police reports generated from an incident",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "3cfead4f-09ce-4ef8-bd03-a70dce298ac5",
                    "type": {
                        "namespace": "date",
                        "name": "commit"
                    },
                    "title": "Commit date (-d)",
                    "description": "Commit date",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "2904c8ac-61d5-4075-a952-a761ae70242d",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchemd"
                    },
                    "title": "Dispatch EMD",
                    "description": "A dispatch EMD, such as ProQA.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "92ecb196-23f1-4ab4-a8c3-084ccbcc151a",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "releasetype"
                    },
                    "title": "Release Type",
                    "description": "The type of release",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e71e3faa-fc19-45f8-87e7-c3e2449a1dac",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "casestatus"
                    },
                    "title": "Case status",
                    "description": "If incident is part of a case, the status of the case.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c7cdf0a9-db29-4ffc-96f7-52bcb73750ab",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "cfscaseid"
                    },
                    "title": "Case ID (CFS)",
                    "description": "Case ID for a dispatch call for service",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "f848e0e9-6d29-4d21-a7b5-7d59c34fb56d",
                    "type": {
                        "namespace": "skin",
                        "name": "trackmarksdescription"
                    },
                    "title": "Description of track marks",
                    "description": "Description of track marks",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "49adf7e7-1962-44c0-a683-4091366e03fd",
                    "type": {
                        "namespace": "person",
                        "name": "maritalstatus"
                    },
                    "title": "Marital Status",
                    "description": "A person's marital status.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "7b5a9dac-7111-4825-baeb-13edf11d65b3",
                    "type": {
                        "namespace": "housing",
                        "name": "permanentmoveindate"
                    },
                    "title": "Permanent Housing Move in Date",
                    "description": "Permanent housing move-in date.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Date",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "8bc5eb16-aa6d-4f97-bf5a-af55e9e938a2",
                    "type": {
                        "namespace": "cardiovascular",
                        "name": "swellingofextremities"
                    },
                    "title": "Swelling of extremities (Y/N)",
                    "description": "Swelling of extremities (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "fafbf5d2-d681-4468-b7e3-3472c661b042",
                    "type": {
                        "namespace": "person",
                        "name": "veteranstatus"
                    },
                    "title": "Military / Veteran Status ",
                    "description": "A person's military or veteran status - status of military service of a person.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "496de432-d25e-45b8-b252-682a588bfc32",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "cfsoperator"
                    },
                    "title": "CFS Operator",
                    "description": "CFS Operator",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "71fe0840-fb24-4867-a23c-47a96c517141",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchtypepriority"
                    },
                    "title": "Dispatch Type Priority",
                    "description": "Dispatch Type Priority",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Int32",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "36bb6759-0cc1-4470-b0e8-c907d304b5c0",
                    "type": {
                        "namespace": "endocrine",
                        "name": "diabeticmgmtcomments"
                    },
                    "title": "Comments on Diabetic Management ",
                    "description": "Comments on Diabetic Management ",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c938eb9b-15da-4b87-bf0a-006e290db4ec",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchtripnumber"
                    },
                    "title": "Dispatch Trip Number",
                    "description": "Trip Number",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "f580437c-f2c9-4ea1-99ee-3ef099bc0a4b",
                    "type": {
                        "namespace": "respiratory",
                        "name": "coughcomment"
                    },
                    "title": "Cough Comments",
                    "description": "Cough Comments",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "f046b68a-cc58-4e81-a22a-177c3eb2f78f",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "bleeding"
                    },
                    "title": "GastroIntestinal bleeding (Y/N)",
                    "description": "GastroIntestinal bleeding (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c730490e-8a36-481d-ae11-84aa76e97a38",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchtypeid"
                    },
                    "title": "Dispatch Type ID",
                    "description": "Dispatch Type ID",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c22b7629-4323-4d69-94fd-dae4d64df69c",
                    "type": {
                        "namespace": "demographics",
                        "name": "hhtype"
                    },
                    "title": "Household type",
                    "description": "Categories of households (i.e., only adults, adults and children).",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "aa3f9865-e882-4363-9cef-5145f787b114",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "employeeid"
                    },
                    "title": "Employee ID",
                    "description": "Employee ID",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "8e4b71ea-30b3-4123-a63b-59ce3c94e9d7",
                    "type": {
                        "namespace": "respiratory",
                        "name": "productivecough"
                    },
                    "title": "Productive Cough (Y/N)",
                    "description": "Whether cough is productive.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "ae27e6cd-701b-4952-b3ee-4ecbeeeb2eea",
                    "type": {
                        "namespace": "vehicle",
                        "name": "licensestate"
                    },
                    "title": "Vehicle License Plate State",
                    "description": "A vehicle's license plate state",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "02379201-8815-489d-a056-37e36d299aae",
                    "type": {
                        "namespace": "housing",
                        "name": "timeintransitionalorpermanentlessthan7nights"
                    },
                    "title": "Less than 1 week in housing",
                    "description": "Whether the time spent in transitional or permanent housing was less than 7 nights.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "90d8c6f6-385d-4064-a582-ad95a0ccc040",
                    "type": {
                        "namespace": "location",
                        "name": "name"
                    },
                    "title": "Location String",
                    "description": "Location of an event",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "71382fda-aa76-4fd0-97e8-d1b27a677df5",
                    "type": {
                        "namespace": "musculoskeletal",
                        "name": "backproblemsdescription"
                    },
                    "title": "Back Problems Description",
                    "description": "Back Problems Description",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "ccb90ce4-4343-4478-bfc5-d7167a45557f",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchfirelevel"
                    },
                    "title": "Dispatch Fire Level",
                    "description": "Dispatch Fire Level",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "ff610b7c-54e1-47e1-ba5e-4087b62f5164",
                    "type": {
                        "namespace": "housing",
                        "name": "datehomelessbegan"
                    },
                    "title": "Date homelessness began (-d)",
                    "description": "Approximate date that homelessness began.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Date",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "32eba813-7d20-4be1-bc1a-717f99917a5e",
                    "type": {
                        "namespace": "housing",
                        "name": "notes"
                    },
                    "title": "Notes",
                    "description": "Additional notes",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "METAPHONE",
                    "indexed": "NONE"
                },
                {
                    "id": "2bf49a3d-36d9-4e02-a824-1757d4ebc61f",
                    "type": {
                        "namespace": "form",
                        "name": "relationtoprimaryclient"
                    },
                    "title": "Relation to individual on a form",
                    "description": "For form submission, one's relationship to the subject of a form.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "da502ae2-e5ad-4d93-8ad0-0ddf18979781",
                    "type": {
                        "namespace": "neurological",
                        "name": "historyoffallsnotes"
                    },
                    "title": "History of falls (comments)",
                    "description": "Details on patient history of falls",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e652629a-70e0-458a-ae9f-02ca600d0360",
                    "type": {
                        "namespace": "ol",
                        "name": "sentencehours"
                    },
                    "title": "Sentence hours",
                    "description": "Number of hours of sentence.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Int16",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "0f10a3f1-a020-4367-a261-750d979abfca",
                    "type": {
                        "namespace": "ol",
                        "name": "stringnumber"
                    },
                    "title": "Number (string data type)",
                    "description": "General property for number that might contain letters (eg. DL number).",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "6a85d1e1-fda5-4c9c-9e2e-2dda4ed8d3d1",
                    "type": {
                        "namespace": "location",
                        "name": "city"
                    },
                    "title": "City",
                    "description": "A city",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "4158971d-47cc-4fed-beeb-410079569078",
                    "type": {
                        "namespace": "skin",
                        "name": "bedbugorscabiesdescription"
                    },
                    "title": "Bedbug bites or scabies description",
                    "description": "Bedbug bites or scabies description",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "cccdf498-4c90-4015-85c3-2a83536b705a",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "treatasadult"
                    },
                    "title": "Treat as adult (Adult Juv Waive)",
                    "description": "Juvenile individual should be treated as an adult in this specific enforcement encounter.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Int32",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "64fb51c4-a1f1-4a52-aeda-73b7ff071c54",
                    "type": {
                        "namespace": "location",
                        "name": "intersection"
                    },
                    "title": "Intersection",
                    "description": "Intersection",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "2b3c3c14-9e9f-4f0d-a6a6-72e0cb61e33b",
                    "type": {
                        "namespace": "endocrine",
                        "name": "id"
                    },
                    "title": "endocrine ID",
                    "description": "Unique ID for endocrine assessments",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "cb81457e-c49d-4cd2-9d00-d82a4d1a9028",
                    "type": {
                        "namespace": "housing",
                        "name": "homelesscause"
                    },
                    "title": "Cause of homelessness",
                    "description": "Cause of homelessness",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "84bbabed-c6a2-4166-b743-92dcc743cae7",
                    "type": {
                        "namespace": "health",
                        "name": "insurancecoverage"
                    },
                    "title": "Insurance coverage (Y/N)",
                    "description": "Whether one is covered by insurance (Y/N).",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "cf83fe38-1661-41b1-97e9-6f4f732b034c",
                    "type": {
                        "namespace": "neurological",
                        "name": "sleeppattern"
                    },
                    "title": "Sleep Patterns",
                    "description": "Question on one's sleep patterns, from the NSPL Suicide Risk Assessment standards (Suicidal Capability component) Decreased sleep can be a symptom of extreme agitation or rage.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "858bf5b6-f771-4672-aaf5-8e4992350d1c",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "nauseavomiting"
                    },
                    "title": "Nausea/Vomiting (Y/N)",
                    "description": "Nausea/Vomiting (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "b996bdd3-1748-48a0-8348-a24feb4ea74f",
                    "type": {
                        "namespace": "economy",
                        "name": "childsupportamount"
                    },
                    "title": "Amount of child support",
                    "description": "Specific amount of child support received.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "a9c96e5a-fb7c-44d3-ad32-44b25cdfdbd3",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "cfscasenumber"
                    },
                    "title": "CFS Case Number",
                    "description": "CFS Case Number",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "9177cb91-4596-4efc-b9f2-2335528c3376",
                    "type": {
                        "namespace": "vehicle",
                        "name": "licenseyear"
                    },
                    "title": "License Plate Year",
                    "description": "License plate year of expiration",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "1b959654-02fd-487b-adc3-eb6049a878ff",
                    "type": {
                        "namespace": "economy",
                        "name": "publicassistanceamount"
                    },
                    "title": "Public assistance ($)",
                    "description": "The amount of general public assistance received.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "93b8b60b-bcfc-4778-99b8-8c57ce6cb502",
                    "type": {
                        "namespace": "vehicle",
                        "name": "model"
                    },
                    "title": "Model",
                    "description": "Model of device or vehicle",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "b2ba8787-68b4-448a-84a7-04acaf6ad4d5",
                    "type": {
                        "namespace": "housing",
                        "name": "assessmentid"
                    },
                    "title": "Housing Resident Assessment ID",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "a9b8fbd1-7da0-43fc-8f87-47135cd9d4c0",
                    "type": {
                        "namespace": "cardiovascular",
                        "name": "chestpaintext"
                    },
                    "title": "Chest Pain (description)",
                    "description": "Additional text descriptions of chest pains.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "0b68c2cd-4c03-43e6-b1c8-fe6187b0eae3",
                    "type": {
                        "namespace": "datetime",
                        "name": "arrived"
                    },
                    "title": "Time arrived",
                    "description": "Time arrived (i.e., from a dispatch call).",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "06acbbb5-2c9d-4e6c-a440-a3efa4f4f00e",
                    "type": {
                        "namespace": "housing",
                        "name": "previousresidencelengthofstay"
                    },
                    "title": "Length of stay at previous residence (-d)",
                    "description": "The length of stay at one's previous residence.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "a866612a-2316-4b18-88c1-e19ce9a01f01",
                    "type": {
                        "namespace": "ol",
                        "name": "goodtimePCT"
                    },
                    "title": "Good time percentage",
                    "description": "Percentage of good time in a jailstay.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Double",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e4460db5-2d4d-435d-a03b-30a5276088a3",
                    "type": {
                        "namespace": "reproductive",
                        "name": "id"
                    },
                    "title": "Reproductive assessment ID",
                    "description": "Unique ID for medical reproductive assessment",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "dc583559-550f-40a3-8c89-81a6170ab636",
                    "type": {
                        "namespace": "biomedical",
                        "name": "id"
                    },
                    "title": "biomedical ID",
                    "description": "Unique ID for a biomedical assessment.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "85806174-c305-483d-8e18-1bf8f6d5ca39",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "firedistrictname"
                    },
                    "title": "Fire District",
                    "description": "Name of Fire District",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "5c480eb6-f799-46d0-98ef-c5f43678a616",
                    "type": {
                        "namespace": "cardiovascular",
                        "name": "id"
                    },
                    "title": "Cardiovascular ID",
                    "description": "Unique ID for cardiovascular assessment",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "80c3ffc7-5a8a-4547-8d60-dfb0b06e92b4",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "weaponspresent"
                    },
                    "title": "Weapons present",
                    "description": "Whether weapons are found during an arrest or incident.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "ad4b2034-16f9-4394-89f7-5614f33e920c",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "diarrhea"
                    },
                    "title": "Diarrhea (Y/N)",
                    "description": "Diarrhea (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "5de22760-733b-4239-abf7-fa445e658e90",
                    "type": {
                        "namespace": "cardiovascular",
                        "name": "myocardialinfarction"
                    },
                    "title": "Myocardial Infarction (Y/N)",
                    "description": "MyocardialInfarction (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "94a8a61c-93cb-4284-82dd-06d36fb3fc81",
                    "type": {
                        "namespace": "ol",
                        "name": "juvenileholdauth"
                    },
                    "title": "Juvenile Holding Authority",
                    "description": "Juvenile Holding Authority.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "16d201e5-f74a-4102-b1f7-5e536a327a25",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "ulcers"
                    },
                    "title": "Ulcers (Y/N)",
                    "description": "Ulcers (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "7ac3c170-7088-4765-bd23-6ec1d02f2d5f",
                    "type": {
                        "namespace": "ol",
                        "name": "howreported"
                    },
                    "title": "How reported",
                    "description": "Description of how a certain event was reported.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "1256d3f4-2a83-44d0-8b1d-389803b28314",
                    "type": {
                        "namespace": "datetime",
                        "name": "enroute"
                    },
                    "title": "En-route date-time",
                    "description": "EnRoute DateTime",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "15092289-b597-403a-b238-325ecdeb1974",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchpersontypedescription"
                    },
                    "title": "Dispatch Person Type Description",
                    "description": "Dispatch person-type description (i.e., driver, witness, reported).",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "43a6df96-1cb8-4daa-9a82-f9361b8777c7",
                    "type": {
                        "namespace": "vehicle",
                        "name": "licensenumber"
                    },
                    "title": "License Number",
                    "description": "A license number",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "4dfd7e4f-207a-4591-8cf3-2e5c9c7d0e53",
                    "type": {
                        "namespace": "location",
                        "name": "apartment"
                    },
                    "title": "Apartment or dwelling unit information",
                    "description": "Identifying information on apartment, room, or other dwelling unit",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "f3b41e19-d1e9-4004-8763-b514a93983d2",
                    "type": {
                        "namespace": "ol",
                        "name": "datetime_release"
                    },
                    "title": "Date-Time Release (-d)",
                    "description": "Date of release or discharge (i.e., from jail).",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Date",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "7064b696-d3ac-4ca7-9340-8e9db996b36e",
                    "type": {
                        "namespace": "ol",
                        "name": "caseid"
                    },
                    "title": "ID of case.",
                    "description": "ID of case.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "6e22d468-4977-4bec-8b87-9a9a9b10963e",
                    "type": {
                        "namespace": "ol",
                        "name": "projectedreleasedatetime"
                    },
                    "title": "Projected Release Datetime",
                    "description": "Datetime for the projected release.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "bca1d47b-abbb-4755-a06c-2e1c15bea118",
                    "type": {
                        "namespace": "housing",
                        "name": "nightbeforeinstreetorshelter"
                    },
                    "title": "Previous night on street/in shelter",
                    "description": "Whether one has spent the previous night on the streets or in a shelter.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "062fd4f6-30c0-4a4a-a221-18bb1da2cb88",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "suspectalcohol"
                    },
                    "title": "Suspect alcohol level",
                    "description": "Suspect alcohol aevel",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "dbf8c083-c8d7-47d3-bc4b-e91baaeef526",
                    "type": {
                        "namespace": "health",
                        "name": "domesticviolenceoccurrence"
                    },
                    "title": "Time of domestic violence",
                    "description": "The time period where domestic violence occurred.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "471a09ff-645d-4d44-841e-ae35c3884cb7",
                    "type": {
                        "namespace": "respiratory",
                        "name": "testedfortuberculosis"
                    },
                    "title": "Tested for Tuberculosis (Y/N)",
                    "description": "Tested for Tuberculosis (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "f2357864-38c4-4d46-bbda-6f7abd2928b0",
                    "type": {
                        "namespace": "endocrine",
                        "name": "haspersonalinsulin"
                    },
                    "title": "Has personal insulin (Y/N)",
                    "description": "Check of whether a patient has personal insulin if diabetic. (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "fba8f114-981a-4e92-a483-0d2c25d3d4a4",
                    "type": {
                        "namespace": "cardiovascular",
                        "name": "heartdiseasetext"
                    },
                    "title": "Heart Disease (description)",
                    "description": "Additional text descriptions of heart disease.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "00e11d1a-5bd7-42bd-89a5-a452d4f6337e",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "assignedofficer"
                    },
                    "title": "Assigned Officer",
                    "description": "Assigned Officer",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "2a590340-a360-4456-af81-949f6d490a88",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "releasetofacility"
                    },
                    "title": "Released to Facility",
                    "description": "An institution from which an individual is to be released.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "10aa082b-7173-44ca-a00f-d629b874b598",
                    "type": {
                        "namespace": "economy",
                        "name": "childsupport"
                    },
                    "title": "Child support (Y/N)",
                    "description": "Whether one receives child support (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "132820b9-6f20-40c8-945f-9ca2ec45e233",
                    "type": {
                        "namespace": "location",
                        "name": "zip"
                    },
                    "title": "Zip",
                    "description": "A zip",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "a962a8ba-2c4c-4110-92b5-dc37c0d02e22",
                    "type": {
                        "namespace": "economy",
                        "name": "anyincomesources"
                    },
                    "title": "Income sources",
                    "description": "The specified sources of any income received.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "d673e32c-6e67-4885-8e30-47e98f6229f2",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "nibrs"
                    },
                    "title": "NIBRS offense code",
                    "description": "NIBRS offense code, if available.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "7c0f56bb-e77c-4a2a-8e17-4542849aeeda",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "personid"
                    },
                    "title": "Justice Involved Person ID",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "88acd844-6aa1-4256-995c-8b67d2dd8201",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchhowreported"
                    },
                    "title": "How Reported (dispatch call)",
                    "description": "How a dispatch call was reported",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "9d30c278-13cd-47c5-9e20-d677facced23",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "assignedofficerid"
                    },
                    "title": "Assigned Officer ID",
                    "description": "Assigned Officer ID",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "60067ff0-31bb-47d9-97f1-fd3b89e36045",
                    "type": {
                        "namespace": "neurological",
                        "name": "id"
                    },
                    "title": "Neurological ID",
                    "description": "Unique ID for neurological assessment",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "b63ac291-3a26-4d99-8677-1e1c0f5c44da",
                    "type": {
                        "namespace": "housing",
                        "name": "projecttype"
                    },
                    "title": "Project type",
                    "description": "A housing project type.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "aa6b31ce-f283-426c-b0e9-8bc4e459d4c5",
                    "type": {
                        "namespace": "health",
                        "name": "chroniccondition"
                    },
                    "title": "Chronic condition (Y/N)",
                    "description": "Whether one has a chronic condition (Y/N). ",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "5a7afac3-471b-4b5a-8d58-d7748f0f2525",
                    "type": {
                        "namespace": "economy",
                        "name": "anyincomeamount"
                    },
                    "title": "Any Income ($) (-d)",
                    "description": "Specified income amount received from any source.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "f319ce78-ba6a-495b-a681-b743c3d16cbc",
                    "type": {
                        "namespace": "ol",
                        "name": "limitations"
                    },
                    "title": "Limitations",
                    "description": "Lmitations",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "6557a4f5-1193-4a0f-a1d1-54f23c33722a",
                    "type": {
                        "namespace": "ol",
                        "name": "goodtimeminutes"
                    },
                    "title": "Good time minutes",
                    "description": "Number of good minutes in a jailstay (in addition to days/hours).",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Int16",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "bf828c73-2ea9-4d4e-be40-ae9702e64b21",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "personnelstatus"
                    },
                    "title": "Personnel status",
                    "description": "Active or inactive employees (i.e., former employees)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "d4b56cef-e578-4200-a14d-34709cbda5ae",
                    "type": {
                        "namespace": "skin",
                        "name": "diabeticfootchecksdescription"
                    },
                    "title": "Diabetic foot checks description",
                    "description": "Diabetic foot checks description",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "3677e8ea-5da9-41f3-8b56-006548564eac",
                    "type": {
                        "namespace": "location",
                        "name": "street"
                    },
                    "title": "Street Address",
                    "description": "Location or Address Line 1 - A Street Address ",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "3bdb9a7d-507c-4b7e-b728-cb3d4b96d837",
                    "type": {
                        "namespace": "health",
                        "name": "chronicdisability"
                    },
                    "title": "Chronic disability (Y/N)",
                    "description": "Whether one has a chronic disability (Y/N).",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "aff55df1-9a46-4229-b17c-25e56c5ec3bc",
                    "type": {
                        "namespace": "musculoskeletal",
                        "name": "id"
                    },
                    "title": "musculoskeletal ID",
                    "description": "Unique ID for musculoskeletal assessments",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "afe0e263-adf3-4803-9053-2566f0220075",
                    "type": {
                        "namespace": "vehicle",
                        "name": "style"
                    },
                    "title": "Style",
                    "description": "Vehicle Style",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "d08410b0-5e37-4fef-a29a-fbc30a7cd9db",
                    "type": {
                        "namespace": "cardiovascular",
                        "name": "swellingofextremitiestext"
                    },
                    "title": "Swelling of Extremities (description)",
                    "description": "Additional text descriptions of any swelling of extremities.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "065a9db9-6fcd-400e-ac26-a969521c386a",
                    "type": {
                        "namespace": "ol",
                        "name": "weight"
                    },
                    "title": "Weight of a person.",
                    "description": "Weight of a person.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Int16",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "ffcf42d0-4134-4430-9f8f-d76cca10b9f2",
                    "type": {
                        "namespace": "ol",
                        "name": "goodtimehours"
                    },
                    "title": "Good time hours",
                    "description": "Number of good minutes in a jailstay (in addition to days).",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Int16",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c2e168ac-ded5-4f00-b282-e2896e394ab1",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "unitid"
                    },
                    "title": "Unit ID",
                    "description": "A uniquely identifying string for a unit.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "9d2d4a0e-26af-46c8-b366-fd872dbc5506",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "officerbadgeid"
                    },
                    "title": "Officer Badge Identification",
                    "description": "Identification number for a law enforcement official.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "71ec1401-4765-4048-98c8-97b4b4a1703e",
                    "type": {
                        "namespace": "substance",
                        "name": "sobrietysupport"
                    },
                    "title": "Sobriety Support",
                    "description": "Description of any sobriety support.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "5470892c-00f4-4511-ab04-495b3061afa3",
                    "type": {
                        "namespace": "vehicle",
                        "name": "color"
                    },
                    "title": "Color",
                    "description": "Vehicle Color",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "fa6e9c4d-09bd-46bc-a7f8-c1ac7c5d820e",
                    "type": {
                        "namespace": "economy",
                        "name": "noncashbenefittypes"
                    },
                    "title": "Types of non-cash benefits",
                    "description": "The types of non-cash benefits one receives.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "ce71688f-7c1a-4e6f-b5cf-79e7f077a3f1",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchtransfervehicle"
                    },
                    "title": "Transfer Vehicle",
                    "description": "Transfer Vehicle",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "f668cb5f-fc16-45df-85d0-385d859bbdce",
                    "type": {
                        "namespace": "skin",
                        "name": "otherrashdermatitis"
                    },
                    "title": "Other Rash/Dermatitis (Y/N)",
                    "description": "Other Rash/Dermatitis (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c16ab352-3099-4579-b900-40d54fec44c6",
                    "type": {
                        "namespace": "event",
                        "name": "comments"
                    },
                    "title": "Comments",
                    "description": "Comments",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "f957cc01-1969-46b8-bd76-b8006142779b",
                    "type": {
                        "namespace": "ol",
                        "name": "levelstate"
                    },
                    "title": "State level of charge",
                    "description": "State level of charge.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "4f9a1ed5-377b-45d1-9014-2a7aafd76f74",
                    "type": {
                        "namespace": "medical",
                        "name": "allergyreactionseverity"
                    },
                    "title": "Allergy severity",
                    "description": "The severity level of an allergic reaction, e.g., mild, moderate, severe or moderate-to-severe.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e7ea04e3-5047-4d9c-9bbe-b0bffe2c9cd1",
                    "type": {
                        "namespace": "date",
                        "name": "booking"
                    },
                    "title": "Booking Date",
                    "description": "Date an individual was booked.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "733061ae-ea7a-4939-b423-03cfc7162c09",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "hepatitis"
                    },
                    "title": "Hepatitis (Y/N)",
                    "description": "Hepatitis  (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "acdef6c8-348d-4c66-9ec2-2a082e838786",
                    "type": {
                        "namespace": "economy",
                        "name": "earnedincomeamount"
                    },
                    "title": "Earned Income ($)",
                    "description": "Amount of earned income for an individual.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c0c9af36-5d4a-4e5c-a28f-a699c02f99e4",
                    "type": {
                        "namespace": "substance",
                        "name": "familymentalillnessperson"
                    },
                    "title": "Family history of mental illness (person)",
                    "description": "Family history of mental illness (person)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "37ff5f8d-3747-4242-8365-f9a09e239ea6",
                    "type": {
                        "namespace": "housing",
                        "name": "residencetype"
                    },
                    "title": "Residence type (housing)",
                    "description": "Housing residence type.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e0fda4d0-b19b-422c-a702-d30d9e89d024",
                    "type": {
                        "namespace": "respiratory",
                        "name": "shortnessofbreath"
                    },
                    "title": "Shortness of breath (Y/N)",
                    "description": "Shortness of breath (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "2d975f4a-a244-4651-909c-3f4eb7ec27cc",
                    "type": {
                        "namespace": "medical",
                        "name": "agefirstused"
                    },
                    "title": "Age of first use",
                    "description": "Age of first use (e.g., cigarettes)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Int32",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "31854afe-a16e-4d64-99cd-6bf21efe468b",
                    "type": {
                        "namespace": "ol",
                        "name": "sexoffender"
                    },
                    "title": "Sex offender (Y/N)",
                    "description": "Boolean indicator for sex offender.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "2216f875-9645-4786-b062-9ec3960e4630",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "jailid"
                    },
                    "title": "Jail ID",
                    "description": "Identifier for a jail.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "6606dbf5-3823-457e-a0bd-adad141e46e0",
                    "type": {
                        "namespace": "demographics",
                        "name": "hhsize"
                    },
                    "title": "Household size (-d)",
                    "description": "The size of a household (number of people).",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "03f4bf0e-53e4-46a5-9a02-e13d4015abd3",
                    "type": {
                        "namespace": "cardiovascular",
                        "name": "hypertension"
                    },
                    "title": "Hypertension (Y/N)",
                    "description": "Hypertension (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "8f8416fc-4cbd-42e0-8a8e-11b2f946fe19",
                    "type": {
                        "namespace": "cardiovascular",
                        "name": "myocardialinfarctiontext"
                    },
                    "title": "Myocardial Infarction (description)",
                    "description": "Additional text descriptions of a myocardial infarction.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c8a675e0-c45f-4343-a538-86d609223bd0",
                    "type": {
                        "namespace": "date",
                        "name": "admission"
                    },
                    "title": "Date of admission",
                    "description": "Date of admission.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "8c798836-862f-4a84-af8b-0c982b11dfae",
                    "type": {
                        "namespace": "vehicle",
                        "name": "make"
                    },
                    "title": "Make",
                    "description": "Make",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "502b0172-e6bf-42f1-a03f-ea9045909360",
                    "type": {
                        "namespace": "medical",
                        "name": "smokecigarettes"
                    },
                    "title": "Smoke cigarettes (Y/N)",
                    "description": "whether someone smokes cigarettes (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "bca0e150-9965-4e9f-9508-1efc4fdcf16e",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchsubzone"
                    },
                    "title": "Dispatch Subzone",
                    "description": "Dispatch SubZone",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e5c16bdb-bddb-4daa-9daf-89a99d227202",
                    "type": {
                        "namespace": "housing",
                        "name": "program"
                    },
                    "title": "Housing program",
                    "description": "A housing program.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "6e43eb85-276b-4855-b96c-24f701a58389",
                    "type": {
                        "namespace": "ol",
                        "name": "level"
                    },
                    "title": "Level",
                    "description": "Level",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e8f9026a-2494-4749-84bb-1499cb7f215c",
                    "type": {
                        "namespace": "location",
                        "name": "longitude"
                    },
                    "title": "Longitude (-d)",
                    "description": "Longitude",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Double",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "ed577cc3-f627-43d8-b17a-39d34480570d",
                    "type": {
                        "namespace": "cardiovascular",
                        "name": "chestpain"
                    },
                    "title": "Chest pain (Y/N)",
                    "description": "Chest pain (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "2080c6bb-5c37-4eb2-b629-3fe09b665d42",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchid"
                    },
                    "title": "Dispatch ID",
                    "description": "A string that uniquely identifies a call for service",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "9f97811b-fef5-434d-b3b2-9e72171a66b8",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "personnelid"
                    },
                    "title": " Employee ID",
                    "description": "Unique ID for an employee.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "78aa14bd-2816-4829-bfda-32cf970ab760",
                    "type": {
                        "namespace": "substance",
                        "name": "familyhistorymentalillness"
                    },
                    "title": "Family history of mental illness (Y/N)",
                    "description": "Family history of mental illness (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "8ae3214e-7e4f-47e8-b22f-adc718e60a5c",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "officerid"
                    },
                    "title": "Officer ID",
                    "description": "Officer ID",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "9bcfd1a5-804c-4bdd-a547-ad4494be4e1f",
                    "type": {
                        "namespace": "ol",
                        "name": "goodtimedays"
                    },
                    "title": "Good time days",
                    "description": "Number of good time/gain time days in a jailstay.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Int16",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "f7c87cb1-7ddd-4dec-b634-bef6f184a557",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "victimalcohol"
                    },
                    "title": "Victim alcohol level",
                    "description": "Victim alcohol level",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e96f4905-e323-47b6-be43-2a356fd82e08",
                    "type": {
                        "namespace": "location",
                        "name": "state"
                    },
                    "title": "State",
                    "description": "A state",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "0220af01-e45b-4d2c-b96f-bc16f058342d",
                    "type": {
                        "namespace": "ol",
                        "name": "sentencedays"
                    },
                    "title": "Sentence days",
                    "description": "Number of days of sentence.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Int16",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "8ae217a6-328c-40b9-8946-28c1d526748c",
                    "type": {
                        "namespace": "ol",
                        "name": "probationeligible"
                    },
                    "title": "Probation eligible",
                    "description": "Is the person eligable for probation?",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "91106b89-5842-48e4-a21f-ef923557c1b8",
                    "type": {
                        "namespace": "incident",
                        "name": "reporteddatetime"
                    },
                    "title": "Incident Reported Date-Time (deprecated)",
                    "description": "Reported date and time of a criminal justice incident",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "1f66b596-91d9-4477-929f-60fd5dbe1fdc",
                    "type": {
                        "namespace": "substance",
                        "name": "familyhistoryabuse"
                    },
                    "title": "Family history of substance abuse",
                    "description": "Family history of substance abuse (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "b8a5ac4e-a501-4186-9b64-908844fb8425",
                    "type": {
                        "namespace": "health",
                        "name": "physicaldisability"
                    },
                    "title": "Physical disability (Y/N)",
                    "description": "Whether one has a physical disability (Y/N).",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "b9170d9b-8265-452c-b9e8-ebeab5f7556f",
                    "type": {
                        "namespace": "date",
                        "name": "dayofweek"
                    },
                    "title": "Day Of Week",
                    "description": "Day of the week.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "b8fcea6c-fb18-4050-bb54-2fa86ea4dae1",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "disposition2"
                    },
                    "title": "Secondary Disposition",
                    "description": "Secondary disposition. IA includes CIT designation.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "148f7999-db89-49c0-b847-12d4ac92803b",
                    "type": {
                        "namespace": "medical",
                        "name": "allergyreactiontype"
                    },
                    "title": "Allergic reaction",
                    "description": "Types of allergic reactions such as rhinitis (hay fever), eczema, hives, asthma or anaphylaxis.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "ee3a7573-aa70-4afb-814d-3fad27cda988",
                    "type": {
                        "namespace": "general",
                        "name": "stringid"
                    },
                    "title": "Id (-d)",
                    "description": "A string that uniquely identifies an instance of an entity or association.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "04e9becf-0add-440b-b0da-f3cdf559c1d6",
                    "type": {
                        "namespace": "health",
                        "name": "physicaldisabilitydescription"
                    },
                    "title": "Physical disability description",
                    "description": "Details of a physical disability.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "a67bcbdd-f9e1-4830-9730-d88a419a693d",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "committingauthority"
                    },
                    "title": "Committing Authority",
                    "description": "Committing authority.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "8d52f9b7-fe9d-4d09-aec4-bbbfee74f714",
                    "type": {
                        "namespace": "person",
                        "name": "sexualorientation"
                    },
                    "title": "Sexual Orientation",
                    "description": "Sexual orientation.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "6900fcb7-f44d-4b65-b392-40617dea5fed",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "jailrecordid"
                    },
                    "title": "Jail record ID",
                    "description": "Unique ID for a jail record or stay.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c1eb6087-a4ec-441d-8c57-b1ac4fb2aebb",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "liverdiseasetext"
                    },
                    "title": "Liver Disease (description)",
                    "description": "Additional text descriptions of any liver disease.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "34888d10-4c3b-4400-9426-23dfc3d0f8e5",
                    "type": {
                        "namespace": "location",
                        "name": "Address"
                    },
                    "title": "FullAddress (-d)",
                    "description": "Unique ID via concatenation of street address, city, state, zip.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "1fe28610-d4f6-4608-99d4-0c2b6e805703",
                    "type": {
                        "namespace": "ol",
                        "name": "arrestcategory"
                    },
                    "title": "Arrest Category/Type",
                    "description": "An arrest category or type",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "3a109ac6-daa2-4a37-adbc-abb6a6c021f9",
                    "type": {
                        "namespace": "substance",
                        "name": "sobrietyaftercareplan"
                    },
                    "title": "Sobriety Aftercare Plan",
                    "description": "Description of any sobriety aftercare plan",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "8f992ecf-cf98-4768-8156-0a6c361de3f5",
                    "type": {
                        "namespace": "musculoskeletal",
                        "name": "fractureinjury"
                    },
                    "title": "Fracture/Injury (Y/N)",
                    "description": "Fracture/Injury (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "047e196d-695b-4568-8932-ca6932156b1b",
                    "type": {
                        "namespace": "housing",
                        "name": "admittedadults"
                    },
                    "title": "Admitted adults (#)",
                    "description": "Number of adults admitted to a housing program.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Int16",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "d146903f-9196-40b8-90ce-3a0e8e4557a5",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "timeserveddays"
                    },
                    "title": "Time Served: Days",
                    "description": "Time served: days",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Int32",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "22d68e05-8579-42b1-a188-c05bfe0773b7",
                    "type": {
                        "namespace": "housing",
                        "name": "chronicallyhomeless"
                    },
                    "title": "Chronically homeless (Y/N)",
                    "description": "Whether chronically homeless (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "19466bb0-eeba-4c69-9ab1-8999b3cb43bf",
                    "type": {
                        "namespace": "incident",
                        "name": "narrative"
                    },
                    "title": "Incident Narrative",
                    "description": "Incident Narrative",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e5721ba0-f64e-4c19-8e7f-fbb016555a65",
                    "type": {
                        "namespace": "ol",
                        "name": "masterbusinessnumber"
                    },
                    "title": "Phone number of master business.",
                    "description": "Phone number of master business.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "323de7c8-a374-4e45-ab0d-ff8b7fabe094",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchtypeclass"
                    },
                    "title": "Dispatch type class (-d)",
                    "description": "Dispatch type class",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "18f2e4c6-86ce-4f5d-ad8f-0eb018947371",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "commitnumber"
                    },
                    "title": "Commit number",
                    "description": "Commit number",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "b20557c8-6959-47b7-8377-7c4e351cbe79",
                    "type": {
                        "namespace": "vehicle",
                        "name": "id"
                    },
                    "title": "Vehicle ID",
                    "description": "A unique identifier for an vehicle",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "bce1d15e-25c6-414f-ba0f-74bf22d13028",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchzoneid"
                    },
                    "title": "Dispatch zone ID",
                    "description": "A dispatch zone's unique ID",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "9b2bd81e-51cc-44ce-9051-18d833762848",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "offenseid"
                    },
                    "title": "Offense ID (v2)",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "bf640c1d-bb84-4299-802d-338ee475fc32",
                    "type": {
                        "namespace": "endocrine",
                        "name": "diabetic"
                    },
                    "title": "Diabetic (Y/N)",
                    "description": "Diabetic (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "92fcd6e9-6839-42b4-83fa-47716b647ef6",
                    "type": {
                        "namespace": "housing",
                        "name": "admittedchildren"
                    },
                    "title": "Admitted children (#)",
                    "description": "Number of children admitted to a housing program.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Int16",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e404a3f0-3e98-412f-b146-52aa80ec98c2",
                    "type": {
                        "namespace": "ol",
                        "name": "typeclass"
                    },
                    "title": "Class of type.",
                    "description": "Class of type.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "1ceaf4eb-dace-4b3a-961e-e3fe4beb7c7c",
                    "type": {
                        "namespace": "housing",
                        "name": "lengthofstay"
                    },
                    "title": "Length of Stay (-d)",
                    "description": "Length of a housing stay.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Int32",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "55199d7d-b13e-4d7e-8e14-a50c7091942e",
                    "type": {
                        "namespace": "ol",
                        "name": "consecutive"
                    },
                    "title": "Consecutive jailstay (Y/N)",
                    "description": "A boolean indicating whether the person is doing consecutive sentences.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "39dc4d54-8fac-46ad-ae3d-e538123a9b30",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchpersontype"
                    },
                    "title": "Dispatch Person Type",
                    "description": "Dispatch Person Type",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "07dcc100-037d-4b6f-9062-35126b2f1318",
                    "type": {
                        "namespace": "housing",
                        "name": "programtype"
                    },
                    "title": "Program type (housing)",
                    "description": "A housing program category.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "915df70e-ebe3-4b59-9d4e-59c0609a5577",
                    "type": {
                        "namespace": "person",
                        "name": "juvenile"
                    },
                    "title": "Juvenile (Y/N)",
                    "description": "Flag for whether someone is a juvenile.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "fed877c8-eb2a-4714-92c8-3b586bd2c4e7",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "bleedingtext"
                    },
                    "title": "Gastrointestinal bleeding (description)",
                    "description": "Additional text descriptions of gastrointestinal bleeding.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "1db0650e-8a68-4c6c-8b3a-fd7b89aabedd",
                    "type": {
                        "namespace": "economy",
                        "name": "anyincome"
                    },
                    "title": "Any income (Y/N)",
                    "description": "Whether one receives income of any kind. ",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "126c3754-281f-4c88-83ef-3c8c78198d5b",
                    "type": {
                        "namespace": "economy",
                        "name": "noncashbenefits"
                    },
                    "title": "Non-cash benefits (Y/N)",
                    "description": "Whether one receives non-cash benefits (Y/N). ",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "a6487f5b-5212-4726-a5cd-4ddbf8f8355b",
                    "type": {
                        "namespace": "housing",
                        "name": "indivorfamilytype"
                    },
                    "title": "Individual/family type",
                    "description": "Categories of individuals and families (i.e., adult couple without children, individual female, male household member).",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c97555a0-ed79-4944-a000-ab961da3ab48",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "ncic"
                    },
                    "title": "Offense NCIC Code",
                    "description": "Offense NCIC Code",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "5d37978a-b658-462a-8903-4a9a2d2d69e3",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "arrestagency"
                    },
                    "title": "Arrest Agency",
                    "description": "Arresting Agency",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "f9398bdd-3f01-4628-9e3d-1c0bf7ed098e",
                    "type": {
                        "namespace": "vehicle",
                        "name": "year"
                    },
                    "title": "Year",
                    "description": "Vehicle Year",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c2b18c7a-6625-4a31-8196-a8d3cb0e3309",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "beatsector"
                    },
                    "title": "Police beat",
                    "description": "Police beat",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "fb03ce47-10b5-4d39-8ccf-96e868a7f1e9",
                    "type": {
                        "namespace": "housing",
                        "name": "nextsteps"
                    },
                    "title": "Next steps for client (housing)",
                    "description": "Next steps for client",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "656ded15-4503-4623-977f-b1188a64cafa",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "cautioninformation"
                    },
                    "title": "Caution",
                    "description": "A description of cautions about a person's potential for dangerous behavior when contacted.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "60bcb7e1-297a-4631-bb69-11d54362fa6a",
                    "type": {
                        "namespace": "nutritional",
                        "name": "id"
                    },
                    "title": "Nutritional ID",
                    "description": "Unique identifier for a nutritional assessment",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "999dbc43-519f-43b2-8119-73a2ef196bf5",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "cadnumber"
                    },
                    "title": "Cad number (v2)",
                    "description": "A police CAD call number",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "6519f480-7aaf-496c-825b-3b325d12bb85",
                    "type": {
                        "namespace": "ol",
                        "name": "concurrent"
                    },
                    "title": "Concurrent jailstay/sentence (#)",
                    "description": "Number of concurrent sentences.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Int16",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "56b657d7-22c1-4a69-911c-9d7bb915f11f",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "unitname"
                    },
                    "title": "Unit name",
                    "description": "Unit name, if provided - i.e., \"Fire Engine 1\".",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c228a9c8-e0f3-4bb0-8b09-78b2c6162caa",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "localstatute"
                    },
                    "title": "Offense Local Statute",
                    "description": "Offense Local Statute",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "f6f98745-c2b0-468f-89a6-7b57a69f104b",
                    "type": {
                        "namespace": "ol",
                        "name": "eyecolor"
                    },
                    "title": "Eye Color",
                    "description": "Eye Color",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "1c8ab6f0-e77b-42da-8140-becc02e6fd19",
                    "type": {
                        "namespace": "respiratory",
                        "name": "historyoftuberculosis"
                    },
                    "title": "History of Positive TB (Y/N)",
                    "description": "History of Positive TB (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "01c9ad01-1403-4d35-8764-e15c048a38e5",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchemsflag"
                    },
                    "title": "CFS EMS",
                    "description": "Call for service (CFS) EMS flag",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "f8c070a6-6315-494d-b8b8-f413e2ace393",
                    "type": {
                        "namespace": "economy",
                        "name": "earnedincome"
                    },
                    "title": "Earned income (Y/N)",
                    "description": "Whether one has earned income (Y/N).",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "6335ec93-dd81-4106-b44b-faafce66b209",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchnumber"
                    },
                    "title": "Dispatch number",
                    "description": "Dispatch number",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "7008752d-b95f-4557-ac7a-17deb450bf74",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchemdtype"
                    },
                    "title": "EMD Type",
                    "description": "EMD Type",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c5397609-0124-4c54-8ec9-79f82341d19d",
                    "type": {
                        "namespace": "housing",
                        "name": "monthshomelessorinshelterinpast3yrs"
                    },
                    "title": "Months homeless/in shelter in past 3 years (-d)",
                    "description": "Total number of months homeless or in a shelter in the past 3 years.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "293be234-531d-4253-82bc-57498395138c",
                    "type": {
                        "namespace": "health",
                        "name": "fleeingdomesticviolence"
                    },
                    "title": "Fleeing domestic violence (Y/N)",
                    "description": "Whether one is fleeing domestic violence. ",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "860fed9c-f446-4492-926b-d87d9daffd50",
                    "type": {
                        "namespace": "ol",
                        "name": "problematic"
                    },
                    "title": "Problematic (Y/N)",
                    "description": "Problematic (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "8d7889be-f23c-42a9-811b-f72a3671d1a1",
                    "type": {
                        "namespace": "ol",
                        "name": "reasonheld"
                    },
                    "title": "Reason held",
                    "description": "Reason person is held.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "5387dee7-1d50-4ffb-9a9e-b86ef1bc3b34",
                    "type": {
                        "namespace": "cardiovascular",
                        "name": "palpitationstext"
                    },
                    "title": "Palpitations (description)",
                    "description": "Additional text descriptions of any chest palpitations.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e6cdba08-218f-427b-9aa8-ebfcbd5c148a",
                    "type": {
                        "namespace": "housing",
                        "name": "dischargereason"
                    },
                    "title": "Discharge Reason",
                    "description": "The reason a person was dicharged",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "69e35893-76ac-4bf2-9c04-6c7d5f683c8b",
                    "type": {
                        "namespace": "skin",
                        "name": "headpediculidescription"
                    },
                    "title": "Head Pediculi description",
                    "description": "Head Pediculi description",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "eabab409-8ce7-499f-a4fb-d71356ada13b",
                    "type": {
                        "namespace": "incident",
                        "name": "startdatetime"
                    },
                    "title": "Start date-time",
                    "description": "The  date and time a  criminal justice incident was reported to start. If no separate end date is reported, this is simply the date the incident occurred.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "c9309ba8-a674-48c5-bfee-8bb797f9fe31",
                    "type": {
                        "namespace": "arrestedin",
                        "name": "id"
                    },
                    "title": "Arrested In ID",
                    "description": "Unique ID for arrested in association.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "27246bfa-7496-4b8b-a5d5-aaf2398108dc",
                    "type": {
                        "namespace": "economy",
                        "name": "anyincometimeunit"
                    },
                    "title": "Any income (unit time)",
                    "description": "The unit time (i.e., monthly,  weekly) that accompanies a specified amount of income from any source.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "f3915242-b151-4fd0-822c-6465c330e791",
                    "type": {
                        "namespace": "skin",
                        "name": "trackmarks"
                    },
                    "title": "Needle track marks (Y/N)",
                    "description": "Needle track marks (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "686bb9d4-766d-4ff5-bf63-a0d43bd6e9fc",
                    "type": {
                        "namespace": "vehicle",
                        "name": "vin"
                    },
                    "title": "VIN",
                    "description": "Vehicle VIN",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "a5fe6140-c95a-4867-8377-5edc90f74364",
                    "type": {
                        "namespace": "neurological",
                        "name": "historyofdizziness"
                    },
                    "title": "History of dizziness (Y/N)",
                    "description": "History of dizziness (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "66ff6445-bf61-44e9-a661-32810e4a8025",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "nauseavomitingtext"
                    },
                    "title": "Nausea/Vomiting (description)",
                    "description": "Additional text descriptions of any nausea and/or vomiting.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "d36bce87-c279-422d-826d-ea9ca95397a5",
                    "type": {
                        "namespace": "neurological",
                        "name": "extremitiesnumbnesstingling"
                    },
                    "title": "Numbness/Tingling in Extremities (Y/N)",
                    "description": "Numbness/Tingling in Extremities (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "3ca03e79-6b50-4fc4-94a0-17b25eabae34",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "incidentid"
                    },
                    "title": "Incident ID (v2)",
                    "description": "Unique ID for a criminal justice incident",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "18a2c775-3929-4937-b85b-758e66522d8d",
                    "type": {
                        "namespace": "substance",
                        "name": "type"
                    },
                    "title": "Substance Type",
                    "description": "Substance type (i.e., alcohol, opioids)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "78916b55-22fe-4ed8-bde6-b819f4114dc9",
                    "type": {
                        "namespace": "economy",
                        "name": "employmentstatus"
                    },
                    "title": "Employment Status",
                    "description": "One's employment status.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "cd901bfa-d785-4d96-8969-6df2fb69f04e",
                    "type": {
                        "namespace": "offense",
                        "name": "reporteddate"
                    },
                    "title": "Offense reported date",
                    "description": "Date-time and offense is reported.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "10839c42-2252-4630-ab22-a9752333a601",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchtype"
                    },
                    "title": "Dispatch Type",
                    "description": "Dispatch Type",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "07af6083-b1ff-43c5-b11b-22a14b735417",
                    "type": {
                        "namespace": "skin",
                        "name": "otherrashdermatitisdescription"
                    },
                    "title": "Other Rash/Dermatitis Description",
                    "description": "Other Rash/Dermatitis Description",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e785d73d-5ae9-4880-988b-6ce6b364b814",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "cad_masterbusinessnumber"
                    },
                    "title": "Master Business Number",
                    "description": "Master Business Number found in CAD systems",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "62c82f33-295a-4437-8a3c-2d409c1e2224",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "bailingperson"
                    },
                    "title": "Person Posting Bail",
                    "description": "A person who posted bond for another person.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "6675a7e8-2159-41b1-9431-4053690fa3c9",
                    "type": {
                        "namespace": "date",
                        "name": "completeddatetime"
                    },
                    "title": "Completed / submitted datetime",
                    "description": "Completed date & time of an occurrence, or datetime at which an entity (usually an association) was submitted.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "cebc61bf-9052-4e11-99af-3aa3113688a8",
                    "type": {
                        "namespace": "contact",
                        "name": "phonenumber"
                    },
                    "title": "Phone Number",
                    "description": "Phone number",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "13ad1d8a-24da-4c5d-9168-018d33979007",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "incidentflag"
                    },
                    "title": "Incident flag",
                    "description": "Generic field to accommodate PD-specific flags.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "8ab6e5e1-9ef7-4e83-94f1-2ad685c75915",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "bookingnumber"
                    },
                    "title": "Booking number",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "49b25d0a-e874-4308-9013-db5d178638da",
                    "type": {
                        "namespace": "neurological",
                        "name": "historyofseizures"
                    },
                    "title": "History of seizures (Y/N)",
                    "description": "History of seizures (Y/N)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Boolean",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "16eae16e-b1f1-404c-94af-a644f5ca4cc2",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "medicalzone"
                    },
                    "title": "Medical Zone",
                    "description": "A medical zone, sometimes referred to in dispatch calls also.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "81b3073b-e01f-4b69-9b64-03fcea0ccab7",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "inmateid"
                    },
                    "title": "Inmate ID",
                    "description": "Inmate ID",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "d8d5cd4c-0262-4dbe-b446-97dc913a4b3b",
                    "type": {
                        "namespace": "person",
                        "name": "gender"
                    },
                    "title": "Gender",
                    "description": "Gender - this is not a binary variable. As opposed to biological sex (e.g., sex at birth, M/F), 'gender' is typically used with reference to social and cultural differences rather than biological ones. This field may contain values such as male, female, nonbinary (NB), transexual, etc.    AKA gender presentation, gender orientation.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "8cf711e4-5a75-4d02-84be-efc2611191eb",
                    "type": {
                        "namespace": "health",
                        "name": "hivpositive"
                    },
                    "title": "HIV positive",
                    "description": "Whether one is HIV positive (Y/N).",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "f1f72490-acfe-4261-bdb7-5109d1cb1f6e",
                    "type": {
                        "namespace": "musculoskeletal",
                        "name": "fractureinjurydescription"
                    },
                    "title": "Fracture/Injury Description",
                    "description": "Fracture/Injury Description",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "d5cd8ae6-f0de-48fe-9139-89108adedc19",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "releasenotes"
                    },
                    "title": "Release Notes",
                    "description": "Discharge/release reason, comments, or notes.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "58892bfc-3700-49d3-b35e-dbe15fe8cb17",
                    "type": {
                        "namespace": "vehicle",
                        "name": "secondarycolor"
                    },
                    "title": "Secondary color (vehicle)",
                    "description": "Secondary color of a vehicle.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "b4537358-a051-417a-832a-045d59c13b7f",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "disposition"
                    },
                    "title": "Disposition",
                    "description": "Disposition, or means of clearing",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                    "type": {
                        "namespace": "ol",
                        "name": "notes"
                    },
                    "title": "Notes",
                    "description": "Field for notes and other data",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "7c2953f9-babd-4ecf-9adf-fc20ff1f9fa9",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "bailbondamount"
                    },
                    "title": "Bond Amount",
                    "description": "The dollar amount of a bond.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "1df87330-510d-421d-9731-b8412e68632c",
                    "type": {
                        "namespace": "gastrointestinal",
                        "name": "ulcerstext"
                    },
                    "title": "Ulcers (description)",
                    "description": "Additional text about any ulcers.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "5f122ec5-f8cd-4618-8bfa-3f387141616c",
                    "type": {
                        "namespace": "incident",
                        "name": "enddatetime"
                    },
                    "title": "End date-time",
                    "description": "The  date and time an incident, jail stay, or other event was reported to end.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e3b223ce-4f91-4125-be4d-ec7371382823",
                    "type": {
                        "namespace": "ol",
                        "name": "date_projectedrelease"
                    },
                    "title": "Projected Release Date",
                    "description": "Date a person is anticipated to complete service of final sentence, automatically or manually calculated, based on current sentence information.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "Date",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "e32ceae7-c00b-4e9f-bf98-0f03e94fb566",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "heldat"
                    },
                    "title": "Held At",
                    "description": "Authority, jail or institution a person is held at.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "3f52e7f5-57fa-4a29-93bb-6fe5e7e3f327",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchfireflag"
                    },
                    "title": "CFS Fire",
                    "description": "Flag field for a fire in a call for service. ",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "25431c60-6c26-4210-a422-569c5226ba7e",
                    "type": {
                        "namespace": "location",
                        "name": "address"
                    },
                    "title": "Unparsed location address",
                    "description": "Location of an event",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "afda612c-a914-4efc-bdb8-7511fdc18b8e",
                    "type": {
                        "namespace": "substance",
                        "name": "familyabuseperson"
                    },
                    "title": "Family history of substance abuse (person)",
                    "description": "Family history of substance abuse (person)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "6dd08404-92fc-485f-af92-806c83bffece",
                    "type": {
                        "namespace": "substance",
                        "name": "periodsofsobriety"
                    },
                    "title": "Periods Of Sobriety",
                    "description": "Description of any periods of sobriety.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "a07f05f9-b19d-4e96-9851-c098bfed5050",
                    "type": {
                        "namespace": "health",
                        "name": "developmentaldisability"
                    },
                    "title": "Developmental disability (Y/N)",
                    "description": "Whether one has a developmental disability (Y/N).",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "2a45205e-703c-43eb-a060-921bf7245f6a",
                    "type": {
                        "namespace": "ol",
                        "name": "status"
                    },
                    "title": "General Status",
                    "description": "Status  (e.g., status of condition - active/present, inactive, resolved, in remission)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "736818e8-0ad9-4c83-8b53-3e00005fed2b",
                    "type": {
                        "namespace": "datetime",
                        "name": "alerted"
                    },
                    "title": "Alerted date-time",
                    "description": "A CFS Alerted DateTime",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "DateTimeOffset",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "13c7f654-085d-4cd0-9db2-674df9c69dda",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatch911callnumber"
                    },
                    "title": "911 Call Number",
                    "description": "911 Call Number",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                },
                {
                    "id": "a81d9aa4-a664-4efc-ab19-87612a3cd198",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "firedistrictcode"
                    },
                    "title": "Fire District code",
                    "description": "A fire district code in dispatch data.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "datatype": "String",
                    "piiField": false,
                    "multiValued": true,
                    "analyzer": "STANDARD",
                    "indexed": "NONE"
                }
            ],
            "entityTypes": [
                {
                    "id": "4c6bca41-6660-45ab-ab8c-7f88cd9d6d70",
                    "type": {
                        "namespace": "ol",
                        "name": "unit"
                    },
                    "title": "A unit",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "671621a2-6173-4bb4-aafa-a7a69d402563",
                    "type": {
                        "namespace": "ol",
                        "name": "identification"
                    },
                    "title": "An identification (ID card, driver's license,...)",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "e96f4905-e323-47b6-be43-2a356fd82e08",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "0f10a3f1-a020-4367-a261-750d979abfca",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "e8174f66-4b80-4f8c-bcd3-2924d5ccd6d7",
                        "faf3c011-b386-4c51-a1bb-4bad27b4083f"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "34836b35-76b1-4ecf-b588-c22ad19e2378",
                    "type": {
                        "namespace": "general",
                        "name": "participatedin"
                    },
                    "title": "Participated in",
                    "description": "Association 'participated in'",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                        "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                        "2a45205e-703c-43eb-a060-921bf7245f6a"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "34aeaca4-d424-43cd-a3b4-f2032d583280",
                    "type": {
                        "namespace": "ol",
                        "name": "subjectof"
                    },
                    "title": " is subject of",
                    "description": "(Person) is subject of ...",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "782b8d93-af16-423c-ae6d-8841ac60d752",
                    "type": {
                        "namespace": "ol",
                        "name": "sentence"
                    },
                    "title": "A sentence.",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "0d240f48-9347-46f7-a79e-b11ffdece2a8",
                        "55199d7d-b13e-4d7e-8e14-a50c7091942e",
                        "6519f480-7aaf-496c-825b-3b325d12bb85",
                        "8ae217a6-328c-40b9-8946-28c1d526748c",
                        "e652629a-70e0-458a-ae9f-02ca600d0360",
                        "0220af01-e45b-4d2c-b96f-bc16f058342d",
                        "21f5b00c-284a-4b45-bc37-355649bbb4f0",
                        "8538506a-3dba-4bb9-95b5-1e4ed9e00eb9",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "448c6ce4-d1db-4f21-9f5b-41f325fe4311",
                        "2a45205e-703c-43eb-a060-921bf7245f6a"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "42c87ead-3038-4682-961c-5dd079071786",
                    "type": {
                        "namespace": "ol",
                        "name": "booking"
                    },
                    "title": "A booking.",
                    "description": "A booking (in jail or associated with an arrest).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "57d24585-7aec-43b7-b0f9-4162321366de",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "8ce79ba8-b498-460a-a1b3-325954bb6d4f",
                        "f7f01aa6-159a-435f-901b-44e62679bc51",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "24f9de48-5c58-4697-a68c-fe156bfa3c3c",
                        "55bd8483-ae7e-466f-88bd-84d67160bd3f",
                        "a5753546-902d-4eb0-8914-e014487138e4",
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                        "b9170d9b-8265-452c-b9e8-ebeab5f7556f"
                    ],
                    "propertyTags": {
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00": [
                            "timeline",
                            "eventdate"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "9912f936-b36c-458d-aa13-61c914df1ed2",
                    "type": {
                        "namespace": "ol",
                        "name": "worksat"
                    },
                    "title": "(Person) works at (agency/organization/...).",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "50ce2984-8e2c-4c15-82cc-99aac72ee628",
                    "type": {
                        "namespace": "ol",
                        "name": "assignedto"
                    },
                    "title": "Assigned to",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "19d53b9f-7f5a-4ad8-8f8c-8548032af2b3",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "involvedin"
                    },
                    "title": "Involved in (-d)",
                    "description": "\"Involved in\" association. Links together a call for service and a vehicle.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "2080c6bb-5c37-4eb2-b629-3fe09b665d42"
                    ],
                    "properties": [
                        "2080c6bb-5c37-4eb2-b629-3fe09b665d42"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "1bbc14f8-06cf-4cb0-a103-68ba9df08867",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "personnel"
                    },
                    "title": "Justice-Involved/Public Safety Employees",
                    "description": "Someone employed in criminal justice (i.e., officer, communications, jail guard) or public safety (i.e., fireman, EMT).",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "9f97811b-fef5-434d-b3b2-9e72171a66b8"
                    ],
                    "properties": [
                        "9f97811b-fef5-434d-b3b2-9e72171a66b8",
                        "a046320f-02a0-4443-b5a4-b6a9928c334b",
                        "8ae3214e-7e4f-47e8-b22f-adc718e60a5c",
                        "aa3f9865-e882-4363-9cef-5145f787b114",
                        "9d2d4a0e-26af-46c8-b366-fd872dbc5506",
                        "b916c940-9e7f-434d-b502-05fbdc2845b2",
                        "a773c790-6564-4e5a-8f83-fbb0f45bd7a9",
                        "bf828c73-2ea9-4d4e-be40-ae9702e64b21",
                        "43a6df96-1cb8-4daa-9a82-f9361b8777c7",
                        "5ea6e8d5-93bb-47cf-b054-9faaeb05fb27",
                        "8293b7f3-d89d-44f5-bec2-6397a4c5af8b",
                        "ac37e344-62da-4b50-b608-0618a923a92d",
                        "f0a6a588-aee7-49a2-8f8e-e5209731da30",
                        "9b55f541-416c-4ab2-8d6e-b30e547eecb4"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "10438ac7-5083-42c0-95b8-9ad5c4c6c87a",
                    "type": {
                        "namespace": "ol",
                        "name": "persondetailscriminaljustice"
                    },
                    "title": "Personal details (criminal justice)",
                    "description": "Personal details related to criminal justice.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "656ded15-4503-4623-977f-b1188a64cafa",
                        "cccdf498-4c90-4015-85c3-2a83536b705a",
                        "31854afe-a16e-4d64-99cd-6bf21efe468b",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "9bc02b4a-bc13-42a7-89a2-53c8500b2517",
                        "f393b40b-884b-45d6-a351-845cb31c46ba",
                        "f2c3c58f-e643-4990-9297-e0f009a67f86",
                        "56cd7bc4-3d81-4a81-a5e2-308c4678efc4",
                        "45aa6695-a7e7-46b6-96bd-782e6aa9ac13",
                        "2846a99b-daff-4f70-852a-091304ac49e9",
                        "cb92bd0b-0338-4f93-9936-e857e12be830"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "a8611fa4-64cc-469f-a7ea-b6bcf4daf28c",
                    "type": {
                        "namespace": "health",
                        "name": "reported"
                    },
                    "title": "Reported (-d)",
                    "description": "Linking a person/patient with various things they reported (medical history, allergies, etc.)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "6675a7e8-2159-41b1-9431-4053690fa3c9"
                    ],
                    "properties": [
                        "6675a7e8-2159-41b1-9431-4053690fa3c9"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "558ecd39-ae52-4ab3-ba28-74d93e5ade6a",
                    "type": {
                        "namespace": "geo",
                        "name": "getsmailat"
                    },
                    "title": "Gets Mail At -d",
                    "description": "An association that describes a mailing address.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "25431c60-6c26-4210-a422-569c5226ba7e",
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                    ],
                    "properties": [
                        "25431c60-6c26-4210-a422-569c5226ba7e",
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "f32f0c3e-ed80-4155-89b6-0baaba21eaee",
                    "type": {
                        "namespace": "ol",
                        "name": "employee"
                    },
                    "title": "Employee",
                    "description": "The purpose of this entity is to identify the type of relationship the employee has to the employer rather than the nature of the work actually performed. \nFor medical personnel, there will be some kind of natural identifier, and the Employee role has a considerable number of specific attributes (jobClass, salary, hazardExposure). Employee may be a Resource for personnel management, to define the relationship between person and his/her employer.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "2a45205e-703c-43eb-a060-921bf7245f6a",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "e729bfaf-929e-498e-b953-d24656a168f6",
                        "aa3f9865-e882-4363-9cef-5145f787b114",
                        "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "a86eff53-3558-4cce-88e9-403c509c157a",
                    "type": {
                        "namespace": "ol",
                        "name": "postedby"
                    },
                    "title": "posted by",
                    "description": "(Bail / bond /...) is posted by (Person).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "c8c1ef66-56da-43e1-a1b1-4b0a71d53968",
                    "type": {
                        "namespace": "ol",
                        "name": "bond"
                    },
                    "title": "Bond / bail",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "7c2953f9-babd-4ecf-9adf-fc20ff1f9fa9"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "5bf88cde-65bc-4865-a58b-920eec4c4028",
                    "type": {
                        "namespace": "ol",
                        "name": "involvedin"
                    },
                    "title": "Involved in",
                    "description": "(Person) is involved in (an event).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "1a99a9f7-c9fa-4cc9-9e29-1370c440f392",
                        "07488a0f-0096-4d4b-bdb2-fb50b3a03997",
                        "4e4d35e2-8dad-4af7-83f8-c28f983bffe2",
                        "58b549ca-62af-4e09-8624-4989f776d4d2",
                        "f7af5fb1-92de-495d-ac01-d3ab82081eb8",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "c5909ed6-5c9d-4016-b5ae-eba0008f4b2e",
                        "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                        "0ee3acba-51a7-4f8d-921f-e23d75b07f65",
                        "9e0ddd74-6881-44b3-a7d8-f98e9b45e02d"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "8a9e7698-a16e-4134-b63b-b3a379d0290b",
                    "type": {
                        "namespace": "health",
                        "name": "assessedby -d"
                    },
                    "title": "Assessed By (-d)",
                    "description": "Association linking a patient and the medical staff who assessed them. NOTE this FQN will be changed to general.assessedby later.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "6675a7e8-2159-41b1-9431-4053690fa3c9"
                    ],
                    "properties": [
                        "6675a7e8-2159-41b1-9431-4053690fa3c9",
                        "e9a0b4dc-5298-47c1-8837-20af172379a5",
                        "7b038634-a0b4-4ce1-a04f-85d1775937aa",
                        "e729bfaf-929e-498e-b953-d24656a168f6",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "03aac23e-56d5-4960-b739-fae7fa301a6e",
                    "type": {
                        "namespace": "ol",
                        "name": "appearsin"
                    },
                    "title": "Appears in",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "f7af5fb1-92de-495d-ac01-d3ab82081eb8",
                        "c5909ed6-5c9d-4016-b5ae-eba0008f4b2e",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "1a99a9f7-c9fa-4cc9-9e29-1370c440f392",
                        "07488a0f-0096-4d4b-bdb2-fb50b3a03997",
                        "4e4d35e2-8dad-4af7-83f8-c28f983bffe2",
                        "58b549ca-62af-4e09-8624-4989f776d4d2"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "22f294e5-f3f4-4317-8ff8-63528125c95f",
                    "type": {
                        "namespace": "ol",
                        "name": "chargedwith"
                    },
                    "title": "Charged With",
                    "description": "(Person) is charged with (A charge/offense).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "5d88ee83-3be4-4a04-9650-e7f1c48c3662",
                    "type": {
                        "namespace": "ol",
                        "name": "committedby"
                    },
                    "title": "Committed by",
                    "description": "(Person) is committed by (Authority) to jail.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "3e6d3232-6469-46ee-b437-aa0d0458a88e"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "892bce63-805e-4b45-b9b1-7eaea1c48f2f",
                    "type": {
                        "namespace": "ol",
                        "name": "jailstay"
                    },
                    "title": "Jail stay/record",
                    "description": "A jail stay/record.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "52722320-b04e-41ae-95b3-ec670256e0b9",
                        "94a8a61c-93cb-4284-82dd-06d36fb3fc81",
                        "d5cd8ae6-f0de-48fe-9139-89108adedc19",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "8d7889be-f23c-42a9-811b-f72a3671d1a1",
                        "eabab409-8ce7-499f-a4fb-d71356ada13b",
                        "d45d5c98-ef15-4c28-bb59-7367c293db58",
                        "14908e47-923a-4c87-8d94-5881bf871cc1",
                        "1901c0b0-f051-4660-8d6d-b5a040dc9dcb",
                        "cfea602e-9b53-4f10-8c2f-97173b77003d",
                        "92ecb196-23f1-4ab4-a8c3-084ccbcc151a",
                        "6e22d468-4977-4bec-8b87-9a9a9b10963e",
                        "e5471522-9ec6-46e1-8b91-56b7e9291605",
                        "1023b3ee-f2d4-4eea-84a5-824ce6fa1bc0",
                        "d16ed792-851b-42cb-9e82-246869355651",
                        "3e6d3232-6469-46ee-b437-aa0d0458a88e",
                        "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                        "d3450290-b346-4ce7-9bad-031c443d69de",
                        "e1e36ca8-84d0-4c52-9e8b-0de16a2e7943"
                    ],
                    "propertyTags": {
                        "3e6d3232-6469-46ee-b437-aa0d0458a88e": [
                            "timeline"
                        ],
                        "92ecb196-23f1-4ab4-a8c3-084ccbcc151a": [
                            "pie"
                        ],
                        "eabab409-8ce7-499f-a4fb-d71356ada13b": [
                            "eventdate"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "9314b075-ac0f-4659-9fed-9be21931ada1",
                    "type": {
                        "namespace": "ol",
                        "name": "disposition"
                    },
                    "title": "A disposition, solution, result.",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "b4537358-a051-417a-832a-045d59c13b7f",
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "edaca5dc-9255-460a-8013-e31ace5723db",
                    "type": {
                        "namespace": "ol",
                        "name": "arrestedby"
                    },
                    "title": "Arrested by",
                    "description": "(Person) is arrested by (Authority).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "88f6294a-8b73-45e3-a0ec-8ebfb75a930e",
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "e13743e7-babd-49a0-93e5-f93c8b7502cc",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "jailrecord"
                    },
                    "title": "Jail stay/record (-d)",
                    "description": "A jail stay/record.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "6900fcb7-f44d-4b65-b392-40617dea5fed"
                    ],
                    "properties": [
                        "6900fcb7-f44d-4b65-b392-40617dea5fed",
                        "81b3073b-e01f-4b69-9b64-03fcea0ccab7",
                        "2216f875-9645-4786-b062-9ec3960e4630",
                        "e32ceae7-c00b-4e9f-bf98-0f03e94fb566",
                        "18f2e4c6-86ce-4f5d-ad8f-0eb018947371",
                        "a67bcbdd-f9e1-4830-9730-d88a419a693d",
                        "523de719-c894-4bed-91ec-3b1d2fa51f4c",
                        "5d37978a-b658-462a-8903-4a9a2d2d69e3",
                        "cccdf498-4c90-4015-85c3-2a83536b705a",
                        "656ded15-4503-4623-977f-b1188a64cafa",
                        "3cfead4f-09ce-4ef8-bd03-a70dce298ac5",
                        "7c2953f9-babd-4ecf-9adf-fc20ff1f9fa9",
                        "62c82f33-295a-4437-8a3c-2d409c1e2224",
                        "e3b223ce-4f91-4125-be4d-ec7371382823",
                        "f3b41e19-d1e9-4004-8763-b514a93983d2",
                        "92ecb196-23f1-4ab4-a8c3-084ccbcc151a",
                        "d146903f-9196-40b8-90ce-3a0e8e4557a5",
                        "2a590340-a360-4456-af81-949f6d490a88",
                        "d5cd8ae6-f0de-48fe-9139-89108adedc19",
                        "4d5db4fe-a0c8-45f8-af6d-cd7cd4cab86c",
                        "c7d2c503-651d-483f-8c17-72358bcfc5cc",
                        "49adf7e7-1962-44c0-a683-4091366e03fd",
                        "26990519-ac4e-4dc9-9559-f9b500a728da",
                        "b730b3b3-d442-45a1-8d81-c082b1dd3a45",
                        "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                        "f9404d36-7cbb-462c-88d8-033b494afe10",
                        "5641cb0f-07ac-4f88-8fd2-da2f8d40d68c",
                        "1bde9fa3-7bdf-437e-81f3-ce50944bfb1e",
                        "77f1e62e-a648-4be1-84c8-c3712eef3ff3",
                        "2b509f15-cb22-4515-8638-088641a0ca86",
                        "73cc64b4-6b03-40aa-85fe-9492847587d2",
                        "52722320-b04e-41ae-95b3-ec670256e0b9",
                        "cfea602e-9b53-4f10-8c2f-97173b77003d",
                        "49c477f2-95bb-4fe2-a654-e2c1c8419304",
                        "1901c0b0-f051-4660-8d6d-b5a040dc9dcb",
                        "3e1ba12f-13cf-475c-bdeb-033381785ce5",
                        "c16ab352-3099-4579-b900-40d54fec44c6",
                        "14908e47-923a-4c87-8d94-5881bf871cc1",
                        "e6d740ac-daa7-40e6-b864-c83d5054fa21"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "014aa343-58e4-4b7b-93e2-ae4c9035f6a0",
                    "type": {
                        "namespace": "demographics",
                        "name": "haskinties"
                    },
                    "title": "Has kin ties to",
                    "description": "Association linking an individual to a household.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "6606dbf5-3823-457e-a0bd-adad141e46e0",
                        "c22b7629-4323-4d69-94fd-dae4d64df69c",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "3c6dad54-c4b4-4dfb-bd8b-d8dd56e342ec",
                    "type": {
                        "namespace": "ol",
                        "name": "vehicle"
                    },
                    "title": "A vehicle.",
                    "description": "The record of a vehicle.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "43a6df96-1cb8-4daa-9a82-f9361b8777c7",
                        "ae27e6cd-701b-4952-b3ee-4ecbeeeb2eea",
                        "8c798836-862f-4a84-af8b-0c982b11dfae",
                        "93b8b60b-bcfc-4778-99b8-8c57ce6cb502",
                        "f9398bdd-3f01-4628-9e3d-1c0bf7ed098e",
                        "5470892c-00f4-4511-ab04-495b3061afa3",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "539d322d-41d0-4596-aceb-17551af9b0ae",
                        "592062ad-d868-4bcf-8ee0-daa1331fc138",
                        "9177cb91-4596-4efc-b9f2-2335528c3376",
                        "686bb9d4-766d-4ff5-bf63-a0d43bd6e9fc",
                        "afe0e263-adf3-4803-9053-2566f0220075",
                        "0f95049c-b668-49b1-bf32-f26835471b0a",
                        "881c2601-f3b9-40cd-bb9b-86e811182156",
                        "28d661b8-a45a-41b6-aec4-ed9988fa28dc",
                        "e90a306c-ee37-4cd1-8a0e-71ad5a180340",
                        "b916c940-9e7f-434d-b502-05fbdc2845b2",
                        "9b8f0010-d5e9-4ca0-9024-6d821d7075d6",
                        "80be96e6-58e5-4015-a851-312c9c2327bd",
                        "f2dbdc90-bf80-43d4-b015-196864ac4045",
                        "32409c03-12eb-4d11-89ea-bf445de05670"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "20ae81b5-7574-460f-89be-a66e10ffa67e",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "dispatchzone"
                    },
                    "title": "Dispatch Zone",
                    "description": "Details on a dispatch zone for a call for service.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "bce1d15e-25c6-414f-ba0f-74bf22d13028"
                    ],
                    "properties": [
                        "16eae16e-b1f1-404c-94af-a644f5ca4cc2",
                        "1e599c37-727e-45b8-a0be-310e095cab62",
                        "458118b4-c6f9-4c48-84a5-388082e4edf8",
                        "85806174-c305-483d-8e18-1bf8f6d5ca39",
                        "bca0e150-9965-4e9f-9508-1efc4fdcf16e",
                        "bce1d15e-25c6-414f-ba0f-74bf22d13028",
                        "a81d9aa4-a664-4efc-ab19-87612a3cd198"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "33f389fe-9ff6-41eb-b7f9-aa1aad545014",
                    "type": {
                        "namespace": "ol",
                        "name": "offense"
                    },
                    "title": "Offense.",
                    "description": "A law enforcement offense",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "80be96e6-58e5-4015-a851-312c9c2327bd",
                        "b94361f0-7172-4556-a4f3-99a183bff03c",
                        "c228a9c8-e0f3-4bb0-8b09-78b2c6162caa",
                        "bc7869bd-f646-4e0c-89ad-ae77cdadb3ef",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "29e89dab-2d08-4d19-922f-18b611cd12f1",
                        "98795356-940f-42c2-9929-383931cac3bf",
                        "e1fc2e45-eb5f-42db-b906-c6eaf2a4fb53",
                        "c79cd283-bfa4-4393-aa82-efb0d0e63a17",
                        "1130598d-991c-43d5-911b-a824d9af0fb7",
                        "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                        "c97555a0-ed79-4944-a000-ab961da3ab48",
                        "d673e32c-6e67-4885-8e30-47e98f6229f2",
                        "729da80b-be28-496d-b6ce-bb118024408e",
                        "24091b3a-9093-4db3-a540-9d83f4f76e01",
                        "fee00dc4-6e57-421a-8414-18c956ee192f",
                        "6e43eb85-276b-4855-b96c-24f701a58389",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "1e5bc2c5-3320-4ae0-b4eb-38edf65a4942",
                        "351e51ad-9f7e-4bd5-a237-84b16e1e1ce8",
                        "39e3e0d1-d5c4-4422-a88d-e5e442e8a667",
                        "12a03e63-d114-4593-90d1-bb8bdb68e14b",
                        "6f995298-c6b7-4f9c-b9a2-81d873a7c692",
                        "a2bfb6fb-c1ac-4343-9aff-87ad0f910a9e",
                        "cdb38749-8e44-440b-87db-544ac510034c"
                    ],
                    "propertyTags": {
                        "6e43eb85-276b-4855-b96c-24f701a58389": [
                            "pie"
                        ],
                        "b94361f0-7172-4556-a4f3-99a183bff03c": [
                            "eventdate",
                            "timeline"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "85bf7f0d-40e5-40d4-a403-60557afeff1f",
                    "type": {
                        "namespace": "health",
                        "name": "assessedwith"
                    },
                    "title": "Assessed with (-d)",
                    "description": "An assessment given to a person, including medical, health, and housing. NOTE this FQN will be changed to general.assessedwith later.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "6675a7e8-2159-41b1-9431-4053690fa3c9"
                    ],
                    "properties": [
                        "6675a7e8-2159-41b1-9431-4053690fa3c9",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "e4c4cac8-aa44-4b99-9c6d-d3b3c6ef0734"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "589c5599-895c-497c-8864-3488d9ff4402",
                    "type": {
                        "namespace": "ol",
                        "name": "clearedby"
                    },
                    "title": "Cleared by",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "76677f67-c0bf-4db9-bc9c-c050828ba477",
                    "type": {
                        "namespace": "ol",
                        "name": "sentencedwith"
                    },
                    "title": "Sentenced With",
                    "description": "(Person) sentenced with (Sentence).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "7229eb9e-f1bd-4bc9-b0aa-8de827ca968a",
                    "type": {
                        "namespace": "medical",
                        "name": "respiratoryassessment"
                    },
                    "title": "Respiratory Assessment",
                    "description": "Respiratory Assessment",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "59666069-adae-4974-b328-c96340c4af75"
                    ],
                    "properties": [
                        "59666069-adae-4974-b328-c96340c4af75",
                        "1c8ab6f0-e77b-42da-8140-becc02e6fd19",
                        "2d975f4a-a244-4651-909c-3f4eb7ec27cc",
                        "471a09ff-645d-4d44-841e-ae35c3884cb7",
                        "4b1e5b1a-f4ea-4644-8317-1f5e7f47220d",
                        "502b0172-e6bf-42f1-a03f-ea9045909360",
                        "631c1f02-3991-4644-a9d5-28aa16103ab9",
                        "6c1e2180-ac87-4f9f-ac40-2dd741aa5f93",
                        "e0fda4d0-b19b-422c-a702-d30d9e89d024",
                        "169fff94-d733-4b50-8096-61ea13d80be4",
                        "8e4b71ea-30b3-4123-a63b-59ce3c94e9d7",
                        "f580437c-f2c9-4ea1-99ee-3ef099bc0a4b",
                        "c16ab352-3099-4579-b900-40d54fec44c6"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "0d02fc2b-561d-4de9-ac14-611b54a99eb9",
                    "type": {
                        "namespace": "housing",
                        "name": "stay"
                    },
                    "title": "Supportive Housing/Shelter Stay",
                    "description": "Details about a person or household's stay in supportive housing, a shelter, or other temporary housing program.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "e5c16bdb-bddb-4daa-9daf-89a99d227202",
                        "07dcc100-037d-4b6f-9062-35126b2f1318",
                        "b63ac291-3a26-4d99-8677-1e1c0f5c44da",
                        "c8a675e0-c45f-4343-a538-86d609223bd0",
                        "d8d5cd4c-0262-4dbe-b446-97dc913a4b3b",
                        "57d24585-7aec-43b7-b0f9-4162321366de",
                        "c9937ae9-4602-4c28-b719-3575aad643f4",
                        "047e196d-695b-4568-8932-ca6932156b1b",
                        "92fcd6e9-6839-42b4-83fa-47716b647ef6",
                        "22d68e05-8579-42b1-a188-c05bfe0773b7",
                        "f3b41e19-d1e9-4004-8763-b514a93983d2",
                        "1ceaf4eb-dace-4b3a-961e-e3fe4beb7c7c",
                        "e6cdba08-218f-427b-9aa8-ebfcbd5c148a",
                        "2a659e04-9a9b-43d7-9585-7bcf6d1cf25d",
                        "02379201-8815-489d-a056-37e36d299aae",
                        "32eba813-7d20-4be1-bc1a-717f99917a5e",
                        "2cb50324-4126-4ee4-9698-c9185e4bad92",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "92a6a5c5-b4f1-40ce-ace9-be232acdce2a"
                    ],
                    "propertyTags": {
                        "07dcc100-037d-4b6f-9062-35126b2f1318": [
                            "breadcrumbs"
                        ],
                        "1ceaf4eb-dace-4b3a-961e-e3fe4beb7c7c": [
                            "breadcrumbs"
                        ],
                        "c8a675e0-c45f-4343-a538-86d609223bd0": [
                            "timeline",
                            "eventdate"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "503bc786-437c-4591-9e4e-64e7d4d1286a",
                    "type": {
                        "namespace": "ol",
                        "name": "relative"
                    },
                    "title": "A relative (eg. brother, sister), to be used when the name is unknown.",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "dfe90a24-41ec-4b7d-8051-8bcbc81dc630"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "4bae15fb-4e1b-48ed-bf87-476df148b1c4",
                    "type": {
                        "namespace": "ol",
                        "name": "kinto"
                    },
                    "title": "Kin to",
                    "description": "(Person) is kin to (Person).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "c1d76f87-b32b-4b7f-b24f-5c4b1f30aa78",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "offense"
                    },
                    "title": "Offense (-d)",
                    "description": "A criminal justice offense",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "9b2bd81e-51cc-44ce-9051-18d833762848"
                    ],
                    "properties": [
                        "9b2bd81e-51cc-44ce-9051-18d833762848",
                        "c228a9c8-e0f3-4bb0-8b09-78b2c6162caa",
                        "d673e32c-6e67-4885-8e30-47e98f6229f2",
                        "c97555a0-ed79-4944-a000-ab961da3ab48",
                        "cd901bfa-d785-4d96-8969-6df2fb69f04e",
                        "eabab409-8ce7-499f-a4fb-d71356ada13b",
                        "5f122ec5-f8cd-4618-8bfa-3f387141616c",
                        "c16ab352-3099-4579-b900-40d54fec44c6",
                        "1956bf5b-a597-4ba4-bcef-5b286ac83339",
                        "8de9d1f4-9fe1-4056-a342-9142b227fd86",
                        "8d86916c-af7e-46bd-9890-061643b6ea6f",
                        "e6eafc89-f9e7-436b-b267-054854c4d564",
                        "73224904-f769-47c6-85f0-d70c519b54cd",
                        "bc7869bd-f646-4e0c-89ad-ae77cdadb3ef"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "f5942bd5-685c-4a37-be0a-d55a3c952aa4",
                    "type": {
                        "namespace": "ol",
                        "name": "chargedby"
                    },
                    "title": "charged by",
                    "description": "(Person) is charged by (Authority).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "963b597b-b28d-4f59-b2e6-4d443499e464",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "callforservice"
                    },
                    "title": "Call For Service (CFS)",
                    "description": "A dispatch Call For Service",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "2080c6bb-5c37-4eb2-b629-3fe09b665d42"
                    ],
                    "properties": [
                        "2080c6bb-5c37-4eb2-b629-3fe09b665d42",
                        "9f91239a-9614-4a70-b36d-e70c5da6fdaa",
                        "6335ec93-dd81-4106-b44b-faafce66b209",
                        "10cefc62-376a-48f3-b50d-8bad86bcf27a",
                        "68199414-1903-4d4c-ae39-7609f9c997b4",
                        "b9170d9b-8265-452c-b9e8-ebeab5f7556f",
                        "919bfdc2-5da7-4e73-8418-081504e14309",
                        "88626667-643d-4735-a2de-6471444f9b55",
                        "21c3cfd0-db1c-4641-b248-b3fbd7142658",
                        "cdad2fdb-5696-4676-8afa-144f09aa011e",
                        "10839c42-2252-4630-ab22-a9752333a601",
                        "323de7c8-a374-4e45-ab0d-ff8b7fabe094",
                        "c730490e-8a36-481d-ae11-84aa76e97a38",
                        "c938eb9b-15da-4b87-bf0a-006e290db4ec",
                        "71fe0840-fb24-4867-a23c-47a96c517141",
                        "88acd844-6aa1-4256-995c-8b67d2dd8201",
                        "a9c96e5a-fb7c-44d3-ad32-44b25cdfdbd3",
                        "c7cdf0a9-db29-4ffc-96f7-52bcb73750ab",
                        "b4537358-a051-417a-832a-045d59c13b7f",
                        "b8fcea6c-fb18-4050-bb54-2fa86ea4dae1",
                        "496de432-d25e-45b8-b252-682a588bfc32",
                        "e785d73d-5ae9-4880-988b-6ce6b364b814",
                        "13c7f654-085d-4cd0-9db2-674df9c69dda",
                        "b916c940-9e7f-434d-b502-05fbdc2845b2",
                        "a773c790-6564-4e5a-8f83-fbb0f45bd7a9",
                        "00e11d1a-5bd7-42bd-89a5-a452d4f6337e",
                        "9d30c278-13cd-47c5-9e20-d677facced23",
                        "c97555a0-ed79-4944-a000-ab961da3ab48",
                        "2904c8ac-61d5-4075-a952-a761ae70242d",
                        "8cf0d1a8-439a-402d-85c3-572a93e07ff8",
                        "7008752d-b95f-4557-ac7a-17deb450bf74",
                        "ccb90ce4-4343-4478-bfc5-d7167a45557f",
                        "3f52e7f5-57fa-4a29-93bb-6fe5e7e3f327",
                        "01c9ad01-1403-4d35-8764-e15c048a38e5",
                        "0e1bdba4-7dc9-4c48-a147-996573fa6fcd",
                        "c16ab352-3099-4579-b900-40d54fec44c6",
                        "736818e8-0ad9-4c83-8b53-3e00005fed2b",
                        "0d240f48-9347-46f7-a79e-b11ffdece2a8",
                        "1256d3f4-2a83-44d0-8b1d-389803b28314",
                        "0b68c2cd-4c03-43e6-b1c8-fe6187b0eae3",
                        "6675a7e8-2159-41b1-9431-4053690fa3c9"
                    ],
                    "propertyTags": {
                        "0b68c2cd-4c03-43e6-b1c8-fe6187b0eae3": [
                            "timeline",
                            "eventdate"
                        ],
                        "10839c42-2252-4630-ab22-a9752333a601": [
                            "breadcrumbs"
                        ],
                        "b4537358-a051-417a-832a-045d59c13b7f": [
                            "breadcrumbs"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "08f9f560-98b9-4804-a7b8-f286f4b144fb",
                    "type": {
                        "namespace": "medical",
                        "name": "gastrointestinalassessment"
                    },
                    "title": "Gastrointestinal Assessment",
                    "description": "Gastrointestinal Assessment",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "3149240c-7b95-4bbb-81ae-53b8c741cc2a"
                    ],
                    "properties": [
                        "16d201e5-f74a-4102-b1f7-5e536a327a25",
                        "1e9937aa-be99-4c97-9d8f-286c4e7bae9b",
                        "29d50517-8c66-4e0b-bd45-86d9309defb5",
                        "2c82974e-1ea1-443e-af28-b879b0d138c9",
                        "3149240c-7b95-4bbb-81ae-53b8c741cc2a",
                        "733061ae-ea7a-4939-b423-03cfc7162c09",
                        "858bf5b6-f771-4672-aaf5-8e4992350d1c",
                        "9aed27a9-c179-4dc3-b94a-b949979baa78",
                        "ad4b2034-16f9-4394-89f7-5614f33e920c",
                        "c16ab352-3099-4579-b900-40d54fec44c6",
                        "c5190846-21c0-4819-8bcb-99be5674bcd9",
                        "f046b68a-cc58-4e81-a22a-177c3eb2f78f",
                        "a4952023-21ba-4670-bdcd-514b3d3c82fe",
                        "c1eb6087-a4ec-441d-8c57-b1ac4fb2aebb",
                        "f6ad21f8-f7ad-43c9-a001-83fc7a616e9d",
                        "fed877c8-eb2a-4714-92c8-3b586bd2c4e7",
                        "7c101eeb-3fd3-448b-b606-16e2da4f6d18",
                        "93cfb4a2-3911-4a64-8488-d07a0266e48f",
                        "66ff6445-bf61-44e9-a661-32810e4a8025",
                        "1df87330-510d-421d-9731-b8412e68632c"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "a094e89f-3b4f-4e98-9d2c-12e604ae9d6a",
                    "type": {
                        "namespace": "ol",
                        "name": "releasedby"
                    },
                    "title": "Released by",
                    "description": "Links together an officer/agency with someone they are releasing. (Person) released by (Authority).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "4c21bcc3-0d4c-40ba-95cd-275a763f94ef",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "incident"
                    },
                    "title": "Incident (-d)",
                    "description": "A police incident",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "3ca03e79-6b50-4fc4-94a0-17b25eabae34"
                    ],
                    "properties": [
                        "3ca03e79-6b50-4fc4-94a0-17b25eabae34",
                        "999dbc43-519f-43b2-8119-73a2ef196bf5",
                        "477db70c-ee49-41bf-97d2-c4eb0e1ffcc4",
                        "91106b89-5842-48e4-a21f-ef923557c1b8",
                        "eabab409-8ce7-499f-a4fb-d71356ada13b",
                        "5f122ec5-f8cd-4618-8bfa-3f387141616c",
                        "13ad1d8a-24da-4c5d-9168-018d33979007",
                        "25431c60-6c26-4210-a422-569c5226ba7e",
                        "c228a9c8-e0f3-4bb0-8b09-78b2c6162caa",
                        "c97555a0-ed79-4944-a000-ab961da3ab48",
                        "d673e32c-6e67-4885-8e30-47e98f6229f2",
                        "9d2d4a0e-26af-46c8-b366-fd872dbc5506",
                        "062fd4f6-30c0-4a4a-a221-18bb1da2cb88",
                        "f7c87cb1-7ddd-4dec-b634-bef6f184a557",
                        "e71e3faa-fc19-45f8-87e7-c3e2449a1dac",
                        "c2b18c7a-6625-4a31-8196-a8d3cb0e3309",
                        "19466bb0-eeba-4c69-9ab1-8999b3cb43bf",
                        "8de9d1f4-9fe1-4056-a342-9142b227fd86",
                        "80c3ffc7-5a8a-4547-8d60-dfb0b06e92b4",
                        "285e6bfc-2a73-49ae-8cb2-b112244ed85d",
                        "cb92bd0b-0338-4f93-9936-e857e12be830",
                        "6f995298-c6b7-4f9c-b9a2-81d873a7c692",
                        "b94361f0-7172-4556-a4f3-99a183bff03c",
                        "e6d790e8-f2aa-457f-9597-369cf7e0214a",
                        "92a6a5c5-b4f1-40ce-ace9-be232acdce2a",
                        "bd96f0c8-dbc0-49cd-b3a2-bb3faa9d6860",
                        "d7a0c31f-6bea-4818-a299-7378b5516df2",
                        "f105dd1b-1c71-4042-8ea8-53013070d9da"
                    ],
                    "propertyTags": {
                        "91106b89-5842-48e4-a21f-ef923557c1b8": [
                            "timeline",
                            "eventdate"
                        ],
                        "c228a9c8-e0f3-4bb0-8b09-78b2c6162caa": [
                            "breadcrumbs"
                        ],
                        "d673e32c-6e67-4885-8e30-47e98f6229f2": [
                            "breadcrumbs"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "a404cc39-0259-4c8e-91b5-8def2071d997",
                    "type": {
                        "namespace": "ol",
                        "name": "transportedby"
                    },
                    "title": "Transported by",
                    "description": "Links together an officer/agency with someone they are transporting.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "cf9b4d36-6f1a-4e6f-94f0-6458054fc567",
                    "type": {
                        "namespace": "ol",
                        "name": "contactinfogiven"
                    },
                    "title": "(Contact information) given to (entity)",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "564b21e8-3132-4eb5-8124-65f54ceee5c2",
                    "type": {
                        "namespace": "ol",
                        "name": "receivedby"
                    },
                    "title": "Received by",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "c11a8547-1a2f-41d8-b983-cc568f0f83ac",
                    "type": {
                        "namespace": "geo",
                        "name": "locatedat"
                    },
                    "title": "Located At (-d)",
                    "description": "Links together a person with a location.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "25431c60-6c26-4210-a422-569c5226ba7e",
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                        "f5628aca-71b2-40fe-ad66-374cb1f4d506"
                    ],
                    "properties": [
                        "25431c60-6c26-4210-a422-569c5226ba7e",
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "f5628aca-71b2-40fe-ad66-374cb1f4d506"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "553cd731-73de-4377-bad8-ab4ec8b65b58",
                    "type": {
                        "namespace": "ol",
                        "name": "contactedat"
                    },
                    "title": "Contacted at (-d)",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "167c2511-b07f-416b-8e34-62b2a546d0e7",
                    "type": {
                        "namespace": "general",
                        "name": "occurredat"
                    },
                    "title": "Occurred At",
                    "description": "Links together a event with a location where it occurred.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "25431c60-6c26-4210-a422-569c5226ba7e",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "25431c60-6c26-4210-a422-569c5226ba7e",
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "5003d581-0cc3-4d05-b4e2-a62f56d28bb9",
                    "type": {
                        "namespace": "ol",
                        "name": "oflength"
                    },
                    "title": "Length of",
                    "description": "(Something) is of length (Length entity).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "061a7746-158b-4f1c-b1c3-82ee9aa95aad",
                    "type": {
                        "namespace": "ol",
                        "name": "searchedby"
                    },
                    "title": "Searched by",
                    "description": "(Person) is searched by (Authority).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "44740981-b05c-43a1-91a7-e62e4737fe52",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "arrestedin"
                    },
                    "title": "Arrested In",
                    "description": "An arrest (associated with an incident, case, or booking)",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "c9309ba8-a674-48c5-bfee-8bb797f9fe31",
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2"
                    ],
                    "properties": [
                        "c9309ba8-a674-48c5-bfee-8bb797f9fe31",
                        "c16ab352-3099-4579-b900-40d54fec44c6",
                        "5260cfbd-bfa4-40c1-ade5-cd83cc9f99b2",
                        "1fe28610-d4f6-4608-99d4-0c2b6e805703",
                        "d673e32c-6e67-4885-8e30-47e98f6229f2",
                        "c228a9c8-e0f3-4bb0-8b09-78b2c6162caa",
                        "c97555a0-ed79-4944-a000-ab961da3ab48",
                        "4d5db4fe-a0c8-45f8-af6d-cd7cd4cab86c",
                        "7c0f56bb-e77c-4a2a-8e17-4542849aeeda",
                        "8ab6e5e1-9ef7-4e83-94f1-2ad685c75915",
                        "80c3ffc7-5a8a-4547-8d60-dfb0b06e92b4",
                        "30273603-b5be-4277-8ef3-a5540447ca5f",
                        "25431c60-6c26-4210-a422-569c5226ba7e",
                        "8388b7cc-19eb-411f-9af1-57999eeb27e0",
                        "5d37978a-b658-462a-8903-4a9a2d2d69e3",
                        "88f6294a-8b73-45e3-a0ec-8ebfb75a930e",
                        "57d24585-7aec-43b7-b0f9-4162321366de",
                        "e6eafc89-f9e7-436b-b267-054854c4d564",
                        "4cc82f90-fb84-426d-acb0-530c96008b1d",
                        "1956bf5b-a597-4ba4-bcef-5b286ac83339",
                        "1a99a9f7-c9fa-4cc9-9e29-1370c440f392"
                    ],
                    "propertyTags": {
                        "30273603-b5be-4277-8ef3-a5540447ca5f": [
                            "timeline",
                            "eventdate"
                        ]
                    },
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "0257769a-7b29-4ee3-9d64-dc2e7fcbab60",
                    "type": {
                        "namespace": "geo",
                        "name": "address"
                    },
                    "title": "Address (-d)",
                    "description": "Address",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        },
                        {
                            "namespace": "ol",
                            "name": "deprecated"
                        }
                    ],
                    "key": [
                        "34888d10-4c3b-4400-9426-23dfc3d0f8e5"
                    ],
                    "properties": [
                        "3cd2facf-9ae4-4fff-8e97-c0fe6f435193",
                        "63dd667e-566c-4851-9d19-f4bb5f1374e8",
                        "25431c60-6c26-4210-a422-569c5226ba7e",
                        "3677e8ea-5da9-41f3-8b56-006548564eac",
                        "4dfd7e4f-207a-4591-8cf3-2e5c9c7d0e53",
                        "6a85d1e1-fda5-4c9c-9e2e-2dda4ed8d3d1",
                        "e96f4905-e323-47b6-be43-2a356fd82e08",
                        "132820b9-6f20-40c8-945f-9ca2ec45e233",
                        "64fb51c4-a1f1-4a52-aeda-73b7ff071c54",
                        "90d8c6f6-385d-4064-a582-ad95a0ccc040",
                        "06083695-aebe-4a56-9b98-da6013e93a5e",
                        "e8f9026a-2494-4749-84bb-1499cb7f215c",
                        "32eba813-7d20-4be1-bc1a-717f99917a5e",
                        "f43dccfe-7dbe-425a-a2c0-eb104daba964",
                        "314d2bfd-e50e-4965-b2eb-422742fa265c",
                        "34888d10-4c3b-4400-9426-23dfc3d0f8e5"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "e33ad963-60fd-489d-8cdb-9faca522e18a",
                    "type": {
                        "namespace": "ol",
                        "name": "agency"
                    },
                    "title": "An agency",
                    "description": "",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "f9010dd8-ce62-4d2f-a6a7-e4cf32ec6940",
                        "7acb8cda-34bc-4fbc-b320-7481debfa294",
                        "84b850d8-4fb8-4507-b0f6-0b0466d39c0a",
                        "80be96e6-58e5-4015-a851-312c9c2327bd"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "aa29d6c3-1cb9-445f-b722-07f6a40efa31",
                    "type": {
                        "namespace": "ol",
                        "name": "resultsin"
                    },
                    "title": "results in",
                    "description": "An association which describes that one entity results in another. (Event) results in (Event).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "dbd01c6f-42bb-46b1-9401-ac92c0592498",
                    "type": {
                        "namespace": "medical",
                        "name": "withdrawalassessment"
                    },
                    "title": "Withdrawal Assessment",
                    "description": "Evaluation of the effects of substance use withdrawal. ",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "937cad34-5c38-44bd-9a12-e5237fd57a21"
                    ],
                    "properties": [
                        "937cad34-5c38-44bd-9a12-e5237fd57a21",
                        "6dd08404-92fc-485f-af92-806c83bffece",
                        "71ec1401-4765-4048-98c8-97b4b4a1703e",
                        "3a109ac6-daa2-4a37-adbc-abb6a6c021f9",
                        "1f66b596-91d9-4477-929f-60fd5dbe1fdc",
                        "afda612c-a914-4efc-bdb8-7511fdc18b8e",
                        "78aa14bd-2816-4829-bfda-32cf970ab760",
                        "c0c9af36-5d4a-4e5c-a28f-a699c02f99e4"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "fb30b015-690d-4310-b9ec-30596cbaf85d",
                    "type": {
                        "namespace": "ol",
                        "name": "dispatch"
                    },
                    "title": "Dispatch",
                    "description": "A dispatch (police, medical,...).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "e404a3f0-3e98-412f-b146-52aa80ec98c2",
                        "736818e8-0ad9-4c83-8b53-3e00005fed2b",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "f52ecac3-f1ab-46e4-8af8-3b8dcf68fe4d",
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "0b68c2cd-4c03-43e6-b1c8-fe6187b0eae3",
                        "c97555a0-ed79-4944-a000-ab961da3ab48",
                        "6675a7e8-2159-41b1-9431-4053690fa3c9",
                        "9f3bc9a7-cb01-4cb5-9d62-628912e7e637",
                        "b9170d9b-8265-452c-b9e8-ebeab5f7556f",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "7674c064-c8fb-42b0-a1ca-c7cab0e0829d",
                        "6e43eb85-276b-4855-b96c-24f701a58389",
                        "7ac3c170-7088-4765-bd23-6ec1d02f2d5f",
                        "1256d3f4-2a83-44d0-8b1d-389803b28314",
                        "4d5db4fe-a0c8-45f8-af6d-cd7cd4cab86c",
                        "7064b696-d3ac-4ca7-9340-8e9db996b36e",
                        "13c7f654-085d-4cd0-9db2-674df9c69dda",
                        "0f10a3f1-a020-4367-a261-750d979abfca",
                        "e5721ba0-f64e-4c19-8e7f-fbb016555a65",
                        "86b4bbbf-6006-4863-9f6b-7b1b2f707837",
                        "07c288b6-3425-4d83-bf38-60989de8f5e3",
                        "5b7a2aba-9d5a-4026-8a9a-319f00a8e4ac",
                        "b6dec135-54d1-493e-9202-8d72070ddce8",
                        "8c3baea2-1ab0-4eaf-be35-12d0ff7313da",
                        "fcb28385-93c7-48d8-86b6-f622ee670f1d",
                        "035c5134-52ba-4682-8391-60939c9b79ef",
                        "4101ac47-9d56-4910-aace-a99f058324a0",
                        "cc5dcf55-98e9-452f-955b-4139b165b772",
                        "12e40b86-c848-4f9e-bb5a-e9632835565b",
                        "300079e6-aaca-499d-8116-ae6812aaac44",
                        "d466fca6-1677-409b-98bd-01d96c519368",
                        "200a4b05-655f-419a-ba00-648747cb4b11",
                        "80be96e6-58e5-4015-a851-312c9c2327bd"
                    ],
                    "propertyTags": {
                        "9f3bc9a7-cb01-4cb5-9d62-628912e7e637": [
                            "timeline",
                            "eventdate"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "ee29fb9e-dad9-4b9a-a93a-e30d0c488266",
                    "type": {
                        "namespace": "demographics",
                        "name": "household"
                    },
                    "title": "Household, family",
                    "description": "A household or a family",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "2cb50324-4126-4ee4-9698-c9185e4bad92"
                    ],
                    "properties": [
                        "6606dbf5-3823-457e-a0bd-adad141e46e0",
                        "c22b7629-4323-4d69-94fd-dae4d64df69c",
                        "2cb50324-4126-4ee4-9698-c9185e4bad92",
                        "c23cf4b3-d0bf-4d3a-a507-396991a595ce",
                        "09108469-c88e-42e5-8dd3-491848405bb4",
                        "cd940361-dc39-4486-be20-a1d43757c20d",
                        "f28cc0f3-1065-42df-b43f-d70b313a25de",
                        "50b95693-1602-45ab-8846-98b3721ac208",
                        "d5a1b393-df47-485c-ad34-d77fd83acb5e"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "96b06ed5-98b0-42d0-964e-824953bc904f",
                    "type": {
                        "namespace": "general",
                        "name": "callreceivedby"
                    },
                    "title": "Call Received By (CFS to operator)",
                    "description": "\"Received by\" association connecting a call for service to an operator",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "0d240f48-9347-46f7-a79e-b11ffdece2a8"
                    ],
                    "properties": [
                        "0d240f48-9347-46f7-a79e-b11ffdece2a8"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "8b626558-cf1d-495d-a0f5-53bbb59bc25e",
                    "type": {
                        "namespace": "ol",
                        "name": "jailstaylength"
                    },
                    "title": "Jail stay length",
                    "description": "Details of a jailstay with respect to its duration.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "9bcfd1a5-804c-4bdd-a547-ad4494be4e1f",
                        "6557a4f5-1193-4a0f-a1d1-54f23c33722a",
                        "26990519-ac4e-4dc9-9559-f9b500a728da",
                        "6e22d468-4977-4bec-8b87-9a9a9b10963e",
                        "ffcf42d0-4134-4430-9f8f-d76cca10b9f2",
                        "b730b3b3-d442-45a1-8d81-c082b1dd3a45",
                        "d146903f-9196-40b8-90ce-3a0e8e4557a5",
                        "a866612a-2316-4b18-88c1-e19ce9a01f01",
                        "eabab409-8ce7-499f-a4fb-d71356ada13b",
                        "f3b41e19-d1e9-4004-8763-b514a93983d2",
                        "d15ace9d-fa1c-4db6-99fe-b009778cc781",
                        "d2b300d8-3f54-4dbd-8800-4838f82f522f"
                    ],
                    "propertyTags": {
                        "eabab409-8ce7-499f-a4fb-d71356ada13b": [
                            "timeline",
                            "eventdate"
                        ]
                    },
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "461c2d06-d7d6-4b5d-aa9e-3d0a4f9a6b6d",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "cfsorigin"
                    },
                    "title": "Call for service (CFS) Origin/Initiation",
                    "description": "Details on how a Call for Service is initiated or originated.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "0de9808a-d8e3-4f62-9413-e86e5ede304a"
                    ],
                    "properties": [
                        "915df70e-ebe3-4b59-9d4e-59c0609a5577",
                        "9d2d4a0e-26af-46c8-b366-fd872dbc5506",
                        "cebc61bf-9052-4e11-99af-3aa3113688a8",
                        "57d24585-7aec-43b7-b0f9-4162321366de",
                        "0de9808a-d8e3-4f62-9413-e86e5ede304a",
                        "39dc4d54-8fac-46ad-ae3d-e538123a9b30",
                        "e455b024-72bc-4dfe-b362-3852aadb8496",
                        "c16ab352-3099-4579-b900-40d54fec44c6"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "afe9d19d-99c5-481c-867d-42f01ce8143b",
                    "type": {
                        "namespace": "criminaljustice",
                        "name": "bookedin"
                    },
                    "title": "Booking (assn.)",
                    "description": "A booking (associated with an incident, case, or jail stay).",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988"
                    ],
                    "properties": [
                        "ee3a7573-aa70-4afb-814d-3fad27cda988",
                        "c228a9c8-e0f3-4bb0-8b09-78b2c6162caa",
                        "c97555a0-ed79-4944-a000-ab961da3ab48",
                        "d673e32c-6e67-4885-8e30-47e98f6229f2",
                        "c16ab352-3099-4579-b900-40d54fec44c6",
                        "e7ea04e3-5047-4d9c-9bbe-b0bffe2c9cd1",
                        "5ef69814-cd40-4209-ba7a-04f966c2fd00",
                        "57d24585-7aec-43b7-b0f9-4162321366de",
                        "8ce79ba8-b498-460a-a1b3-325954bb6d4f",
                        "f7f01aa6-159a-435f-901b-44e62679bc51"
                    ],
                    "propertyTags": {},
                    "category": "AssociationType",
                    "shards": 3
                },
                {
                    "id": "d038e8f6-5910-46b2-88e4-b028a5120a46",
                    "type": {
                        "namespace": "ol",
                        "name": "charge"
                    },
                    "title": "A charge",
                    "description": "A law enforcement charge.",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140",
                        "6e43eb85-276b-4855-b96c-24f701a58389",
                        "f957cc01-1969-46b8-bd76-b8006142779b",
                        "ddb5d841-4c82-407c-8fcb-58f04ffc20fe",
                        "bc7869bd-f646-4e0c-89ad-ae77cdadb3ef",
                        "d9e349fc-8207-4d46-a0cc-f2ec179cb6a8",
                        "a791ca8d-b433-4a2b-be04-43d43cea14a7",
                        "7ed19ef2-a1ed-48e3-b347-18a885914bee",
                        "1956bf5b-a597-4ba4-bcef-5b286ac83339",
                        "fee00dc4-6e57-421a-8414-18c956ee192f",
                        "1e5bc2c5-3320-4ae0-b4eb-38edf65a4942",
                        "351e51ad-9f7e-4bd5-a237-84b16e1e1ce8",
                        "39e3e0d1-d5c4-4422-a88d-e5e442e8a667",
                        "12a03e63-d114-4593-90d1-bb8bdb68e14b",
                        "c5e1a98e-bc92-4858-8d0f-2bcb9d59ec70",
                        "b8ec37cc-f27e-49d9-acb1-3e058e62f4e2",
                        "8404751e-014c-4202-ac10-ba7a9276e874",
                        "e41f8c94-5c15-4368-bf1c-08bcd2cccd70",
                        "cc9ddead-9e6f-4b3b-88a9-8aab20726045",
                        "42534a26-578b-4958-a7a8-3475e1597623",
                        "2a45205e-703c-43eb-a060-921bf7245f6a",
                        "80be96e6-58e5-4015-a851-312c9c2327bd",
                        "c2629909-32d0-4a23-8bab-fcdf639ba19c",
                        "cdb38749-8e44-440b-87db-544ac510034c",
                        "e481c9b7-d3b5-4c7a-bdfc-54ec801a541a",
                        "58929d33-1c01-42f1-891c-f3e55c4d4fc4"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "e2089bf9-9472-4f5a-bc64-7f0ca3adf966",
                    "type": {
                        "namespace": "publicsafety",
                        "name": "unit"
                    },
                    "title": "Unit",
                    "description": "A police patrol, fire, or other type of unit.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "c2e168ac-ded5-4f00-b282-e2896e394ab1"
                    ],
                    "properties": [
                        "56b657d7-22c1-4a69-911c-9d7bb915f11f",
                        "b916c940-9e7f-434d-b502-05fbdc2845b2",
                        "a773c790-6564-4e5a-8f83-fbb0f45bd7a9",
                        "c2e168ac-ded5-4f00-b282-e2896e394ab1"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "26b30a9c-4ff0-4b44-a26a-19c3195a6b16",
                    "type": {
                        "namespace": "ol",
                        "name": "bondset"
                    },
                    "title": "Bondset for",
                    "description": "(Bond) is set for a (Jailstay).",
                    "schemas": [
                        {
                            "namespace": "ol",
                            "name": "criminaljustice"
                        },
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "properties": [
                        "39e13db7-a730-421a-a600-ae0674060140"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                },
                {
                    "id": "8d713e79-21ff-41c3-9bcb-6d460f02a845",
                    "type": {
                        "namespace": "housing",
                        "name": "assessment"
                    },
                    "title": "Housing Resident Assessment (-d)",
                    "description": "Can be used for both admission assessments and discharge assessments.",
                    "schemas": [
                        {
                            "namespace": "v2",
                            "name": "v2"
                        }
                    ],
                    "key": [
                        "b2ba8787-68b4-448a-84a7-04acaf6ad4d5"
                    ],
                    "properties": [
                        "78916b55-22fe-4ed8-bde6-b819f4114dc9",
                        "18a2c775-3929-4937-b85b-758e66522d8d",
                        "02bee94a-5bc8-4c07-a902-b8698ce625b7",
                        "8f3d9dbd-6f2e-4f92-bf45-68809ab828d4",
                        "b470a3c9-016a-44ce-b855-8382ba53dca5",
                        "23b2104b-83d1-48e0-b884-a149a7da7315",
                        "49adf7e7-1962-44c0-a683-4091366e03fd",
                        "fafbf5d2-d681-4468-b7e3-3472c661b042",
                        "d8d5cd4c-0262-4dbe-b446-97dc913a4b3b",
                        "8d52f9b7-fe9d-4d09-aec4-bbbfee74f714",
                        "fb03ce47-10b5-4d39-8ccf-96e868a7f1e9",
                        "f63e82fe-5d2d-44fb-b7fa-d82ab6217d36",
                        "0965a96a-9799-4093-9020-79b0fa8340a3",
                        "37ff5f8d-3747-4242-8365-f9a09e239ea6",
                        "9dd6385b-50c9-43c2-bb86-9232cc187d1a",
                        "b8d807b2-6c7a-4d1b-add6-aac8e24f251b",
                        "314d2bfd-e50e-4965-b2eb-422742fa265c",
                        "ff610b7c-54e1-47e1-ba5e-4087b62f5164",
                        "cb81457e-c49d-4cd2-9d00-d82a4d1a9028",
                        "22d68e05-8579-42b1-a188-c05bfe0773b7",
                        "c5397609-0124-4c54-8ec9-79f82341d19d",
                        "10aa082b-7173-44ca-a00f-d629b874b598",
                        "a962a8ba-2c4c-4110-92b5-dc37c0d02e22",
                        "b996bdd3-1748-48a0-8348-a24feb4ea74f",
                        "aa6b31ce-f283-426c-b0e9-8bc4e459d4c5",
                        "3bdb9a7d-507c-4b7e-b728-cb3d4b96d837",
                        "a07f05f9-b19d-4e96-9851-c098bfed5050",
                        "293be234-531d-4253-82bc-57498395138c",
                        "dbf8c083-c8d7-47d3-bc4b-e91baaeef526",
                        "f8c070a6-6315-494d-b8b8-f413e2ace393",
                        "acdef6c8-348d-4c66-9ec2-2a082e838786",
                        "a07b2d64-d1a4-4555-a57d-470490920d32",
                        "36864a7e-ba1f-487d-adca-4dc55ba82700",
                        "1db0650e-8a68-4c6c-8b3a-fd7b89aabedd",
                        "1b959654-02fd-487b-adc3-eb6049a878ff",
                        "5a7afac3-471b-4b5a-8d58-d7748f0f2525",
                        "27246bfa-7496-4b8b-a5d5-aaf2398108dc",
                        "126c3754-281f-4c88-83ef-3c8c78198d5b",
                        "fa6e9c4d-09bd-46bc-a7f8-c1ac7c5d820e",
                        "c22b7629-4323-4d69-94fd-dae4d64df69c",
                        "6606dbf5-3823-457e-a0bd-adad141e46e0",
                        "a6487f5b-5212-4726-a5cd-4ddbf8f8355b",
                        "8cf711e4-5a75-4d02-84be-efc2611191eb",
                        "06acbbb5-2c9d-4e6c-a440-a3efa4f4f00e",
                        "543bfa76-a46d-4ec0-a00e-75678af4552c",
                        "1ec2ea70-eff1-46d1-a0c4-0e06a0c84bd4",
                        "bca1d47b-abbb-4755-a06c-2e1c15bea118",
                        "7b5a9dac-7111-4825-baeb-13edf11d65b3",
                        "b8a5ac4e-a501-4186-9b64-908844fb8425",
                        "04e9becf-0add-440b-b0da-f3cdf559c1d6",
                        "84bbabed-c6a2-4166-b743-92dcc743cae7",
                        "2bf49a3d-36d9-4e02-a824-1757d4ebc61f",
                        "8e15cc71-c2b5-4f1f-ae42-eb572ad66aa6",
                        "b2ba8787-68b4-448a-84a7-04acaf6ad4d5",
                        "19139922-3ff4-4c37-8d81-0bfe7cf10e28"
                    ],
                    "propertyTags": {},
                    "category": "EntityType",
                    "shards": 3
                }
            ]
        }
    ]
}